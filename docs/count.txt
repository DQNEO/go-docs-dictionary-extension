   1	mix	VB
   1	programming	NNP
   1	conventional	JJ
   1	sum	NN
   1	functions—happen	NN
   1	portable	JJ
   1	convenience	NN
   1	specifier	NN
   1	assemble	JJ
   1	disassemble	JJ
   1	garbage-collected	JJ
   1	subset	NN
   1	generator	NN
   1	attempt	NN
   1	attempt	VB
   1	already	RB
   1	overrid	VB
   1	length	NNP
   1	information	NN
   1	near	JJ
   1	regardless	RB
   1	regardless	NNP
   1	differently	RB
   1	manually	RB
   1	differ	NN
   1	differ	VB
   1	ebnf	NNP
   1	alternative	NN
   1	letter	NNP
   1	specifically	RB
   1	incdec	JJ
   1	program-defined	JJ
   1	half	NN
   1	unordered	JJ
   1	detail	NN
   1	issue	NN
   1	incur	VB
   1	right-hand-side	JJ
   1	receive	NNP
   1	conflict	VB
   1	test	VB
   1	launch	VB
   1	leftmost	NN
   1	printing	NN
   1	subexpression	NN
   1	non-	JJ
   1	integrated	JJ
   1	assume	NNP
   1	repetition	NN
   1	speak	VB
   1	legally	RB
   1	path	NN
   1	introduction	NN
   1	immutable	JJ
   1	encount	VB
   1	irrespective	NN
   1	deriv	VB
   1	false	JJ
   1	notation	NNP
   1	sometimes	RB
   1	conditionally	RB
   1	reserf	NN
   1	direct	VB
   1	wish	VB
   1	larg	JJ
   1	label	NNP
   1	substitution	NN
   1	align	VB
   1	square	JJ
   1	semantically	RB
   1	simple	JJ
   1	stop	NN
   1	structured	NNP
   1	structured	JJ
   1	lower	JJR
   1	light-weight	JJ
   1	period	NN
   1	qualifier	NN
   1	fall	VB
   1	non-complex	JJ
   1	suppose	VB
   1	raw	NNP
   1	tuple	JJ
   1	non-terminal	NN
   1	wrap	NN
   1	further	JJ
   1	import	NNP
   1	choos	VB
   1	oppos	VB
   1	becom	VB
   1	originally	RB
   1	uniform	JJ
   1	curly	RB
   1	common	JJ
   1	importpaths	NNP
   1	own	JJ
   1	grow	VB
   1	labels	NNP
   1	skips	PDT
   1	support	NN
   1	inherit	VB
   1	fused	JJ
   1	negation	NN
   1	alias	NNP
   1	backward	JJ
   1	duplicate	NN
   1	single-character	JJ
   1	not-a-number	JJ
   1	annot	VB
   1	anew	RB
   1	design	VB
   1	spec	NN
   1	lm	NNP
   1	wide	JJ
   1	embeddedfield	NNP
   1	constrain	VB
   1	integral	JJ
   1	fusion	NN
   1	fma	NNP
   1	field	NNP
   1	passing	NN
   1	sequential	JJ
   1	copy	NN
   1	accurately	RB
   1	safety	NN
   1	bootstrapping	NNP
   1	continu	VB
   1	control	NN
   1	multi-character	JJ
   1	camelcase	NNP
   1	top	JJ
   1	initializer	NN
   1	initializer	JJ
   1	go	VB
   1	imaginary	NNP
   1	hypothetical	JJ
   1	surrogate	JJ
   1	n-bit	JJ
   1	portability	NN
   1	organization	NN
   1	document	VB
   1	utf-8-encoded	NNP
   1	trigger	NN
   1	superset	NN
   1	typeswitchcase	NNP
   1	process	NN
   1	continue	NN
   1	continue	NNP
   1	literally	RB
   1	selection	NN
   1	encode	NN
   1	alone	RB
   1	add	VB
   1	exit	VB
   1	non-constant	NN
   1	specification	NNP
   1	affect	VB
   1	nn	JJ
   1	multi-byte	NN
   1	available	JJ
   1	turn	NN
   1	unit	NN
   1	non-interface	NN
   1	enumeration	NN
   1	earlier	RBR
   1	round-to-even	JJ
   1	related	JJ
   1	iota	NN
   1	iota	NNP
   1	limited	JJ
   1	reverse	NN
   1	facility	NN
   1	multipli	VB
   1	plain	NN
   1	inclusive	JJ
   1	bootstrap	VB
   1	long	JJ
   1	compact	JJ
   1	close	NNP
   1	carri	VB
   1	read	VB
   1	divid	VB
   1	re-us	VB
   1	documentation	NN
   1	computation	NN
   1	linguistic	JJ
   1	variant	NN
   1	interface-valued	JJ
   1	conditional	JJ
   1	non-variadic	JJ
   1	overwrite	VB
   1	incoming	NN
   1	typespec	NNP
   1	normal	JJ
   1	stream	NN
   1	unparenthesized	JJ
   1	types—may	RB
   1	creation	NN
   1	too	RB
   1	optimize	VB
   1	idiomatic	JJ
   1	structurally	RB
   1	running	NN
   1	strongly	RB
   1	multi-way	JJ
   1	build	JJ
   1	architecture-independent	JJ
   1	typename	NNP
   1	typename	NN
   1	form	NNP
   1	precise	JJ
   1	here	RB
   1	architecture	NN
   1	constraint	NN
   1	or	NNP
   1	fuse	VB
   1	uninterpreted	JJ
   1	second	NNP
   1	offset	NN
   1	return	NNP
   1	index	NNP
   1	unimported	JJ
   1	carriage	NN
   1	carriage	NNP
   1	begin	NN
   1	enter	VB
   1	illustr	VB
   1	belong	NN
   1	higher-dimensional	JJ
   1	send	NN
   1	send	JJ
   1	sent	NN
   1	indicate	VB
   1	white	NNP
   1	compile	JJ
   1	measure	NN
   1	phase	NN
   1	subsequent	JJ
   1	nothing	NN
   1	interpretation	NN
   1	correct	JJ
   1	manual	NN
   1	int	NN
   1	byte-wise	NN
   1	greater	JJR
   1	structure	NN
   1	goto	NNP
   1	assumption	NN
   1	insertion	NN
   1	insert	VB
   1	sender	NN
   1	resume	NN
   1	table	NN
   1	round	NNP
   1	first-in-first-out	JJ
   1	manage	VB
   1	moreover	RB
   1	reachable	JJ
   1	pseudo-random	JJ
   1	dereferenc	VB
   1	sufficiently	RB
   1	general-purpose	JJ
   1	formal	JJ
   1	get	VB
   1	compris	VB
   1	surviv	VB
   1	done	VB
   1	hexadecimal	NNP
   1	map	NNP
   1	full	NNP
   1	empty	RB
   1	format	NN
   1	modify	VB
   1	loosely	RB
   1	spell	VB
   1	fraction	NN
   1	reflect	VB
   1	fewer	JJR
   1	strong	JJ
   1	repository	NN
   1	other	NN
   1	development	NN
   1	computer	NNP
   1	circumstance	NN
   1	cycle	NN
   1	ensure	VB
   1	group	NN
   1	termination	NN
   1	rais	VB
   1	three-digit	JJ
   1	queue	NN
   1	segment	NN
   1	redeclare	VB
   1	room	NN
   1	blank	NNP
   1	accommodate	VB
   1	scope	VB
   1	rewritten	VB
   1	value-receiver	JJ
   1	language	NNP
   1	assignability	NNP
   1	addressability	NN
   1	state	NN
   1	state	VB
   1	arise	NN
   1	advance	VB
   1	advance	NN
   1	canonic	VB
   1	significantly	RB
   1	parsing	JJ
   1	no-op	JJ
   1	minimal	JJ
   1	representability	NNP
   1	rare	JJ
   1	current	NNP
   1	broken	VB
   1	environment	NN
   1	descriptor	NN
   1	influence	NN
   1	extra	JJ
   1	still	RB
   1	low-level	JJ
   1	size	NNP
   1	solely	RB
   1	placeholder	NN
   1	event	NN
   1	quot	VB
   1	left-	JJ
   1	constituent	NN
   1	object	NN
   1	power	NN
   1	initialization—variable	JJ
   1	occupy	VB
   1	encourag	VB
   1	receive-only	JJ
   1	prime	JJ
   1	informally	RB
   1	and	NNP
   1	textual	JJ
   1	deliv	VB
   1	parse	VB
   1	simplicity	NN
   1	general	NNP
   1	golang.org	NN
   1	multi-variable	JJ
   1	failure	NN
   1	easy	JJ
   1	type	VB
   1	lead	VB
   1	multiply	NN
   1	nul	NNP
   1	first	NNP
   1	useful	JJ
   1	mind	NN
   1	violat	VB
   1	switch	NNP
   1	exploit	VB
   1	hierarchy	NN
   1	number	NNP
   1	specially	RB
   1	thread	NN
   1	standard	NNP
   1	minimum	NN
   1	automatic	JJ
   1	entire	JJ
   1	produce	VB
   1	line	NNP
   1	collectively	RB
   1	permissible	JJ
   1	varspec	NNP
   1	accented	JJ
   1	type-specific	JJ
   1	overlap	VB
   1	assembly	NN
   1	directory	NN
   1	factor	NN
   1	resolve	VB
   1	repeat	VB
   1	synchronization	NN
   1	nnn	JJ
   1	twice	RB
   1	unnamed	JJ
   1	implicit	NN
   1	contiguous	JJ
   1	site	NN
   1	typically	RB
   1	efficient	JJ
   1	types—array	NN
   1	dynamically	RB
   1	inhabit	NN
   1	top-to-bottom	JJ
   1	record	NN
   1	repeatedly	RB
   1	erroneously	RB
   1	shift	VB
   1	nd	NNP
   1	emb	VB
   1	relation	NN
   1	management	NN
   1	allocation	NNP
   1	multi-dimensional	JJ
   1	graphic	NNP
   1	unary	NNP
   1	dereference	VB
   1	behav	VB
   1	lt	NNP
   1	manipul	VB
   1	snippet	NN
   1	travers	VB
   1	analyz	VB
   1	reproducible	JJ
   1	break	VB
   1	break	NNP
   1	redeclar	VB
   1	completeness	NN
   1	version	NNP
   1	choice	NN
   1	cyclic	JJ
   1	exclud	VB
   1	pars	VB
   1	non-decimal	JJ
   1	n	JJ
   1	less	JJR
   1	deletion	NN
   1	stepwise	NN
   1	side-effect	NN
   1	enabl	VB
   1	separ	VB
   1	elementary	JJ
   1	stay	VB
   1	fully	RB
   1	ordering	NN
   1	attribute	NN
   1	vet	VB
   1	category	NNP
   1	written	VB
   1	low	JJ
   1	successful	JJ
   1	calcul	VB
   1	internal	JJ
   1	enough	RB
   1	initialization	NNP
   1	sieve	NN
   1	sequentially	RB
   1	show	VB
   1	closure	NN
   1	independently	RB
   1	tabs	NN
   1	terminator	NN
   1	nan	NNP
   1	encompass	VB
   1	ll	NNP
   1	defer	NNP
   1	entirely	RB
   1	ascii	NNP
   1	position	NN
   1	multiplication	NN
   1	inverse	NN
   1	lo	NNP
   1	look	VB
   1	exclude	VB
   1	vocabulary	NN
   1	enforc	VB
   1	extract	VB
   1	execute	NN
   1	execute	VB
   1	communicate	VB
   1	scoping	NN
   1	deterministically	RB
   1	impli	VB
   1	export	NN
   1	immaterial	JJ
   1	see	NNP
   1	keywords	VB
   1	express	VB
   1	cost	NN
   1	indirectly	RB
   1	channels	NNP
   1	shortvardecl	NNP
   1	reach	NN
   1	top-level	JJ
   1	jan	NNP
   1	reflection	NN
   1	ellipsis	NN
   1	two-digit	JJ
   1	brace-bound	JJ
   1	truncation	NN
   1	backus-naur	JJ
   1	operator	NNP
   1	binding	NN
   1	simplifi	VB
   1	consideration	NN
   1	finally	RB
   1	width	NN
   1	function-local	JJ
   1	overflow	NNP
   1	concrete	JJ
   1	correspond	NN
   1	recent	JJ
   1	routine	NN
   1	modulo	JJ
   1	uniqueness	NNP
   1	discussion	NN
   1	impossible	JJ
   1	protect	VB
   1	indirect	VB
   2	scale	VB
   2	skip	VB
   2	float	VB
   2	unescaped	JJ
   2	well	RB
   2	avoid	VB
   2	necessary	JJ
   2	extended	JJ
   2	mark	VB
   2	mark	NN
   2	callable	JJ
   2	buffered	JJ
   2	increas	VB
   2	obtain	VB
   2	just	RB
   2	determine	VB
   2	concurrently	RB
   2	assume	VB
   2	notation	NN
   2	large	JJ
   2	flow	VB
   2	consequence	NN
   2	utf-8	NNP
   2	stop	VB
   2	compile-time	JJ
   2	encoding	NN
   2	come	VB
   2	maximum	JJ
   2	implementation-defined	JJ
   2	explicit	NNP
   2	rune	NNP
   2	consequently	RB
   2	right	VB
   2	instal	VB
   2	target	NN
   2	recvexpr	NNP
   2	write	VB
   2	support	VB
   2	unqualified	JJ
   2	union	NN
   2	complet	VB
   2	radix	NN
   2	rely	VB
   2	exp	NN
   2	unspecified	JJ
   2	report	VB
   2	infinite	JJ
   2	lower-case	JJ
   2	functionality	NN
   2	numeric	NNP
   2	trigger	VB
   2	dividend	NN
   2	hidden	JJ
   2	intermediate	JJ
   2	later	RB
   2	interface	NNP
   2	backslash	NN
   2	chosen	VB
   2	input	NN
   2	unbuffered	JJ
   2	derive	VB
   2	blocks	NNP
   2	happen	VB
   2	horizontal	JJ
   2	forclause	NNP
   2	introduc	VB
   2	data	NNS
   2	re-used	JJ
   2	long	RB
   2	prefix	VB
   2	quotient	NN
   2	mask	NN
   2	transitively	RB
   2	apply	RB
   2	extend	VB
   2	place	VB
   2	place	NN
   2	exact	JJ
   2	complement	NN
   2	repeated	JJ
   2	accord	VB
   2	shallowest	NN
   2	earli	JJ
   2	form	VB
   2	discuss	VB
   2	decrement	JJ
   2	index	VB
   2	importpath	NNP
   2	represent	JJ
   2	original	JJ
   2	opening	NN
   2	irrelevant	JJ
   2	hint	NN
   2	equality	NN
   2	identifierlist	NNP
   2	assist	VB
   2	indication	NN
   2	link	VB
   2	moment	NN
   2	channel	NNP
   2	one-dimensional	JJ
   2	simpl	JJ
   2	initialize	VB
   2	bidirectional	JJ
   2	reserv	VB
   2	make	VB
   2	architectur	VB
   2	identify	VB
   2	recursively	RB
   2	current	JJ
   2	real	JJ
   2	contrast	NN
   2	combin	VB
   2	previously	RB
   2	increment	NN
   2	complete	JJ
   2	complete	VB
   2	visible	JJ
   2	ignore	VB
   2	content	NN
   2	bracket	NN
   2	extent	NN
   2	panicking	NN
   2	iter	VB
   2	normally	RB
   2	guard	NN
   2	truth	NN
   2	independent	JJ
   2	reporting	NN
   2	replacement	NN
   2	standard	VB
   2	standard	NN
   2	multiple	NNP
   2	numbered	JJ
   2	wait	VB
   2	meaning	NN
   2	octal	NN
   2	octal	JJ
   2	share	VB
   2	short	NNP
   2	unchanged	JJ
   2	limit	NN
   2	ordinary	JJ
   2	associate	NN
   2	nested	JJ
   2	requirement	NN
   2	local	JJ
   2	associ	VB
   2	perform	VB
   2	lu	NNP
   2	implementation-specific	JJ
   2	scoped	NNS
   2	pointer-receiver	JJ
   2	associativity	NN
   2	literaltype	NNP
   2	readability	NN
   2	point	VB
   2	dependency	NNP
   2	identifi	VB
   2	parenthesis	NN
   2	additionally	RB
   2	hand	NN
   2	transfer	NN
   2	occur	VB
   2	zero-size	JJ
   2	accent	NN
   2	ready	JJ
   2	erroneous	JJ
   2	defer	VB
   2	select	NN
   2	jump	NN
   2	retriev	VB
   2	referenc	VB
   2	tokens	JJ
   2	relationship	NN
   2	redeclaration	NN
   2	nil	JJ
   2	invoke	VB
   2	concatenation	NN
   2	prevent	VB
   2	location	NN
   2	bound	NN
   2	elsewhere	RB
   2	parameter	NNP
   3	accessible	JJ
   3	define	VB
   3	buffer	NN
   3	remov	VB
   3	comparison	NNP
   3	step	NN
   3	analysis	NN
   3	panick	VB
   3	thus	NNP
   3	component	NN
   3	source	NNP
   3	immediately	RB
   3	label	VB
   3	otherwise	VB
   3	introduce	VB
   3	automatically	RB
   3	property	NN
   3	further	RBR
   3	compatibility	NN
   3	right-hand	JJ
   3	kind	NN
   3	temporary	JJ
   3	destination	NN
   3	said	VB
   3	program	NNP
   3	construction	NN
   3	document	NN
   3	utf-8-encoded	JJ
   3	mantissa	NN
   3	equal	JJ
   3	precisely	RB
   3	mechanism	NN
   3	tool	NN
   3	versa	NN
   3	give	VB
   3	specification	NN
   3	generat	VB
   3	stand	VB
   3	particular	JJ
   3	include	VB
   3	possible	JJ
   3	rather	RB
   3	word	NN
   3	concurrent	JJ
   3	newline	JJ
   3	handl	VB
   3	due	JJ
   3	typeswitchguard	NNP
   3	more	RBR
   3	known	VB
   3	receife	NN
   3	treat	VB
   3	ad	VB
   3	hexadecimal	JJ
   3	full	JJ
   3	item	NN
   3	infinity	NN
   3	universe	JJ
   3	purpose	NN
   3	consider	VB
   3	double	JJ
   3	similar	JJ
   3	anonymous	JJ
   3	compiled	JJ
   3	instruction	NN
   3	else	RB
   3	remain	VB
   3	production	NN
   3	combine	VB
   3	assert	VB
   3	ambiguity	NN
   3	vary	VB
   3	concaten	VB
   3	lexically	RB
   3	encod	VB
   3	address	VB
   3	line	NN
   3	indexing	NN
   3	append	VB
   3	share	NN
   3	require	VB
   3	save	VB
   3	underscore	NN
   3	embed	VB
   3	relat	VB
   3	main	JJ
   3	high	JJ
   3	unary	JJ
   3	guarantee	NN
   3	class	NN
   3	implementation-dependent	JJ
   3	unable	JJ
   3	entity	NN
   3	larger	JJR
   3	note	NN
   3	identity	NN
   3	certain	JJ
   3	substring	NN
   3	vice	NN
   3	replac	VB
   3	qualifi	VB
   3	recvstmt	NNP
   3	bitwise	NN
   3	defer	NN
   3	serv	VB
   3	arithmetic	NN
   3	arithmetic	JJ
   3	reach	VB
   3	grammar	NN
   3	remainder	NN
   3	elide	VB
   3	match	NN
   3	sign	JJ
   4	programming	NN
   4	specific	JJ
   4	count	NN
   4	brace	NN
   4	thus	RB
   4	labeled	JJ
   4	op	JJ
   4	innermost	NN
   4	succeed	VB
   4	utf-8	JJ
   4	level	NN
   4	memory	NN
   4	raw	JJ
   4	package-level	NN
   4	upper	JJ
   4	directly	RB
   4	constspec	NNP
   4	create	VB
   4	predeclar	VB
   4	package	VB
   4	addition	NN
   4	slice	NNP
   4	slice	VB
   4	system	NN
   4	made	VB
   4	compos	VB
   4	refer	NN
   4	comput	VB
   4	newline	NN
   4	ieee-754	JJ
   4	terminate	NN
   4	static	JJ
   4	order	VB
   4	truncat	VB
   4	default	VB
   4	forever	RB
   4	division	NN
   4	effect	NN
   4	describ	VB
   4	init	NN
   4	punctuation	NN
   4	ieee	NNP
   4	single-valued	JJ
   4	interpret	VB
   4	importing	NN
   4	divisor	NN
   4	variadic	JJ
   4	accept	VB
   4	elid	VB
   4	arbitrary	JJ
   4	therefore	RB
   4	non-exported	JJ
   4	readi	VB
   4	method	NNP
   4	integer	JJR
   4	post	NN
   4	behavior	NN
   4	yield	VB
   4	individually	RB
   4	back	RB
   4	underscore	JJ
   4	term	NN
   4	left-to-right	JJ
   4	nth	JJ
   4	several	JJ
   4	guarante	VB
   4	syntax	NN
   4	satisfi	VB
   4	missing	JJ
   4	been	VB
   4	true	JJ
   4	category	NN
   4	anywhere	RB
   4	optionally	RB
   4	various	JJ
   4	access	VB
   4	involv	VB
   4	export	VB
   4	fit	VB
   4	channels	VB
   4	match	VB
   4	restrict	VB
   5	rounding	NN
   5	associated	JJ
   5	caller	NN
   5	ignor	VB
   5	copi	VB
   5	alias	NN
   5	loop	NN
   5	similarly	RB
   5	qualified	JJ
   5	discov	VB
   5	disallow	VB
   5	yet	RB
   5	backslash	JJ
   5	keyword	NN
   5	prefix	NN
   5	requir	VB
   5	apply	NN
   5	invalid	JJ
   5	enclos	VB
   5	closed	JJ
   5	round	VB
   5	precedence	NN
   5	proceed	NN
   5	depend	VB
   5	respectively	RB
   5	sliced	JJ
   5	way	NN
   5	packagename	NNP
   5	determin	VB
   5	previous	JJ
   5	break	NN
   5	receiv	VB
   5	end	VB
   5	exist	VB
   5	direction	NN
   5	list	VB
   5	however	RB
   6	sequenc	VB
   6	preced	VB
   6	branch	NN
   6	even	RB
   6	allow	VB
   6	lexical	JJ
   6	do	VB
   6	legal	JJ
   6	consid	VB
   6	initial	JJ
   6	construct	NN
   6	reference	NN
   6	indirection	NN
   6	close	VB
   6	inner	JJ
   6	occurs	NN
   6	usual	JJ
   6	belong	VB
   6	multi-valued	JJ
   6	sent	VB
   6	instead	RB
   6	goto	NN
   6	logical	JJ
   6	depth	NN
   6	general	JJ
   6	alignment	NN
   6	invocation	NN
   6	context	NN
   6	promot	VB
   6	regular	JJ
   6	occur	NN
   6	result	VB
   6	function	NNP
   6	together	RB
   6	equivalent	JJ
   6	access	NN
   6	definition	NN
   6	select	VB
   6	exception	NN
   6	cause	VB
   7	left-hand	JJ
   7	primary	JJ
   7	store	VB
   7	space	NN
   7	received	JJ
   7	produc	VB
   7	consist	VB
   7	were	VB
   7	explicitly	RB
   7	non-interface	JJ
   7	bit	NN
   7	discard	VB
   7	absent	JJ
   7	typed	JJ
   7	optional	JJ
   7	last	JJ
   7	actual	JJ
   7	fractional	JJ
   7	hexadecimal	NN
   7	exponent	NN
   7	unsigned	JJ
   7	type	NNP
   7	shorthand	NN
   7	implicit	JJ
   7	specify	VB
   7	surround	VB
   7	was	VB
   7	non-empty	JJ
   7	sign	VB
   8	final	JJ
   8	simple	NN
   8	implementation	NN
   8	representation	NN
   8	control	VB
   8	individual	JJ
   8	never	RB
   8	present	JJ
   8	declare	VB
   8	comment	NN
   8	tag	NN
   8	boolean	NN
   8	language	NN
   8	semicolon	NN
   8	chang	VB
   8	permit	VB
   8	non-negative	JJ
   8	storage	NN
   8	terminating	NN
   8	termin	VB
   8	act	VB
   8	exported	JJ
   8	dependency	NN
   8	escape	NN
   8	caus	VB
   8	binary	JJ
   8	see	VB
   8	overflow	NN
   8	additional	JJ
   8	bound	VB
   9	variable	JJ
   9	right	NN
   9	uninitialized	JJ
   9	implementation	NNP
   9	construct	VB
   9	present	VB
   9	alloc	VB
   9	second	JJ
   9	begin	VB
   9	most	JJS
   9	compar	VB
   9	entry	NN
   9	successive	JJ
  10	so	RB
  10	negative	JJ
  10	comparison	NN
  10	evaluation	NN
  10	import	VB
  10	assertion	NN
  10	side	NN
  10	once	RB
  10	imaginary	JJ
  10	least	JJS
  10	includ	VB
  10	unique	JJ
  10	block	VB
  10	valid	JJ
  10	proceed	VB
  10	next	JJ
  10	signature	NN
  10	hold	VB
  10	addressable	JJ
  10	pass	VB
  10	select	JJ
  11	letter	NN
  11	restriction	NN
  11	set	VB
  11	decimal	JJ
  11	body	NN
  11	non-constant	JJ
  11	non-blank	JJ
  11	floating-point	JJ
  11	respective	JJ
  11	multiple	NN
  11	short	JJ
  11	embedded	JJ
  12	text	NN
  12	label	NN
  12	section	NN
  12	exactly	RB
  12	omit	VB
  12	more	JJR
  12	invok	VB
  12	size	NN
  12	cannot	VB
  12	parenthes	VB
  13	key	NN
  13	dynamic	JJ
  13	bind	VB
  13	start	VB
  13	token	NN
  13	precision	NN
  13	end	NN
  13	representable	JJ
  14	communication	NN
  14	base	NN
  14	special	JJ
  14	compiler	NN
  14	creat	VB
  14	import	NN
  14	illegal	JJ
  14	refer	VB
  14	return	NN
  14	distinct	JJ
  14	quote	NN
  14	equivalent	NN
  15	implicitly	RB
  15	program	NN
  15	literal	JJ
  15	panic	JJ
  15	then	RB
  15	left	NN
  15	deferred	JJ
  15	address	NN
  15	goroutine	NN
  16	receive	NN
  16	selector	NN
  16	run	VB
  16	error	NN
  16	sequence	NN
  17	provid	VB
  17	possibly	RB
  17	composite	JJ
  17	panic	NN
  17	blank	JJ
  17	scope	NN
  17	comparable	JJ
  18	explicit	JJ
  18	rune	NN
  18	example	NN
  18	condition	NN
  18	go	NNP
  18	equal	VB
  18	time	NN
  18	rule	NN
  18	yield	NN
  18	digit	NN
  19	predeclared	JJ
  19	take	VB
  19	always	RB
  19	assignable	JJ
  19	send	VB
  19	default	NN
  19	empty	JJ
  19	implement	VB
  19	shift	NN
  20	unicode	NNP
  20	numeric	JJ
  20	capacity	NN
  21	conversion	NN
  21	array	VB
  21	integer	NN
  21	switch	NN
  21	switch	VB
  21	name	VB
  21	appli	VB
  22	doe	VB
  22	different	JJ
  22	instance	NN
  22	boolean	JJ
  22	corresponding	JJ
  23	key	JJ
  23	new	JJ
  23	code	NN
  23	string	NN
  24	part	NN
  24	assign	VB
  25	source	NN
  25	otherwise	RB
  25	clause	NN
  25	zero	NN
  25	point	NN
  26	under	VB
  26	appear	VB
  27	also	RB
  27	execut	VB
  27	such	JJ
  27	initi	VB
  27	byte	NN
  28	single	JJ
  28	only	RB
  28	defin	VB
  29	length	NN
  30	run-time	JJ
  30	order	NN
  30	floating-point	NN
  30	convert	VB
  30	given	VB
  31	range	NN
  31	execution	NN
  32	denot	VB
  32	contain	VB
  33	file	NN
  33	built-in	JJ
  33	assignment	NN
  33	first	JJ
  33	initialization	NN
  34	identical	JJ
  34	complex	JJ
  34	specifi	VB
  34	form	NN
  34	number	NN
  35	call	NN
  36	other	JJ
  37	list	NN
  38	receiver	NN
  38	has	VB
  38	iteration	NN
  41	name	NN
  41	parameter	NN
  42	struct	NN
  43	character	NN
  43	there	EX
  43	block	NN
  44	all	PDT
  45	repres	VB
  45	integer	JJ
  45	declar	VB
  46	evalu	VB
  46	argument	NN
  46	operation	NN
  46	operator	NN
  47	return	VB
  48	set	NN
  49	pointer	NN
  50	untyped	JJ
  51	have	VB
  52	follow	VB
  54	one	NN
  55	index	NN
  57	map	NN
  57	call	VB
  60	field	NN
  60	case	NN
  62	channel	NN
  65	array	NN
  65	interface	NN
  65	string	VB
  66	result	NN
  68	constant	NN
  70	operand	NN
  74	same	JJ
  79	use	VB
  80	declaration	NN
  82	literal	NN
  93	package	NN
  95	constant	JJ
  97	identifier	NN
 102	element	NN
 106	slice	NN
 118	not	RB
 127	method	NN
 136	variable	NN
 145	statement	NN
 174	expression	NN
 213	function	NN
 230	be	VB
 243	are	VB
 335	value	NN
 529	type	NN
 579	is	VB
