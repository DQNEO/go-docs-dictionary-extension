Go	NNP	O => Go	NNP
Programming	NNP	O => Programming	NNP
Language	NNP	O => Language	NNP
Specification	NNP	O => Specification	NNP
Version	NNP	O => Version	NNP
Jan	NNP	O => Jan	NNP
Introduction	NN	O => Introduction	NN
reference	NN	O => reference	NN
manual	NN	O => manual	NN
Go	NNP	O => Go	NNP
programming	NN	O => programming	NN
language	NN	O => language	NN
more	JJR	O => more	JJR
information	NN	O => information	NN
other	JJ	O => other	JJ
documents	NNS	O => document	NN
see	VB	O => see	VB
golang.org	NN	O => golang.org	NN
Go	NNP	O => Go	NNP
general-purpose	JJ	O => general-purpose	JJ
language	NN	O => language	NN
designed	VBN	O => design	VB
systems	NNS	O => system	NN
programming	NN	O => programming	NN
mind	NN	O => mind	NN
strongly	RB	O => strongly	RB
typed	JJ	O => typed	JJ
garbage-collected	JJ	O => garbage-collected	JJ
explicit	JJ	O => explicit	JJ
support	NN	O => support	NN
concurrent	JJ	O => concurrent	JJ
programming	NN	O => programming	NN
Programs	NNS	O => Program	NN
constructed	VBN	O => construct	VB
packages	NNS	O => package	NN
properties	NNS	O => property	NN
allow	VBP	O => allow	VB
efficient	JJ	O => efficient	JJ
management	NN	O => management	NN
dependencies	NNS	O => dependency	NN
grammar	NN	O => grammar	NN
compact	JJ	O => compact	JJ
simple	NN	O => simple	NN
parse	VB	O => parse	VB
allowing	VBG	O => allow	VB
easy	JJ	O => easy	JJ
analysis	NN	O => analysis	NN
automatic	JJ	O => automatic	JJ
tools	NNS	O => tool	NN
such	JJ	O => such	JJ
integrated	JJ	O => integrated	JJ
development	NN	O => development	NN
environments	NNS	O => environment	NN
Notation	NNP	O => Notation	NNP
syntax	NN	O => syntax	NN
specified	VBN	O => specifi	VB
using	VBG	O => use	VB
Extended	JJ	O => Extended	JJ
Backus-Naur	JJ	O => Backus-Naur	JJ
Form	NNP	O => Form	NNP
EBNF	NNP	B-GPE => EBNF	NNP
Productions	NNS	O => Production	NN
expressions	NNS	O => expression	NN
constructed	VBN	O => construct	VB
terms	NNS	O => term	NN
following	VBG	O => follow	VB
operators	NNS	O => operator	NN
increasing	VBG	O => increas	VB
precedence	NN	O => precedence	NN
Lower-case	JJ	O => Lower-case	JJ
production	NN	O => production	NN
names	VBZ	O => name	VB
used	VBN	O => use	VB
identify	VB	O => identify	VB
lexical	JJ	O => lexical	JJ
tokens	NNS	O => token	NN
Non-terminals	NNS	O => Non-terminal	NN
CamelCase	NNP	B-GPE => CamelCase	NNP
Lexical	JJ	O => Lexical	JJ
tokens	NNS	O => token	NN
enclosed	VBN	O => enclos	VB
double	JJ	O => double	JJ
quotes	NNS	O => quote	NN
back	RB	O => back	RB
quotes	NNS	O => quote	NN
form	NN	O => form	NN
represents	VBZ	O => repres	VB
set	NN	O => set	NN
characters	NNS	O => character	NN
alternatives	NNS	O => alternative	NN
horizontal	JJ	O => horizontal	JJ
ellipsis	NN	O => ellipsis	NN
also	RB	O => also	RB
used	VBN	O => use	VB
elsewhere	RB	O => elsewhere	RB
spec	NN	O => spec	NN
informally	RB	O => informally	RB
denote	VBP	O => denot	VB
various	JJ	O => various	JJ
enumerations	NNS	O => enumeration	NN
code	NN	O => code	NN
snippets	NNS	O => snippet	NN
further	RBR	O => further	RBR
specified	VBN	O => specifi	VB
character	NN	O => character	NN
opposed	VBN	O => oppos	VB
characters	NNS	O => character	NN
token	NN	O => token	NN
Go	NNP	O => Go	NNP
language	NN	O => language	NN
Source	NNP	B-GPE => Source	NNP
code	NN	O => code	NN
representation	NN	O => representation	NN
Source	NNP	B-GPE => Source	NNP
code	NN	O => code	NN
Unicode	NNP	B-GPE => Unicode	NNP
text	NN	O => text	NN
encoded	VBN	O => encod	VB
UTF-8	NNP	B-GPE => UTF-8	NNP
text	NN	O => text	NN
canonicalized	VBN	O => canonic	VB
so	RB	O => so	RB
single	JJ	O => single	JJ
accented	JJ	O => accented	JJ
code	NN	O => code	NN
point	NN	O => point	NN
distinct	JJ	O => distinct	JJ
character	NN	O => character	NN
constructed	VBN	O => construct	VB
combining	VBG	O => combin	VB
accent	NN	O => accent	NN
letter	NN	O => letter	NN
treated	VBN	O => treat	VB
code	NN	O => code	NN
points	NNS	O => point	NN
simplicity	NN	O => simplicity	NN
document	NN	O => document	NN
unqualified	JJ	O => unqualified	JJ
term	NN	O => term	NN
character	NN	O => character	NN
refer	VB	O => refer	VB
Unicode	NNP	B-GPE => Unicode	NNP
code	NN	O => code	NN
point	NN	O => point	NN
source	NN	O => source	NN
text	NN	O => text	NN
code	NN	O => code	NN
point	NN	O => point	NN
distinct	JJ	O => distinct	JJ
instance	NN	O => instance	NN
upper	JJ	O => upper	JJ
lower	JJR	O => lower	JJR
case	NN	O => case	NN
letters	NNS	O => letter	NN
different	JJ	O => different	JJ
characters	NNS	O => character	NN
Implementation	NNP	O => Implementation	NNP
restriction	NN	O => restriction	NN
compatibility	NN	O => compatibility	NN
other	JJ	O => other	JJ
tools	NNS	O => tool	NN
compiler	NN	O => compiler	NN
disallow	VB	O => disallow	VB
NUL	NNP	B-GPE => NUL	NNP
character	NN	O => character	NN
source	NN	O => source	NN
text	NN	O => text	NN
Implementation	NNP	O => Implementation	NNP
restriction	NN	O => restriction	NN
compatibility	NN	O => compatibility	NN
other	JJ	O => other	JJ
tools	NNS	O => tool	NN
compiler	NN	O => compiler	NN
ignore	VB	O => ignore	VB
UTF-8-encoded	JJ	O => UTF-8-encoded	JJ
byte	NN	O => byte	NN
order	NN	O => order	NN
mark	NN	O => mark	NN
Unicode	NNP	B-GPE => Unicode	NNP
code	NN	O => code	NN
point	NN	O => point	NN
source	NN	O => source	NN
text	NN	O => text	NN
byte	NN	O => byte	NN
order	NN	O => order	NN
mark	NN	O => mark	NN
disallowed	VBN	O => disallow	VB
anywhere	RB	O => anywhere	RB
else	RB	O => else	RB
source	NN	O => source	NN
Characters	NNPS	O => Character	NN
following	VBG	O => follow	VB
terms	NNS	O => term	NN
used	VBN	O => use	VB
denote	VBP	O => denot	VB
specific	JJ	O => specific	JJ
Unicode	NNP	B-GPE => Unicode	NNP
character	NN	O => character	NN
classes	NNS	O => class	NN
Unicode	NNP	B-GPE => Unicode	NNP
Standard	NNP	O => Standard	NNP
Section	NN	O => Section	NN
General	NNP	O => General	NNP
Category	NNP	O => Category	NNP
defines	VBZ	O => defin	VB
set	NN	O => set	NN
character	NN	O => character	NN
categories	NNS	O => category	NN
Go	NNP	O => Go	NNP
all	PDT	O => all	PDT
characters	NNS	O => character	NN
Letter	NNP	O => Letter	NNP
categories	NNS	O => category	NN
Lu	NNP	O => Lu	NNP
Ll	NNP	B-GPE => Ll	NNP
Lt	NNP	B-GPE => Lt	NNP
Lm	NNP	B-GPE => Lm	NNP
Lo	NNP	O => Lo	NNP
Unicode	NNP	B-GPE => Unicode	NNP
letters	NNS	O => letter	NN
Number	NNP	O => Number	NNP
category	NN	O => category	NN
Nd	NNP	O => Nd	NNP
Unicode	NNP	B-GPE => Unicode	NNP
digits	NNS	O => digit	NN
Letters	NNS	O => Letter	NN
digits	NNS	O => digit	NN
underscore	JJ	O => underscore	JJ
character	NN	O => character	NN
considered	VBN	O => consid	VB
letter	NN	O => letter	NN
Lexical	JJ	O => Lexical	JJ
elements	NNS	O => element	NN
Comments	NNS	O => Comment	NN
Comments	NNS	O => Comment	NN
serve	VBP	O => serv	VB
program	NN	O => program	NN
documentation	NN	O => documentation	NN
There	EX	O => There	EX
forms	NNS	O => form	NN
Line	NNP	O => Line	NNP
comments	NNS	O => comment	NN
start	VB	O => start	VB
character	NN	O => character	NN
sequence	NN	O => sequence	NN
stop	VB	O => stop	VB
end	NN	O => end	NN
line	NN	O => line	NN
General	JJ	O => General	JJ
comments	NNS	O => comment	NN
start	VB	O => start	VB
character	NN	O => character	NN
sequence	NN	O => sequence	NN
stop	VB	O => stop	VB
subsequent	JJ	O => subsequent	JJ
character	NN	O => character	NN
sequence	NN	O => sequence	NN
comment	NN	O => comment	NN
cannot	VBP	O => cannot	VB
start	VB	O => start	VB
rune	NN	O => rune	NN
string	VBG	O => string	VB
literal	JJ	O => literal	JJ
comment	NN	O => comment	NN
general	JJ	O => general	JJ
comment	NN	O => comment	NN
containing	VBG	O => contain	VB
newlines	NNS	O => newline	NN
acts	VBZ	O => act	VB
space	NN	O => space	NN
other	JJ	O => other	JJ
comment	NN	O => comment	NN
acts	VBZ	O => act	VB
newline	NN	O => newline	NN
Tokens	JJ	B-GPE => Tokens	JJ
Tokens	JJ	B-GPE => Tokens	JJ
form	NN	O => form	NN
vocabulary	NN	O => vocabulary	NN
Go	NNP	O => Go	NNP
language	NN	O => language	NN
There	EX	O => There	EX
classes	NNS	O => class	NN
identifiers	NNS	O => identifier	NN
keywords	NNS	O => keyword	NN
operators	NNS	O => operator	NN
punctuation	NN	O => punctuation	NN
literals	NNS	O => literal	NN
White	NNP	B-PERSON => White	NNP
space	NN	O => space	NN
formed	VBN	O => form	VB
spaces	NNS	O => space	NN
horizontal	JJ	O => horizontal	JJ
tabs	NN	O => tabs	NN
carriage	NN	O => carriage	NN
returns	VBZ	O => return	VB
newlines	NNS	O => newline	NN
ignored	VBN	O => ignor	VB
separates	VBZ	O => separ	VB
tokens	NNS	O => token	NN
otherwise	RB	O => otherwise	RB
combine	VB	O => combine	VB
single	JJ	O => single	JJ
token	NN	O => token	NN
Also	RB	O => Also	RB
newline	JJ	O => newline	JJ
end	NN	O => end	NN
file	NN	O => file	NN
trigger	VBP	O => trigger	VB
insertion	NN	O => insertion	NN
semicolon	NN	O => semicolon	NN
breaking	VBG	O => break	VB
input	NN	O => input	NN
tokens	NNS	O => token	NN
next	JJ	O => next	JJ
token	NN	O => token	NN
longest	JJS	O => long	JJ
sequence	NN	O => sequence	NN
characters	NNS	O => character	NN
form	NN	O => form	NN
valid	JJ	O => valid	JJ
token	NN	O => token	NN
Semicolons	NNPS	O => Semicolon	NN
formal	JJ	O => formal	JJ
grammar	NN	O => grammar	NN
uses	VBZ	O => use	VB
semicolons	NNS	O => semicolon	NN
terminators	NNS	O => terminator	NN
number	NN	O => number	NN
productions	NNS	O => production	NN
Go	NNP	O => Go	NNP
programs	NNS	O => program	NN
omit	VB	O => omit	VB
most	JJS	O => most	JJS
semicolons	NNS	O => semicolon	NN
using	VBG	O => use	VB
following	VBG	O => follow	VB
rules	NNS	O => rule	NN
input	NN	O => input	NN
broken	VBN	O => broken	VB
tokens	NNS	O => token	NN
semicolon	NN	O => semicolon	NN
automatically	RB	O => automatically	RB
inserted	VBN	O => insert	VB
token	NN	O => token	NN
stream	NN	O => stream	NN
immediately	RB	O => immediately	RB
line	NN	O => line	NN
final	JJ	O => final	JJ
token	NN	O => token	NN
token	NN	O => token	NN
identifier	NN	O => identifier	NN
integer	NN	O => integer	NN
floating-point	JJ	O => floating-point	JJ
imaginary	JJ	O => imaginary	JJ
rune	NN	O => rune	NN
string	VBG	O => string	VB
literal	NN	O => literal	NN
keywords	NNS	O => keyword	NN
operators	NNS	O => operator	NN
punctuation	NN	O => punctuation	NN
allow	VBP	O => allow	VB
complex	JJ	O => complex	JJ
statements	NNS	O => statement	NN
occupy	VB	O => occupy	VB
single	JJ	O => single	JJ
line	NN	O => line	NN
semicolon	NN	O => semicolon	NN
omitted	VBN	O => omit	VB
closing	VBG	O => close	VB
reflect	VB	O => reflect	VB
idiomatic	JJ	O => idiomatic	JJ
code	NN	O => code	NN
examples	NNS	O => example	NN
document	NN	O => document	NN
elide	VB	O => elide	VB
semicolons	NNS	O => semicolon	NN
using	VBG	O => use	VB
rules	NNS	O => rule	NN
Identifiers	NNPS	O => Identifier	NN
Identifiers	NNPS	O => Identifier	NN
program	NN	O => program	NN
entities	NNS	O => entity	NN
such	JJ	O => such	JJ
variables	NNS	O => variable	NN
types	NNS	O => type	NN
identifier	NN	O => identifier	NN
sequence	NN	O => sequence	NN
more	JJR	O => more	JJR
letters	NNS	O => letter	NN
digits	NNS	O => digit	NN
character	NN	O => character	NN
identifier	NN	O => identifier	NN
letter	NN	O => letter	NN
identifiers	NNS	O => identifier	NN
predeclared	VBN	O => predeclar	VB
Keywords	VB	O => Keywords	VB
following	VBG	O => follow	VB
keywords	NNS	O => keyword	NN
reserved	VBN	O => reserv	VB
used	VBN	O => use	VB
identifiers	NNS	O => identifier	NN
Operators	NNPS	O => Operator	NN
punctuation	NN	O => punctuation	NN
following	VBG	O => follow	VB
character	NN	O => character	NN
sequences	VBZ	O => sequenc	VB
represent	VBP	O => repres	VB
operators	NNS	O => operator	NN
including	VBG	O => includ	VB
assignment	NN	O => assignment	NN
operators	NNS	O => operator	NN
punctuation	NN	O => punctuation	NN
Integer	JJR	O => Integer	JJR
literals	NNS	O => literal	NN
integer	JJ	O => integer	JJ
literal	NN	O => literal	NN
sequence	NN	O => sequence	NN
digits	NNS	O => digit	NN
representing	VBG	O => repres	VB
integer	JJ	O => integer	JJ
constant	JJ	O => constant	JJ
optional	JJ	O => optional	JJ
prefix	NN	O => prefix	NN
sets	VBZ	O => set	VB
non-decimal	JJ	O => non-decimal	JJ
base	NN	O => base	NN
binary	JJ	O => binary	JJ
octal	JJ	O => octal	JJ
hexadecimal	JJ	O => hexadecimal	JJ
single	JJ	O => single	JJ
considered	VBN	O => consid	VB
decimal	JJ	O => decimal	JJ
hexadecimal	NN	O => hexadecimal	NN
literals	NNS	O => literal	NN
letters	NNS	O => letter	NN
represent	VBP	O => repres	VB
values	NNS	O => value	NN
readability	NN	O => readability	NN
underscore	JJ	O => underscore	JJ
character	NN	O => character	NN
appear	VBP	O => appear	VB
base	NN	O => base	NN
prefix	NN	O => prefix	NN
successive	JJ	O => successive	JJ
digits	NNS	O => digit	NN
such	JJ	O => such	JJ
underscores	NNS	O => underscore	NN
do	VBP	O => do	VB
change	VBP	O => chang	VB
literal	NN	O => literal	NN
value	NN	O => value	NN
Floating-point	JJ	O => Floating-point	JJ
literals	NNS	O => literal	NN
floating-point	NN	O => floating-point	NN
literal	NN	O => literal	NN
decimal	JJ	O => decimal	JJ
hexadecimal	NN	O => hexadecimal	NN
representation	NN	O => representation	NN
floating-point	NN	O => floating-point	NN
constant	JJ	O => constant	JJ
decimal	JJ	O => decimal	JJ
floating-point	NN	O => floating-point	NN
literal	NN	O => literal	NN
consists	VBZ	O => consist	VB
integer	JJ	O => integer	JJ
part	NN	O => part	NN
decimal	JJ	O => decimal	JJ
digits	NNS	O => digit	NN
decimal	JJ	O => decimal	JJ
point	NN	O => point	NN
fractional	JJ	O => fractional	JJ
part	NN	O => part	NN
decimal	JJ	O => decimal	JJ
digits	NNS	O => digit	NN
exponent	NN	O => exponent	NN
part	NN	O => part	NN
followed	VBN	O => follow	VB
optional	JJ	O => optional	JJ
sign	JJ	O => sign	JJ
decimal	JJ	O => decimal	JJ
digits	NNS	O => digit	NN
integer	JJ	O => integer	JJ
part	NN	O => part	NN
fractional	JJ	O => fractional	JJ
part	NN	O => part	NN
elided	VBN	O => elid	VB
decimal	JJ	O => decimal	JJ
point	NN	O => point	NN
exponent	NN	O => exponent	NN
part	NN	O => part	NN
elided	VBN	O => elid	VB
exponent	NN	O => exponent	NN
value	NN	O => value	NN
exp	NN	O => exp	NN
scales	VBZ	O => scale	VB
mantissa	NN	O => mantissa	NN
integer	NN	O => integer	NN
fractional	JJ	O => fractional	JJ
part	NN	O => part	NN
hexadecimal	NN	O => hexadecimal	NN
floating-point	NN	O => floating-point	NN
literal	NN	O => literal	NN
consists	VBZ	O => consist	VB
prefix	NN	O => prefix	NN
integer	JJ	O => integer	JJ
part	NN	O => part	NN
hexadecimal	JJ	O => hexadecimal	JJ
digits	NNS	O => digit	NN
radix	NN	O => radix	NN
point	NN	O => point	NN
fractional	JJ	O => fractional	JJ
part	NN	O => part	NN
hexadecimal	JJ	O => hexadecimal	JJ
digits	NNS	O => digit	NN
exponent	NN	O => exponent	NN
part	NN	O => part	NN
followed	VBN	O => follow	VB
optional	JJ	O => optional	JJ
sign	JJ	O => sign	JJ
decimal	JJ	O => decimal	JJ
digits	NNS	O => digit	NN
integer	JJ	O => integer	JJ
part	NN	O => part	NN
fractional	JJ	O => fractional	JJ
part	NN	O => part	NN
elided	VBN	O => elid	VB
radix	NN	O => radix	NN
point	NN	O => point	NN
elided	VBN	O => elid	VB
well	RB	O => well	RB
exponent	NN	O => exponent	NN
part	NN	O => part	NN
required	VBN	O => requir	VB
syntax	NN	O => syntax	NN
matches	NNS	O => match	NN
given	VBN	O => given	VB
IEEE	NNP	O => IEEE	NNP
exponent	NN	O => exponent	NN
value	NN	O => value	NN
exp	NN	O => exp	NN
scales	VBZ	O => scale	VB
mantissa	NN	O => mantissa	NN
integer	NN	O => integer	NN
fractional	JJ	O => fractional	JJ
part	NN	O => part	NN
readability	NN	O => readability	NN
underscore	JJ	O => underscore	JJ
character	NN	O => character	NN
appear	VBP	O => appear	VB
base	NN	O => base	NN
prefix	NN	O => prefix	NN
successive	JJ	O => successive	JJ
digits	NNS	O => digit	NN
such	JJ	O => such	JJ
underscores	NNS	O => underscore	NN
do	VBP	O => do	VB
change	VBP	O => chang	VB
literal	NN	O => literal	NN
value	NN	O => value	NN
Imaginary	NNP	O => Imaginary	NNP
literals	NNS	O => literal	NN
imaginary	JJ	O => imaginary	JJ
literal	NN	O => literal	NN
represents	VBZ	O => repres	VB
imaginary	JJ	O => imaginary	JJ
part	NN	O => part	NN
complex	JJ	O => complex	JJ
constant	JJ	O => constant	JJ
consists	VBZ	O => consist	VB
integer	JJ	O => integer	JJ
floating-point	NN	O => floating-point	NN
literal	NN	O => literal	NN
followed	VBN	O => follow	VB
lower-case	JJ	O => lower-case	JJ
letter	NN	O => letter	NN
value	NN	O => value	NN
imaginary	JJ	O => imaginary	JJ
literal	NN	O => literal	NN
value	NN	O => value	NN
respective	JJ	O => respective	JJ
integer	JJ	O => integer	JJ
floating-point	NN	O => floating-point	NN
literal	NN	O => literal	NN
multiplied	VBN	O => multipli	VB
imaginary	JJ	O => imaginary	JJ
unit	NN	O => unit	NN
backward	JJ	O => backward	JJ
compatibility	NN	O => compatibility	NN
imaginary	JJ	O => imaginary	JJ
literal	NN	O => literal	NN
integer	JJ	O => integer	JJ
part	NN	O => part	NN
consisting	VBG	O => consist	VB
entirely	RB	O => entirely	RB
decimal	JJ	O => decimal	JJ
digits	NNS	O => digit	NN
possibly	RB	O => possibly	RB
underscores	NNS	O => underscore	NN
considered	VBN	O => consid	VB
decimal	JJ	O => decimal	JJ
integer	NN	O => integer	NN
even	RB	O => even	RB
starts	VBZ	O => start	VB
leading	VBG	O => lead	VB
Rune	NNP	O => Rune	NNP
literals	NNS	O => literal	NN
rune	NN	O => rune	NN
literal	NN	O => literal	NN
represents	VBZ	O => repres	VB
rune	NN	O => rune	NN
constant	NN	O => constant	NN
integer	JJ	O => integer	JJ
value	NN	O => value	NN
identifying	VBG	O => identifi	VB
Unicode	NNP	B-GPE => Unicode	NNP
code	NN	O => code	NN
point	NN	O => point	NN
rune	NN	O => rune	NN
literal	NN	O => literal	NN
expressed	VBN	O => express	VB
more	JJR	O => more	JJR
characters	NNS	O => character	NN
enclosed	VBN	O => enclos	VB
single	JJ	O => single	JJ
quotes	NNS	O => quote	NN
quotes	NNS	O => quote	NN
character	NN	O => character	NN
appear	VBP	O => appear	VB
newline	JJ	O => newline	JJ
unescaped	JJ	O => unescaped	JJ
single	JJ	O => single	JJ
quote	NN	O => quote	NN
single	JJ	O => single	JJ
quoted	VBN	O => quot	VB
character	NN	O => character	NN
represents	VBZ	O => repres	VB
Unicode	NNP	B-GPE => Unicode	NNP
value	NN	O => value	NN
character	NN	O => character	NN
multi-character	JJ	O => multi-character	JJ
sequences	VBZ	O => sequenc	VB
beginning	VBG	O => begin	VB
backslash	JJ	O => backslash	JJ
encode	NN	O => encode	NN
values	NNS	O => value	NN
various	JJ	O => various	JJ
formats	NNS	O => format	NN
simplest	JJS	O => simpl	JJ
form	NN	O => form	NN
represents	VBZ	O => repres	VB
single	JJ	O => single	JJ
character	NN	O => character	NN
quotes	NNS	O => quote	NN
Go	NNP	O => Go	NNP
source	NN	O => source	NN
text	NN	O => text	NN
Unicode	NNP	B-GPE => Unicode	NNP
characters	NNS	O => character	NN
encoded	VBN	O => encod	VB
UTF-8	NNP	B-GPE => UTF-8	NNP
multiple	NN	O => multiple	NN
UTF-8-encoded	JJ	O => UTF-8-encoded	JJ
bytes	NNS	O => byte	NN
represent	VBP	O => repres	VB
single	JJ	O => single	JJ
integer	JJ	O => integer	JJ
value	NN	O => value	NN
instance	NN	O => instance	NN
literal	NN	O => literal	NN
holds	VBZ	O => hold	VB
single	JJ	O => single	JJ
byte	NN	O => byte	NN
representing	VBG	O => repres	VB
literal	NN	O => literal	NN
Unicode	NNP	B-GPE => Unicode	NNP
value	NN	O => value	NN
holds	VBZ	O => hold	VB
bytes	NNS	O => byte	NN
representing	VBG	O => repres	VB
literal	NN	O => literal	NN
value	NN	O => value	NN
Several	JJ	O => Several	JJ
backslash	JJ	O => backslash	JJ
escapes	NNS	O => escape	NN
allow	VBP	O => allow	VB
arbitrary	JJ	O => arbitrary	JJ
values	NNS	O => value	NN
encoded	VBN	O => encod	VB
ASCII	NNP	B-GPE => ASCII	NNP
text	NN	O => text	NN
There	EX	O => There	EX
ways	NNS	O => way	NN
represent	VBP	O => repres	VB
integer	JJ	O => integer	JJ
value	NN	O => value	NN
numeric	JJ	O => numeric	JJ
constant	NN	O => constant	NN
followed	VBN	O => follow	VB
exactly	RB	O => exactly	RB
hexadecimal	NN	O => hexadecimal	NN
digits	NNS	O => digit	NN
followed	VBN	O => follow	VB
exactly	RB	O => exactly	RB
hexadecimal	NN	O => hexadecimal	NN
digits	NNS	O => digit	NN
followed	VBN	O => follow	VB
exactly	RB	O => exactly	RB
hexadecimal	NN	O => hexadecimal	NN
digits	NNS	O => digit	NN
plain	NN	O => plain	NN
backslash	JJ	O => backslash	JJ
followed	VBN	O => follow	VB
exactly	RB	O => exactly	RB
octal	NN	O => octal	NN
digits	NNS	O => digit	NN
case	NN	O => case	NN
value	NN	O => value	NN
literal	NN	O => literal	NN
value	NN	O => value	NN
represented	VBN	O => repres	VB
digits	NNS	O => digit	NN
corresponding	JJ	O => corresponding	JJ
base	NN	O => base	NN
representations	NNS	O => representation	NN
all	PDT	O => all	PDT
result	NN	O => result	NN
integer	NN	O => integer	NN
have	VB	O => have	VB
different	JJ	O => different	JJ
valid	JJ	O => valid	JJ
ranges	NNS	O => range	NN
Octal	JJ	O => Octal	JJ
escapes	NNS	O => escape	NN
represent	VBP	O => repres	VB
value	NN	O => value	NN
inclusive	JJ	O => inclusive	JJ
Hexadecimal	NNP	O => Hexadecimal	NNP
escapes	NNS	O => escape	NN
satisfy	VBP	O => satisfi	VB
condition	NN	O => condition	NN
construction	NN	O => construction	NN
escapes	NNS	O => escape	NN
represent	VBP	O => repres	VB
Unicode	NNP	B-GPE => Unicode	NNP
code	NN	O => code	NN
points	NNS	O => point	NN
so	RB	O => so	RB
values	NNS	O => value	NN
illegal	JJ	O => illegal	JJ
particular	JJ	O => particular	JJ
surrogate	JJ	O => surrogate	JJ
halves	NNS	O => half	NN
backslash	NN	O => backslash	NN
certain	JJ	O => certain	JJ
single-character	JJ	O => single-character	JJ
escapes	NNS	O => escape	NN
represent	VBP	O => repres	VB
special	JJ	O => special	JJ
values	NNS	O => value	NN
other	JJ	O => other	JJ
sequences	VBZ	O => sequenc	VB
starting	VBG	O => start	VB
backslash	JJ	O => backslash	JJ
illegal	JJ	O => illegal	JJ
rune	NN	O => rune	NN
literals	NNS	O => literal	NN
String	VBG	O => string	VB
literals	NNS	O => literal	NN
string	VBG	O => string	VB
literal	NN	O => literal	NN
represents	VBZ	O => repres	VB
string	VBG	O => string	VB
constant	JJ	O => constant	JJ
obtained	VBN	O => obtain	VB
concatenating	VBG	O => concaten	VB
sequence	NN	O => sequence	NN
characters	NNS	O => character	NN
There	EX	O => There	EX
forms	NNS	O => form	NN
raw	JJ	O => raw	JJ
string	VBG	O => string	VB
literals	NNS	O => literal	NN
interpreted	VBN	O => interpret	VB
string	VBG	O => string	VB
literals	NNS	O => literal	NN
Raw	NNP	O => Raw	NNP
string	VBG	O => string	VB
literals	NNS	O => literal	NN
character	NN	O => character	NN
sequences	VBZ	O => sequenc	VB
back	RB	O => back	RB
quotes	NNS	O => quote	NN
quotes	NNS	O => quote	NN
character	NN	O => character	NN
appear	VBP	O => appear	VB
back	RB	O => back	RB
quote	NN	O => quote	NN
value	NN	O => value	NN
raw	JJ	O => raw	JJ
string	VBG	O => string	VB
literal	NN	O => literal	NN
string	VBG	O => string	VB
composed	VBN	O => compos	VB
uninterpreted	JJ	O => uninterpreted	JJ
implicitly	RB	O => implicitly	RB
UTF-8-encoded	NNP	O => UTF-8-encoded	NNP
characters	NNS	O => character	NN
quotes	NNS	O => quote	NN
particular	JJ	O => particular	JJ
backslashes	NNS	O => backslash	NN
have	VB	O => have	VB
special	JJ	O => special	JJ
meaning	NN	O => meaning	NN
string	VBG	O => string	VB
contain	VB	O => contain	VB
newlines	NNS	O => newline	NN
Carriage	NNP	O => Carriage	NNP
return	VB	O => return	VB
characters	NNS	O => character	NN
raw	JJ	O => raw	JJ
string	VBG	O => string	VB
literals	NNS	O => literal	NN
discarded	VBN	O => discard	VB
raw	JJ	O => raw	JJ
string	VBG	O => string	VB
value	NN	O => value	NN
Interpreted	VBN	O => interpret	VB
string	VBG	O => string	VB
literals	NNS	O => literal	NN
character	NN	O => character	NN
sequences	VBZ	O => sequenc	VB
double	JJ	O => double	JJ
quotes	NNS	O => quote	NN
quotes	NNS	O => quote	NN
character	NN	O => character	NN
appear	VBP	O => appear	VB
newline	JJ	O => newline	JJ
unescaped	JJ	O => unescaped	JJ
double	JJ	O => double	JJ
quote	NN	O => quote	NN
text	NN	O => text	NN
quotes	NNS	O => quote	NN
forms	VBP	O => form	VB
value	NN	O => value	NN
literal	JJ	O => literal	JJ
backslash	JJ	O => backslash	JJ
escapes	NNS	O => escape	NN
interpreted	VBN	O => interpret	VB
rune	NN	O => rune	NN
literals	NNS	O => literal	NN
illegal	JJ	O => illegal	JJ
legal	JJ	O => legal	JJ
restrictions	NNS	O => restriction	NN
three-digit	JJ	O => three-digit	JJ
octal	NN	O => octal	NN
nnn	JJ	O => nnn	JJ
two-digit	JJ	O => two-digit	JJ
hexadecimal	NN	O => hexadecimal	NN
nn	JJ	O => nn	JJ
escapes	NNS	O => escape	NN
represent	VBP	O => repres	VB
individual	JJ	O => individual	JJ
bytes	NNS	O => byte	NN
resulting	VBG	O => result	VB
string	NN	O => string	NN
all	PDT	O => all	PDT
other	JJ	O => other	JJ
escapes	NNS	O => escape	NN
represent	VBP	O => repres	VB
possibly	RB	O => possibly	RB
multi-byte	NN	O => multi-byte	NN
UTF-8	JJ	O => UTF-8	JJ
encoding	NN	O => encoding	NN
individual	JJ	O => individual	JJ
characters	NNS	O => character	NN
Thus	NNP	O => Thus	NNP
string	VBG	O => string	VB
literal	NN	O => literal	NN
represent	VBP	O => repres	VB
single	JJ	O => single	JJ
byte	NN	O => byte	NN
value	NN	O => value	NN
represent	VBP	O => repres	VB
bytes	NNS	O => byte	NN
UTF-8	JJ	O => UTF-8	JJ
encoding	NN	O => encoding	NN
character	NN	O => character	NN
examples	NNS	O => example	NN
all	PDT	O => all	PDT
represent	VBP	O => repres	VB
string	NN	O => string	NN
source	NN	O => source	NN
code	NN	O => code	NN
represents	VBZ	O => repres	VB
character	NN	O => character	NN
code	NN	O => code	NN
points	NNS	O => point	NN
such	JJ	O => such	JJ
combining	VBG	O => combin	VB
form	NN	O => form	NN
involving	VBG	O => involv	VB
accent	NN	O => accent	NN
letter	NN	O => letter	NN
result	NN	O => result	NN
error	NN	O => error	NN
placed	VBN	O => place	VB
rune	NN	O => rune	NN
literal	NN	O => literal	NN
single	JJ	O => single	JJ
code	NN	O => code	NN
point	NN	O => point	NN
appear	VBP	O => appear	VB
code	NN	O => code	NN
points	NNS	O => point	NN
placed	VBN	O => place	VB
string	VBG	O => string	VB
literal	JJ	O => literal	JJ
Constants	NNS	O => Constant	NN
There	EX	O => There	EX
boolean	JJ	O => boolean	JJ
constants	NNS	O => constant	NN
rune	NN	O => rune	NN
constants	NNS	O => constant	NN
integer	JJ	O => integer	JJ
constants	NNS	O => constant	NN
floating-point	NN	O => floating-point	NN
constants	NNS	O => constant	NN
complex	JJ	O => complex	JJ
constants	NNS	O => constant	NN
string	VBG	O => string	VB
constants	NNS	O => constant	NN
Rune	NNP	O => Rune	NNP
integer	NN	O => integer	NN
floating-point	JJ	O => floating-point	JJ
complex	JJ	O => complex	JJ
constants	NNS	O => constant	NN
collectively	RB	O => collectively	RB
called	VBD	O => call	VB
numeric	JJ	O => numeric	JJ
constants	NNS	O => constant	NN
constant	JJ	O => constant	JJ
value	NN	O => value	NN
represented	VBN	O => repres	VB
rune	NN	O => rune	NN
integer	NN	O => integer	NN
floating-point	JJ	O => floating-point	JJ
imaginary	JJ	O => imaginary	JJ
string	VBG	O => string	VB
literal	JJ	O => literal	JJ
identifier	NN	O => identifier	NN
denoting	VBG	O => denot	VB
constant	NN	O => constant	NN
constant	JJ	O => constant	JJ
expression	NN	O => expression	NN
conversion	NN	O => conversion	NN
result	NN	O => result	NN
constant	NN	O => constant	NN
result	NN	O => result	NN
value	NN	O => value	NN
built-in	JJ	O => built-in	JJ
functions	NNS	O => function	NN
such	JJ	O => such	JJ
applied	VBD	O => appli	VB
value	NN	O => value	NN
applied	VBD	O => appli	VB
expressions	NNS	O => expression	NN
applied	VBD	O => appli	VB
complex	JJ	O => complex	JJ
constant	JJ	O => constant	JJ
applied	VBD	O => appli	VB
numeric	JJ	O => numeric	JJ
constants	NNS	O => constant	NN
boolean	JJ	O => boolean	JJ
truth	NN	O => truth	NN
values	NNS	O => value	NN
represented	VBN	O => repres	VB
predeclared	JJ	O => predeclared	JJ
constants	NNS	O => constant	NN
predeclared	JJ	O => predeclared	JJ
identifier	NN	O => identifier	NN
iota	NN	O => iota	NN
denotes	VBZ	O => denot	VB
integer	JJ	O => integer	JJ
constant	JJ	O => constant	JJ
general	JJ	O => general	JJ
complex	JJ	O => complex	JJ
constants	NNS	O => constant	NN
form	NN	O => form	NN
constant	JJ	O => constant	JJ
expression	NN	O => expression	NN
discussed	VBN	O => discuss	VB
section	NN	O => section	NN
Numeric	NNP	O => Numeric	NNP
constants	NNS	O => constant	NN
represent	VBP	O => repres	VB
exact	JJ	O => exact	JJ
values	NNS	O => value	NN
arbitrary	JJ	O => arbitrary	JJ
precision	NN	O => precision	NN
do	VBP	O => do	VB
overflow	NN	O => overflow	NN
Consequently	RB	O => Consequently	RB
there	EX	O => there	EX
constants	NNS	O => constant	NN
denoting	VBG	O => denot	VB
IEEE-754	JJ	O => IEEE-754	JJ
negative	JJ	O => negative	JJ
infinity	NN	O => infinity	NN
not-a-number	JJ	O => not-a-number	JJ
values	NNS	O => value	NN
Constants	NNS	O => Constant	NN
typed	JJ	O => typed	JJ
untyped	JJ	O => untyped	JJ
Literal	JJ	O => Literal	JJ
constants	NNS	O => constant	NN
certain	JJ	O => certain	JJ
constant	JJ	O => constant	JJ
expressions	NNS	O => expression	NN
containing	VBG	O => contain	VB
untyped	JJ	O => untyped	JJ
constant	JJ	O => constant	JJ
operands	NNS	O => operand	NN
untyped	JJ	O => untyped	JJ
constant	JJ	O => constant	JJ
given	VBN	O => given	VB
type	NN	O => type	NN
explicitly	RB	O => explicitly	RB
constant	JJ	O => constant	JJ
declaration	NN	O => declaration	NN
conversion	NN	O => conversion	NN
implicitly	RB	O => implicitly	RB
used	VBN	O => use	VB
variable	NN	O => variable	NN
declaration	NN	O => declaration	NN
assignment	NN	O => assignment	NN
operand	NN	O => operand	NN
expression	NN	O => expression	NN
error	NN	O => error	NN
constant	JJ	O => constant	JJ
value	NN	O => value	NN
cannot	VBP	O => cannot	VB
represented	VBN	O => repres	VB
value	NN	O => value	NN
respective	JJ	O => respective	JJ
type	NN	O => type	NN
untyped	JJ	O => untyped	JJ
constant	JJ	O => constant	JJ
default	NN	O => default	NN
type	NN	O => type	NN
type	NN	O => type	NN
constant	JJ	O => constant	JJ
implicitly	RB	O => implicitly	RB
converted	VBN	O => convert	VB
contexts	NNS	O => context	NN
typed	JJ	O => typed	JJ
value	NN	O => value	NN
required	VBN	O => requir	VB
instance	NN	O => instance	NN
short	JJ	O => short	JJ
variable	NN	O => variable	NN
declaration	NN	O => declaration	NN
such	JJ	O => such	JJ
there	EX	O => there	EX
explicit	JJ	O => explicit	JJ
type	NN	O => type	NN
default	NN	O => default	NN
type	NN	O => type	NN
untyped	JJ	O => untyped	JJ
constant	JJ	O => constant	JJ
respectively	RB	O => respectively	RB
depending	VBG	O => depend	VB
boolean	NN	O => boolean	NN
rune	NN	O => rune	NN
integer	NN	O => integer	NN
floating-point	JJ	O => floating-point	JJ
complex	JJ	O => complex	JJ
string	VBG	O => string	VB
constant	JJ	O => constant	JJ
Implementation	NNP	O => Implementation	NNP
restriction	NN	O => restriction	NN
numeric	JJ	O => numeric	JJ
constants	NNS	O => constant	NN
have	VB	O => have	VB
arbitrary	JJ	O => arbitrary	JJ
precision	NN	O => precision	NN
language	NN	O => language	NN
compiler	NN	O => compiler	NN
implement	VB	O => implement	VB
using	VBG	O => use	VB
internal	JJ	O => internal	JJ
representation	NN	O => representation	NN
limited	JJ	O => limited	JJ
precision	NN	O => precision	NN
said	VBD	O => said	VB
implementation	NN	O => implementation	NN
Represent	JJ	O => Represent	JJ
integer	JJ	O => integer	JJ
constants	NNS	O => constant	NN
least	JJS	O => least	JJS
bits	NNS	O => bit	NN
Represent	JJ	O => Represent	JJ
floating-point	NN	O => floating-point	NN
constants	NNS	O => constant	NN
including	VBG	O => includ	VB
parts	NNS	O => part	NN
complex	JJ	O => complex	JJ
constant	NN	O => constant	NN
mantissa	NN	O => mantissa	NN
least	JJS	O => least	JJS
bits	NNS	O => bit	NN
signed	VBN	O => sign	VB
binary	JJ	O => binary	JJ
exponent	NN	O => exponent	NN
least	JJS	O => least	JJS
bits	NNS	O => bit	NN
Give	VB	O => Give	VB
error	NN	O => error	NN
unable	JJ	O => unable	JJ
represent	VBP	O => repres	VB
integer	JJ	O => integer	JJ
constant	JJ	O => constant	JJ
precisely	RB	O => precisely	RB
Give	VB	O => Give	VB
error	NN	O => error	NN
unable	JJ	O => unable	JJ
represent	VBP	O => repres	VB
floating-point	NN	O => floating-point	NN
complex	JJ	O => complex	JJ
constant	JJ	O => constant	JJ
due	JJ	O => due	JJ
overflow	NN	O => overflow	NN
Round	NNP	O => Round	NNP
nearest	JJS	O => near	JJ
representable	JJ	O => representable	JJ
constant	JJ	O => constant	JJ
unable	JJ	O => unable	JJ
represent	VBP	O => repres	VB
floating-point	NN	O => floating-point	NN
complex	JJ	O => complex	JJ
constant	JJ	O => constant	JJ
due	JJ	O => due	JJ
limits	NNS	O => limit	NN
precision	NN	O => precision	NN
requirements	NNS	O => requirement	NN
apply	VBP	O => appli	VB
literal	NN	O => literal	NN
constants	NNS	O => constant	NN
result	NN	O => result	NN
evaluating	VBG	O => evalu	VB
constant	JJ	O => constant	JJ
expressions	NNS	O => expression	NN
Variables	NNS	O => Variable	NN
variable	NN	O => variable	NN
storage	NN	O => storage	NN
location	NN	O => location	NN
holding	VBG	O => hold	VB
value	NN	O => value	NN
set	NN	O => set	NN
permissible	JJ	O => permissible	JJ
values	NNS	O => value	NN
determined	VBN	O => determin	VB
variable	NN	O => variable	NN
type	NN	O => type	NN
variable	NN	O => variable	NN
declaration	NN	O => declaration	NN
function	NN	O => function	NN
parameters	NNS	O => parameter	NN
results	NNS	O => result	NN
signature	NN	O => signature	NN
function	NN	O => function	NN
declaration	NN	O => declaration	NN
function	NN	O => function	NN
literal	NN	O => literal	NN
reserves	NNS	O => reserf	NN
storage	NN	O => storage	NN
named	VBN	O => name	VB
variable	NN	O => variable	NN
Calling	VBG	O => call	VB
built-in	JJ	O => built-in	JJ
function	NN	O => function	NN
taking	VBG	O => take	VB
address	NN	O => address	NN
composite	JJ	O => composite	JJ
literal	NN	O => literal	NN
allocates	VBZ	O => alloc	VB
storage	NN	O => storage	NN
variable	NN	O => variable	NN
run	VB	O => run	VB
time	NN	O => time	NN
Such	JJ	O => Such	JJ
anonymous	JJ	O => anonymous	JJ
variable	NN	O => variable	NN
referred	VBN	O => refer	VB
possibly	RB	O => possibly	RB
implicit	NN	O => implicit	NN
pointer	NN	O => pointer	NN
indirection	NN	O => indirection	NN
Structured	NNP	O => Structured	NNP
variables	NNS	O => variable	NN
array	VB	O => array	VB
slice	NN	O => slice	NN
struct	NN	O => struct	NN
types	NNS	O => type	NN
have	VB	O => have	VB
elements	NNS	O => element	NN
fields	NNS	O => field	NN
addressed	VBN	O => address	VB
individually	RB	O => individually	RB
such	JJ	O => such	JJ
element	NN	O => element	NN
acts	VBZ	O => act	VB
variable	NN	O => variable	NN
static	JJ	O => static	JJ
type	NN	O => type	NN
just	RB	O => just	RB
type	NN	O => type	NN
variable	NN	O => variable	NN
type	NN	O => type	NN
given	VBN	O => given	VB
declaration	NN	O => declaration	NN
type	NN	O => type	NN
provided	VBN	O => provid	VB
call	NN	O => call	NN
composite	JJ	O => composite	JJ
literal	JJ	O => literal	JJ
type	NN	O => type	NN
element	NN	O => element	NN
structured	JJ	O => structured	JJ
variable	NN	O => variable	NN
Variables	NNS	O => Variable	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
also	RB	O => also	RB
have	VB	O => have	VB
distinct	JJ	O => distinct	JJ
dynamic	JJ	O => dynamic	JJ
type	NN	O => type	NN
concrete	JJ	O => concrete	JJ
type	NN	O => type	NN
value	NN	O => value	NN
assigned	VBN	O => assign	VB
variable	NN	O => variable	NN
run	VB	O => run	VB
time	NN	O => time	NN
value	NN	O => value	NN
predeclared	JJ	O => predeclared	JJ
identifier	NN	O => identifier	NN
type	NN	O => type	NN
dynamic	JJ	O => dynamic	JJ
type	NN	O => type	NN
vary	VB	O => vary	VB
execution	NN	O => execution	NN
values	NNS	O => value	NN
stored	VBN	O => store	VB
interface	NN	O => interface	NN
variables	NNS	O => variable	NN
always	RB	O => always	RB
assignable	JJ	O => assignable	JJ
static	JJ	O => static	JJ
type	NN	O => type	NN
variable	NN	O => variable	NN
variable	NN	O => variable	NN
value	NN	O => value	NN
retrieved	VBN	O => retriev	VB
referring	VBG	O => refer	VB
variable	NN	O => variable	NN
expression	NN	O => expression	NN
most	JJS	O => most	JJS
recent	JJ	O => recent	JJ
value	NN	O => value	NN
assigned	VBN	O => assign	VB
variable	NN	O => variable	NN
variable	NN	O => variable	NN
yet	RB	O => yet	RB
been	VBN	O => been	VB
assigned	VBN	O => assign	VB
value	NN	O => value	NN
value	NN	O => value	NN
value	NN	O => value	NN
type	NN	O => type	NN
Types	VBZ	O => type	VB
type	NN	O => type	NN
determines	VBZ	O => determin	VB
set	NN	O => set	NN
values	NNS	O => value	NN
together	RB	O => together	RB
operations	NNS	O => operation	NN
methods	NNS	O => method	NN
specific	JJ	O => specific	JJ
values	NNS	O => value	NN
type	NN	O => type	NN
denoted	VBN	O => denot	VB
type	NN	O => type	NN
specified	VBN	O => specifi	VB
using	VBG	O => use	VB
type	NN	O => type	NN
literal	JJ	O => literal	JJ
composes	VBZ	O => compos	VB
type	NN	O => type	NN
existing	VBG	O => exist	VB
types	NNS	O => type	NN
language	NN	O => language	NN
predeclares	VBZ	O => predeclar	VB
certain	JJ	O => certain	JJ
type	NN	O => type	NN
names	NNS	O => name	NN
Others	NNS	O => Other	NN
introduced	VBN	O => introduc	VB
type	NN	O => type	NN
declarations	NNS	O => declaration	NN
Composite	JJ	O => Composite	JJ
types—array	NN	O => types—array	NN
struct	NN	O => struct	NN
pointer	NN	O => pointer	NN
function	NN	O => function	NN
interface	NN	O => interface	NN
slice	NN	O => slice	NN
map	NN	O => map	NN
channel	NN	O => channel	NN
types—may	RB	O => types—may	RB
constructed	VBN	O => construct	VB
using	VBG	O => use	VB
type	NN	O => type	NN
literals	NNS	O => literal	NN
type	NN	O => type	NN
underlying	VBG	O => under	VB
type	NN	O => type	NN
predeclared	JJ	O => predeclared	JJ
boolean	NN	O => boolean	NN
numeric	JJ	O => numeric	JJ
string	VBG	O => string	VB
types	NNS	O => type	NN
type	NN	O => type	NN
literal	JJ	O => literal	JJ
corresponding	JJ	O => corresponding	JJ
underlying	VBG	O => under	VB
type	NN	O => type	NN
Otherwise	RB	O => Otherwise	RB
underlying	VBG	O => under	VB
type	NN	O => type	NN
underlying	VBG	O => under	VB
type	NN	O => type	NN
type	NN	O => type	NN
refers	NNS	O => refer	NN
type	NN	O => type	NN
declaration	NN	O => declaration	NN
underlying	VBG	O => under	VB
type	NN	O => type	NN
underlying	VBG	O => under	VB
type	NN	O => type	NN
Method	NNP	B-GPE => Method	NNP
sets	VBZ	O => set	VB
type	NN	O => type	NN
have	VB	O => have	VB
method	NN	O => method	NN
set	NN	O => set	NN
associated	JJ	O => associated	JJ
method	NN	O => method	NN
set	NN	O => set	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
interface	NN	O => interface	NN
method	NN	O => method	NN
set	NN	O => set	NN
other	JJ	O => other	JJ
type	NN	O => type	NN
consists	VBZ	O => consist	VB
all	PDT	O => all	PDT
methods	NNS	O => method	NN
declared	VBN	O => declar	VB
receiver	NN	O => receiver	NN
type	NN	O => type	NN
method	NN	O => method	NN
set	NN	O => set	NN
corresponding	JJ	O => corresponding	JJ
pointer	NN	O => pointer	NN
type	NN	O => type	NN
set	NN	O => set	NN
all	PDT	O => all	PDT
methods	NNS	O => method	NN
declared	VBN	O => declar	VB
receiver	NN	O => receiver	NN
also	RB	O => also	RB
contains	VBZ	O => contain	VB
method	NN	O => method	NN
set	NN	O => set	NN
Further	JJ	O => Further	JJ
rules	NNS	O => rule	NN
apply	VBP	O => appli	VB
structs	NNS	O => struct	NN
containing	VBG	O => contain	VB
embedded	JJ	O => embedded	JJ
fields	NNS	O => field	NN
described	VBN	O => describ	VB
section	NN	O => section	NN
struct	NN	O => struct	NN
types	NNS	O => type	NN
other	JJ	O => other	JJ
type	NN	O => type	NN
empty	JJ	O => empty	JJ
method	NN	O => method	NN
set	NN	O => set	NN
method	NN	O => method	NN
set	VBN	O => set	VB
method	NN	O => method	NN
have	VB	O => have	VB
unique	JJ	O => unique	JJ
non-blank	JJ	O => non-blank	JJ
method	NN	O => method	NN
method	NN	O => method	NN
set	NN	O => set	NN
type	NN	O => type	NN
determines	VBZ	O => determin	VB
interfaces	NNS	O => interface	NN
type	NN	O => type	NN
implements	VBZ	O => implement	VB
methods	NNS	O => method	NN
called	VBD	O => call	VB
using	VBG	O => use	VB
receiver	NN	O => receiver	NN
type	NN	O => type	NN
Boolean	JJ	B-GPE => Boolean	JJ
types	NNS	O => type	NN
boolean	JJ	O => boolean	JJ
type	NN	O => type	NN
represents	VBZ	O => repres	VB
set	NN	O => set	NN
Boolean	JJ	B-GPE => Boolean	JJ
truth	NN	O => truth	NN
values	NNS	O => value	NN
denoted	VBN	O => denot	VB
predeclared	JJ	O => predeclared	JJ
constants	NNS	O => constant	NN
predeclared	JJ	O => predeclared	JJ
boolean	JJ	O => boolean	JJ
type	NN	O => type	NN
defined	VBN	O => defin	VB
type	NN	O => type	NN
Numeric	NNP	O => Numeric	NNP
types	NNS	O => type	NN
numeric	JJ	O => numeric	JJ
type	NN	O => type	NN
represents	VBZ	O => repres	VB
sets	VBZ	O => set	VB
integer	JJ	O => integer	JJ
floating-point	NN	O => floating-point	NN
values	NNS	O => value	NN
predeclared	JJ	O => predeclared	JJ
architecture-independent	JJ	O => architecture-independent	JJ
numeric	JJ	O => numeric	JJ
types	NNS	O => type	NN
value	NN	O => value	NN
n-bit	JJ	O => n-bit	JJ
integer	JJ	O => integer	JJ
bits	NNS	O => bit	NN
wide	JJ	O => wide	JJ
represented	VBN	O => repres	VB
using	VBG	O => use	VB
complement	NN	O => complement	NN
arithmetic	JJ	O => arithmetic	JJ
There	EX	O => There	EX
also	RB	O => also	RB
set	NN	O => set	NN
predeclared	JJ	O => predeclared	JJ
numeric	JJ	O => numeric	JJ
types	NNS	O => type	NN
implementation-specific	JJ	O => implementation-specific	JJ
sizes	NNS	O => size	NN
avoid	VB	O => avoid	VB
portability	NN	O => portability	NN
issues	NNS	O => issue	NN
all	PDT	O => all	PDT
numeric	JJ	O => numeric	JJ
types	NNS	O => type	NN
defined	VBN	O => defin	VB
types	NNS	O => type	NN
thus	RB	O => thus	RB
distinct	JJ	O => distinct	JJ
alias	NN	O => alias	NN
alias	NN	O => alias	NN
Explicit	NNP	B-PERSON => Explicit	NNP
conversions	NNS	O => conversion	NN
required	VBN	O => requir	VB
different	JJ	O => different	JJ
numeric	JJ	O => numeric	JJ
types	NNS	O => type	NN
mixed	VBN	O => mix	VB
expression	NN	O => expression	NN
assignment	NN	O => assignment	NN
instance	NN	O => instance	NN
type	NN	O => type	NN
even	RB	O => even	RB
have	VB	O => have	VB
size	NN	O => size	NN
particular	JJ	O => particular	JJ
architecture	NN	O => architecture	NN
String	VBG	O => string	VB
types	NNS	O => type	NN
string	VBG	O => string	VB
type	NN	O => type	NN
represents	VBZ	O => repres	VB
set	NN	O => set	NN
string	VBG	O => string	VB
values	NNS	O => value	NN
string	VBG	O => string	VB
value	NN	O => value	NN
possibly	RB	O => possibly	RB
empty	RB	O => empty	RB
sequence	NN	O => sequence	NN
bytes	NNS	O => byte	NN
number	NN	O => number	NN
bytes	NNS	O => byte	NN
called	VBD	O => call	VB
length	NN	O => length	NN
string	VBG	O => string	VB
never	RB	O => never	RB
negative	JJ	O => negative	JJ
Strings	NNS	O => String	NN
immutable	JJ	O => immutable	JJ
once	RB	O => once	RB
created	VBN	O => creat	VB
impossible	JJ	O => impossible	JJ
change	VBP	O => chang	VB
contents	NNS	O => content	NN
string	NN	O => string	NN
predeclared	JJ	O => predeclared	JJ
string	VBG	O => string	VB
type	NN	O => type	NN
defined	VBN	O => defin	VB
type	NN	O => type	NN
length	NN	O => length	NN
string	VBG	O => string	VB
discovered	VBN	O => discov	VB
using	VBG	O => use	VB
built-in	JJ	O => built-in	JJ
function	NN	O => function	NN
length	NN	O => length	NN
compile-time	JJ	O => compile-time	JJ
constant	JJ	O => constant	JJ
string	VBG	O => string	VB
constant	JJ	O => constant	JJ
string	NN	O => string	NN
bytes	NNS	O => byte	NN
accessed	VBN	O => access	VB
integer	JJ	O => integer	JJ
indices	NNS	O => index	NN
illegal	JJ	O => illegal	JJ
take	VB	O => take	VB
address	NN	O => address	NN
such	JJ	O => such	JJ
element	NN	O => element	NN
byte	NN	O => byte	NN
string	NN	O => string	NN
invalid	JJ	O => invalid	JJ
Array	NN	O => Array	NN
types	NNS	O => type	NN
array	NN	O => array	NN
numbered	JJ	O => numbered	JJ
sequence	NN	O => sequence	NN
elements	NNS	O => element	NN
single	JJ	O => single	JJ
type	NN	O => type	NN
called	VBD	O => call	VB
element	NN	O => element	NN
type	NN	O => type	NN
number	NN	O => number	NN
elements	NNS	O => element	NN
called	VBD	O => call	VB
length	NN	O => length	NN
array	NN	O => array	NN
never	RB	O => never	RB
negative	JJ	O => negative	JJ
length	NN	O => length	NN
part	NN	O => part	NN
array	NN	O => array	NN
type	NN	O => type	NN
evaluate	VBP	O => evalu	VB
non-negative	JJ	O => non-negative	JJ
constant	JJ	O => constant	JJ
representable	JJ	O => representable	JJ
value	NN	O => value	NN
type	NN	O => type	NN
length	NN	O => length	NN
array	NN	O => array	NN
discovered	VBN	O => discov	VB
using	VBG	O => use	VB
built-in	JJ	O => built-in	JJ
function	NN	O => function	NN
elements	NNS	O => element	NN
addressed	VBN	O => address	VB
integer	JJ	O => integer	JJ
indices	NNS	O => index	NN
Array	NN	O => Array	NN
types	NNS	O => type	NN
always	RB	O => always	RB
one-dimensional	JJ	O => one-dimensional	JJ
composed	VBN	O => compos	VB
form	NN	O => form	NN
multi-dimensional	JJ	O => multi-dimensional	JJ
types	NNS	O => type	NN
Slice	NNP	O => Slice	NNP
types	NNS	O => type	NN
slice	NN	O => slice	NN
descriptor	NN	O => descriptor	NN
contiguous	JJ	O => contiguous	JJ
segment	NN	O => segment	NN
underlying	VBG	O => under	VB
array	NN	O => array	NN
provides	VBZ	O => provid	VB
access	NN	O => access	NN
numbered	JJ	O => numbered	JJ
sequence	NN	O => sequence	NN
elements	NNS	O => element	NN
array	NN	O => array	NN
slice	NN	O => slice	NN
type	NN	O => type	NN
denotes	VBZ	O => denot	VB
set	NN	O => set	NN
all	PDT	O => all	PDT
slices	NNS	O => slice	NN
arrays	NNS	O => array	NN
element	NN	O => element	NN
type	NN	O => type	NN
number	NN	O => number	NN
elements	NNS	O => element	NN
called	VBD	O => call	VB
length	NN	O => length	NN
slice	NN	O => slice	NN
never	RB	O => never	RB
negative	JJ	O => negative	JJ
value	NN	O => value	NN
uninitialized	JJ	O => uninitialized	JJ
slice	NN	O => slice	NN
length	NN	O => length	NN
slice	NN	O => slice	NN
discovered	VBN	O => discov	VB
built-in	JJ	O => built-in	JJ
function	NN	O => function	NN
arrays	NNS	O => array	NN
change	VBP	O => chang	VB
execution	NN	O => execution	NN
elements	NNS	O => element	NN
addressed	VBN	O => address	VB
integer	JJ	O => integer	JJ
indices	NNS	O => index	NN
slice	NN	O => slice	NN
index	NN	O => index	NN
given	VBN	O => given	VB
element	NN	O => element	NN
less	JJR	O => less	JJR
index	NN	O => index	NN
element	NN	O => element	NN
underlying	VBG	O => under	VB
array	NN	O => array	NN
slice	NN	O => slice	NN
once	RB	O => once	RB
initialized	VBN	O => initi	VB
always	RB	O => always	RB
associated	JJ	O => associated	JJ
underlying	VBG	O => under	VB
array	NN	O => array	NN
holds	VBZ	O => hold	VB
elements	NNS	O => element	NN
slice	NN	O => slice	NN
therefore	RB	O => therefore	RB
shares	NNS	O => share	NN
storage	NN	O => storage	NN
array	NN	O => array	NN
other	JJ	O => other	JJ
slices	NNS	O => slice	NN
array	NN	O => array	NN
contrast	NN	O => contrast	NN
distinct	JJ	O => distinct	JJ
arrays	NNS	O => array	NN
always	RB	O => always	RB
represent	VBP	O => repres	VB
distinct	JJ	O => distinct	JJ
storage	NN	O => storage	NN
array	NN	O => array	NN
underlying	VBG	O => under	VB
slice	NN	O => slice	NN
extend	VB	O => extend	VB
end	NN	O => end	NN
slice	NN	O => slice	NN
capacity	NN	O => capacity	NN
measure	NN	O => measure	NN
extent	NN	O => extent	NN
sum	NN	O => sum	NN
length	NN	O => length	NN
slice	NN	O => slice	NN
length	NN	O => length	NN
array	NN	O => array	NN
slice	NN	O => slice	NN
slice	NN	O => slice	NN
length	NN	O => length	NN
capacity	NN	O => capacity	NN
created	VBN	O => creat	VB
slicing	VBG	O => slice	VB
new	JJ	O => new	JJ
original	JJ	O => original	JJ
slice	NN	O => slice	NN
capacity	NN	O => capacity	NN
slice	NN	O => slice	NN
discovered	VBN	O => discov	VB
using	VBG	O => use	VB
built-in	JJ	O => built-in	JJ
function	NN	O => function	NN
new	JJ	O => new	JJ
initialized	VBN	O => initi	VB
slice	NN	O => slice	NN
value	NN	O => value	NN
given	VBN	O => given	VB
element	NN	O => element	NN
type	NN	O => type	NN
made	VBN	O => made	VB
using	VBG	O => use	VB
built-in	JJ	O => built-in	JJ
function	NN	O => function	NN
takes	VBZ	O => take	VB
slice	NN	O => slice	NN
type	NN	O => type	NN
parameters	NNS	O => parameter	NN
specifying	VBG	O => specifi	VB
length	NN	O => length	NN
optionally	RB	O => optionally	RB
capacity	NN	O => capacity	NN
slice	NN	O => slice	NN
created	VBN	O => creat	VB
always	RB	O => always	RB
allocates	VBZ	O => alloc	VB
new	JJ	O => new	JJ
hidden	JJ	O => hidden	JJ
array	NN	O => array	NN
returned	VBN	O => return	VB
slice	NN	O => slice	NN
value	NN	O => value	NN
refers	NNS	O => refer	NN
executing	VBG	O => execut	VB
produces	VBZ	O => produc	VB
slice	NN	O => slice	NN
allocating	VBG	O => alloc	VB
array	NN	O => array	NN
slicing	VBG	O => slice	VB
so	RB	O => so	RB
expressions	NNS	O => expression	NN
equivalent	JJ	O => equivalent	JJ
arrays	NNS	O => array	NN
slices	NNS	O => slice	NN
always	RB	O => always	RB
one-dimensional	JJ	O => one-dimensional	JJ
composed	VBN	O => compos	VB
construct	NN	O => construct	NN
higher-dimensional	JJ	O => higher-dimensional	JJ
objects	NNS	O => object	NN
arrays	NNS	O => array	NN
arrays	NNS	O => array	NN
inner	JJ	O => inner	JJ
arrays	NNS	O => array	NN
construction	NN	O => construction	NN
always	RB	O => always	RB
length	NN	O => length	NN
however	RB	O => however	RB
slices	NNS	O => slice	NN
slices	NNS	O => slice	NN
arrays	NNS	O => array	NN
slices	NNS	O => slice	NN
inner	JJ	O => inner	JJ
lengths	NNS	O => length	NN
vary	VB	O => vary	VB
dynamically	RB	O => dynamically	RB
Moreover	RB	O => Moreover	RB
inner	JJ	O => inner	JJ
slices	NNS	O => slice	NN
initialized	VBN	O => initi	VB
individually	RB	O => individually	RB
Struct	NN	O => Struct	NN
types	NNS	O => type	NN
struct	NN	O => struct	NN
sequence	NN	O => sequence	NN
named	VBN	O => name	VB
elements	NNS	O => element	NN
called	VBD	O => call	VB
fields	NNS	O => field	NN
type	NN	O => type	NN
Field	NNP	B-PERSON => Field	NNP
names	VBZ	O => name	VB
specified	VBN	O => specifi	VB
explicitly	RB	O => explicitly	RB
IdentifierList	NNP	O => IdentifierList	NNP
implicitly	RB	O => implicitly	RB
EmbeddedField	NNP	B-GPE => EmbeddedField	NNP
struct	NN	O => struct	NN
non-blank	JJ	O => non-blank	JJ
field	NN	O => field	NN
names	VBZ	O => name	VB
unique	JJ	O => unique	JJ
field	NN	O => field	NN
declared	VBN	O => declar	VB
type	NN	O => type	NN
explicit	JJ	O => explicit	JJ
field	NN	O => field	NN
called	VBD	O => call	VB
embedded	JJ	O => embedded	JJ
field	NN	O => field	NN
embedded	JJ	O => embedded	JJ
field	NN	O => field	NN
specified	VBN	O => specifi	VB
type	NN	O => type	NN
pointer	NN	O => pointer	NN
non-interface	JJ	O => non-interface	JJ
type	NN	O => type	NN
pointer	NN	O => pointer	NN
type	NN	O => type	NN
unqualified	JJ	O => unqualified	JJ
type	NN	O => type	NN
acts	VBZ	O => act	VB
field	NN	O => field	NN
following	VBG	O => follow	VB
declaration	NN	O => declaration	NN
illegal	JJ	O => illegal	JJ
field	NN	O => field	NN
names	VBZ	O => name	VB
unique	JJ	O => unique	JJ
struct	NN	O => struct	NN
type	NN	O => type	NN
field	NN	O => field	NN
method	NN	O => method	NN
embedded	JJ	O => embedded	JJ
field	NN	O => field	NN
struct	NN	O => struct	NN
called	VBD	O => call	VB
promoted	VBN	O => promot	VB
legal	JJ	O => legal	JJ
selector	NN	O => selector	NN
denotes	VBZ	O => denot	VB
field	NN	O => field	NN
method	NN	O => method	NN
Promoted	VBN	O => promot	VB
fields	NNS	O => field	NN
act	VBP	O => act	VB
ordinary	JJ	O => ordinary	JJ
fields	NNS	O => field	NN
struct	NN	O => struct	NN
cannot	VBP	O => cannot	VB
used	VBN	O => use	VB
field	NN	O => field	NN
names	VBZ	O => name	VB
composite	JJ	O => composite	JJ
literals	NNS	O => literal	NN
struct	NN	O => struct	NN
Given	VBN	O => given	VB
struct	NN	O => struct	NN
type	NN	O => type	NN
defined	VBN	O => defin	VB
type	NN	O => type	NN
promoted	VBN	O => promot	VB
methods	NNS	O => method	NN
included	VBN	O => includ	VB
method	NN	O => method	NN
set	NN	O => set	NN
struct	NN	O => struct	NN
follows	VBZ	O => follow	VB
contains	VBZ	O => contain	VB
embedded	JJ	O => embedded	JJ
field	NN	O => field	NN
method	NN	O => method	NN
sets	VBZ	O => set	VB
include	VB	O => include	VB
promoted	VBN	O => promot	VB
methods	NNS	O => method	NN
receiver	NN	O => receiver	NN
method	NN	O => method	NN
set	NN	O => set	NN
also	RB	O => also	RB
includes	VBZ	O => includ	VB
promoted	VBN	O => promot	VB
methods	NNS	O => method	NN
receiver	NN	O => receiver	NN
contains	VBZ	O => contain	VB
embedded	JJ	O => embedded	JJ
field	NN	O => field	NN
method	NN	O => method	NN
sets	VBZ	O => set	VB
include	VB	O => include	VB
promoted	VBN	O => promot	VB
methods	NNS	O => method	NN
receiver	NN	O => receiver	NN
field	NN	O => field	NN
declaration	NN	O => declaration	NN
followed	VBN	O => follow	VB
optional	JJ	O => optional	JJ
string	VBG	O => string	VB
literal	NN	O => literal	NN
tag	NN	O => tag	NN
becomes	VBZ	O => becom	VB
attribute	NN	O => attribute	NN
all	PDT	O => all	PDT
fields	NNS	O => field	NN
corresponding	JJ	O => corresponding	JJ
field	NN	O => field	NN
declaration	NN	O => declaration	NN
empty	JJ	O => empty	JJ
tag	NN	O => tag	NN
string	VBG	O => string	VB
equivalent	NN	O => equivalent	NN
absent	JJ	O => absent	JJ
tag	NN	O => tag	NN
tags	NNS	O => tag	NN
made	VBN	O => made	VB
visible	JJ	O => visible	JJ
reflection	NN	O => reflection	NN
interface	NN	O => interface	NN
take	VB	O => take	VB
part	NN	O => part	NN
type	NN	O => type	NN
identity	NN	O => identity	NN
structs	NNS	O => struct	NN
otherwise	RB	O => otherwise	RB
ignored	VBN	O => ignor	VB
Pointer	NN	O => Pointer	NN
types	NNS	O => type	NN
pointer	NN	O => pointer	NN
type	NN	O => type	NN
denotes	VBZ	O => denot	VB
set	NN	O => set	NN
all	PDT	O => all	PDT
pointers	NNS	O => pointer	NN
variables	NNS	O => variable	NN
given	VBN	O => given	VB
type	NN	O => type	NN
called	VBD	O => call	VB
base	NN	O => base	NN
type	NN	O => type	NN
pointer	NN	O => pointer	NN
value	NN	O => value	NN
uninitialized	JJ	O => uninitialized	JJ
pointer	NN	O => pointer	NN
Function	NNP	O => Function	NNP
types	NNS	O => type	NN
function	NN	O => function	NN
type	NN	O => type	NN
denotes	VBZ	O => denot	VB
set	NN	O => set	NN
all	PDT	O => all	PDT
functions	NNS	O => function	NN
parameter	NN	O => parameter	NN
result	NN	O => result	NN
types	NNS	O => type	NN
value	NN	O => value	NN
uninitialized	JJ	O => uninitialized	JJ
variable	NN	O => variable	NN
function	NN	O => function	NN
type	NN	O => type	NN
list	NN	O => list	NN
parameters	NNS	O => parameter	NN
results	NNS	O => result	NN
names	VBZ	O => name	VB
IdentifierList	NNP	O => IdentifierList	NNP
all	PDT	O => all	PDT
present	VB	O => present	VB
all	PDT	O => all	PDT
absent	JJ	O => absent	JJ
present	JJ	O => present	JJ
stands	VBZ	O => stand	VB
item	NN	O => item	NN
parameter	NN	O => parameter	NN
result	NN	O => result	NN
specified	VBN	O => specifi	VB
type	NN	O => type	NN
all	PDT	O => all	PDT
non-blank	JJ	O => non-blank	JJ
names	VBZ	O => name	VB
signature	NN	O => signature	NN
unique	JJ	O => unique	JJ
absent	JJ	O => absent	JJ
type	NN	O => type	NN
stands	VBZ	O => stand	VB
item	NN	O => item	NN
type	NN	O => type	NN
Parameter	NNP	B-PERSON => Parameter	NNP
result	NN	O => result	NN
lists	NNS	O => list	NN
always	RB	O => always	RB
parenthesized	VBN	O => parenthes	VB
there	EX	O => there	EX
exactly	RB	O => exactly	RB
unnamed	JJ	O => unnamed	JJ
result	NN	O => result	NN
written	VBN	O => written	VB
unparenthesized	JJ	O => unparenthesized	JJ
type	NN	O => type	NN
final	JJ	O => final	JJ
incoming	NN	O => incoming	NN
parameter	NN	O => parameter	NN
function	NN	O => function	NN
signature	NN	O => signature	NN
have	VB	O => have	VB
type	NN	O => type	NN
prefixed	VBN	O => prefix	VB
function	NN	O => function	NN
such	JJ	O => such	JJ
parameter	NN	O => parameter	NN
called	VBD	O => call	VB
variadic	JJ	O => variadic	JJ
invoked	VBN	O => invok	VB
more	JJR	O => more	JJR
arguments	NNS	O => argument	NN
parameter	NN	O => parameter	NN
Interface	NNP	O => Interface	NNP
types	NNS	O => type	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
specifies	VBZ	O => specifi	VB
method	NN	O => method	NN
set	NN	O => set	NN
called	VBD	O => call	VB
interface	NN	O => interface	NN
variable	NN	O => variable	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
store	VB	O => store	VB
value	NN	O => value	NN
type	NN	O => type	NN
method	NN	O => method	NN
set	NN	O => set	NN
superset	NN	O => superset	NN
interface	NN	O => interface	NN
Such	JJ	O => Such	JJ
type	NN	O => type	NN
said	VBD	O => said	VB
implement	VB	O => implement	VB
interface	NN	O => interface	NN
value	NN	O => value	NN
uninitialized	JJ	O => uninitialized	JJ
variable	NN	O => variable	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
specify	VB	O => specify	VB
methods	NNS	O => method	NN
explicitly	RB	O => explicitly	RB
method	NN	O => method	NN
specifications	NNS	O => specification	NN
embed	VB	O => embed	VB
methods	NNS	O => method	NN
other	JJ	O => other	JJ
interfaces	NNS	O => interface	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
names	NNS	O => name	NN
explicitly	RB	O => explicitly	RB
specified	VBN	O => specifi	VB
method	NN	O => method	NN
unique	JJ	O => unique	JJ
blank	JJ	O => blank	JJ
More	RBR	O => More	RBR
type	NN	O => type	NN
implement	VB	O => implement	VB
interface	NN	O => interface	NN
instance	NN	O => instance	NN
types	NNS	O => type	NN
have	VB	O => have	VB
method	NN	O => method	NN
set	NN	O => set	NN
stands	VBZ	O => stand	VB
then	RB	O => then	RB
interface	NN	O => interface	NN
implemented	VBD	O => implement	VB
regardless	RB	O => regardless	RB
other	JJ	O => other	JJ
methods	NNS	O => method	NN
have	VB	O => have	VB
share	NN	O => share	NN
type	NN	O => type	NN
implements	VBZ	O => implement	VB
interface	NN	O => interface	NN
comprising	VBG	O => compris	VB
subset	NN	O => subset	NN
methods	NNS	O => method	NN
therefore	RB	O => therefore	RB
implement	VB	O => implement	VB
several	JJ	O => several	JJ
distinct	JJ	O => distinct	JJ
interfaces	NNS	O => interface	NN
instance	NN	O => instance	NN
all	PDT	O => all	PDT
types	NNS	O => type	NN
implement	VB	O => implement	VB
empty	JJ	O => empty	JJ
interface	NN	O => interface	NN
Similarly	RB	O => Similarly	RB
consider	VB	O => consider	VB
interface	NN	O => interface	NN
specification	NN	O => specification	NN
appears	VBZ	O => appear	VB
type	NN	O => type	NN
declaration	NN	O => declaration	NN
define	VB	O => define	VB
interface	NN	O => interface	NN
called	VBD	O => call	VB
also	RB	O => also	RB
implement	VB	O => implement	VB
implement	VB	O => implement	VB
interface	NN	O => interface	NN
well	RB	O => well	RB
interface	NN	O => interface	NN
interface	NN	O => interface	NN
possibly	RB	O => possibly	RB
qualified	VBN	O => qualifi	VB
interface	NN	O => interface	NN
type	NN	O => type	NN
place	NN	O => place	NN
method	NN	O => method	NN
specification	NN	O => specification	NN
called	VBD	O => call	VB
embedding	VBG	O => embed	VB
interface	NN	O => interface	NN
method	NN	O => method	NN
set	NN	O => set	NN
union	NN	O => union	NN
method	NN	O => method	NN
sets	VBZ	O => set	VB
explicitly	RB	O => explicitly	RB
declared	VBN	O => declar	VB
methods	NNS	O => method	NN
embedded	JJ	O => embedded	JJ
interfaces	NNS	O => interface	NN
union	NN	O => union	NN
method	NN	O => method	NN
sets	VBZ	O => set	VB
contains	VBZ	O => contain	VB
exported	VBN	O => export	VB
non-exported	JJ	O => non-exported	JJ
methods	NNS	O => method	NN
method	NN	O => method	NN
set	NN	O => set	NN
exactly	RB	O => exactly	RB
once	RB	O => once	RB
methods	NNS	O => method	NN
names	VBZ	O => name	VB
have	VB	O => have	VB
identical	JJ	O => identical	JJ
signatures	NNS	O => signature	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
embed	VB	O => embed	VB
interface	NN	O => interface	NN
type	NN	O => type	NN
embeds	VBZ	O => emb	VB
recursively	RB	O => recursively	RB
Map	NNP	O => Map	NNP
types	NNS	O => type	NN
map	NN	O => map	NN
unordered	JJ	O => unordered	JJ
group	NN	O => group	NN
elements	NNS	O => element	NN
type	NN	O => type	NN
called	VBD	O => call	VB
element	NN	O => element	NN
type	NN	O => type	NN
indexed	VBN	O => index	VB
set	NN	O => set	NN
unique	JJ	O => unique	JJ
keys	NNS	O => key	NN
type	NN	O => type	NN
called	VBD	O => call	VB
key	JJ	O => key	JJ
type	NN	O => type	NN
value	NN	O => value	NN
uninitialized	JJ	O => uninitialized	JJ
map	NN	O => map	NN
comparison	NN	O => comparison	NN
operators	NNS	O => operator	NN
fully	RB	O => fully	RB
defined	VBN	O => defin	VB
operands	NNS	O => operand	NN
key	JJ	O => key	JJ
type	NN	O => type	NN
thus	RB	O => thus	RB
key	JJ	O => key	JJ
type	NN	O => type	NN
function	NN	O => function	NN
map	NN	O => map	NN
slice	NN	O => slice	NN
key	JJ	O => key	JJ
type	NN	O => type	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
comparison	NN	O => comparison	NN
operators	NNS	O => operator	NN
defined	VBN	O => defin	VB
dynamic	JJ	O => dynamic	JJ
key	JJ	O => key	JJ
values	NNS	O => value	NN
failure	NN	O => failure	NN
cause	VB	O => cause	VB
run-time	JJ	O => run-time	JJ
panic	NN	O => panic	NN
number	NN	O => number	NN
map	NN	O => map	NN
elements	NNS	O => element	NN
called	VBD	O => call	VB
length	NN	O => length	NN
map	NN	O => map	NN
discovered	VBN	O => discov	VB
using	VBG	O => use	VB
built-in	JJ	O => built-in	JJ
function	NN	O => function	NN
change	VBP	O => chang	VB
execution	NN	O => execution	NN
Elements	NNS	O => Element	NN
added	VBN	O => ad	VB
execution	NN	O => execution	NN
using	VBG	O => use	VB
assignments	NNS	O => assignment	NN
retrieved	VBN	O => retriev	VB
index	NN	O => index	NN
expressions	NNS	O => expression	NN
removed	VBN	O => remov	VB
built-in	JJ	O => built-in	JJ
function	NN	O => function	NN
new	JJ	O => new	JJ
empty	JJ	O => empty	JJ
map	NN	O => map	NN
value	NN	O => value	NN
made	VBN	O => made	VB
using	VBG	O => use	VB
built-in	JJ	O => built-in	JJ
function	NN	O => function	NN
takes	VBZ	O => take	VB
map	NN	O => map	NN
type	NN	O => type	NN
optional	JJ	O => optional	JJ
capacity	NN	O => capacity	NN
hint	NN	O => hint	NN
arguments	NNS	O => argument	NN
initial	JJ	O => initial	JJ
capacity	NN	O => capacity	NN
does	VBZ	O => doe	VB
bound	VBN	O => bound	VB
size	NN	O => size	NN
maps	NNS	O => map	NN
grow	VB	O => grow	VB
accommodate	VB	O => accommodate	VB
number	NN	O => number	NN
items	NNS	O => item	NN
stored	VBN	O => store	VB
exception	NN	O => exception	NN
maps	NNS	O => map	NN
map	NN	O => map	NN
equivalent	NN	O => equivalent	NN
empty	JJ	O => empty	JJ
map	NN	O => map	NN
elements	NNS	O => element	NN
added	VBN	O => ad	VB
Channel	NNP	O => Channel	NNP
types	NNS	O => type	NN
channel	NN	O => channel	NN
provides	VBZ	O => provid	VB
mechanism	NN	O => mechanism	NN
concurrently	RB	O => concurrently	RB
executing	VBG	O => execut	VB
functions	NNS	O => function	NN
communicate	VB	O => communicate	VB
sending	VBG	O => send	VB
receiving	VBG	O => receiv	VB
values	NNS	O => value	NN
specified	VBN	O => specifi	VB
element	NN	O => element	NN
type	NN	O => type	NN
value	NN	O => value	NN
uninitialized	JJ	O => uninitialized	JJ
channel	NN	O => channel	NN
optional	JJ	O => optional	JJ
operator	NN	O => operator	NN
specifies	VBZ	O => specifi	VB
channel	NN	O => channel	NN
direction	NN	O => direction	NN
send	VB	O => send	VB
receive	VBP	O => receiv	VB
direction	NN	O => direction	NN
given	VBN	O => given	VB
channel	NN	O => channel	NN
bidirectional	JJ	O => bidirectional	JJ
channel	NN	O => channel	NN
constrained	VBN	O => constrain	VB
send	VB	O => send	VB
receive	NN	O => receive	NN
assignment	NN	O => assignment	NN
explicit	JJ	O => explicit	JJ
conversion	NN	O => conversion	NN
operator	NN	O => operator	NN
associates	VBZ	O => associ	VB
leftmost	NN	O => leftmost	NN
possible	JJ	O => possible	JJ
new	JJ	O => new	JJ
initialized	VBN	O => initi	VB
channel	NN	O => channel	NN
value	NN	O => value	NN
made	VBN	O => made	VB
using	VBG	O => use	VB
built-in	JJ	O => built-in	JJ
function	NN	O => function	NN
takes	VBZ	O => take	VB
channel	NN	O => channel	NN
type	NN	O => type	NN
optional	JJ	O => optional	JJ
capacity	NN	O => capacity	NN
arguments	NNS	O => argument	NN
capacity	NN	O => capacity	NN
number	NN	O => number	NN
elements	NNS	O => element	NN
sets	VBZ	O => set	VB
size	NN	O => size	NN
buffer	NN	O => buffer	NN
channel	NN	O => channel	NN
capacity	NN	O => capacity	NN
absent	JJ	O => absent	JJ
channel	NN	O => channel	NN
unbuffered	JJ	O => unbuffered	JJ
communication	NN	O => communication	NN
succeeds	VBZ	O => succeed	VB
sender	NN	O => sender	NN
receiver	NN	O => receiver	NN
ready	JJ	O => ready	JJ
Otherwise	RB	O => Otherwise	RB
channel	NN	O => channel	NN
buffered	JJ	O => buffered	JJ
communication	NN	O => communication	NN
succeeds	VBZ	O => succeed	VB
blocking	VBG	O => block	VB
buffer	NN	O => buffer	NN
full	JJ	O => full	JJ
sends	NNS	O => send	NN
empty	JJ	O => empty	JJ
receives	NNS	O => receife	NN
channel	NN	O => channel	NN
never	RB	O => never	RB
ready	VBP	O => readi	VB
communication	NN	O => communication	NN
channel	NN	O => channel	NN
closed	JJ	O => closed	JJ
built-in	JJ	O => built-in	JJ
function	NN	O => function	NN
multi-valued	JJ	O => multi-valued	JJ
assignment	NN	O => assignment	NN
form	NN	O => form	NN
receive	NN	O => receive	NN
operator	NN	O => operator	NN
reports	VBZ	O => report	VB
received	JJ	O => received	JJ
value	NN	O => value	NN
was	VBD	O => was	VB
sent	VBN	O => sent	VB
channel	NN	O => channel	NN
was	VBD	O => was	VB
closed	VBN	O => close	VB
single	JJ	O => single	JJ
channel	NN	O => channel	NN
used	VBN	O => use	VB
send	VB	O => send	VB
statements	NNS	O => statement	NN
receive	NN	O => receive	NN
operations	NNS	O => operation	NN
calls	VBZ	O => call	VB
built-in	JJ	O => built-in	JJ
functions	NNS	O => function	NN
number	NN	O => number	NN
goroutines	NNS	O => goroutine	NN
further	RBR	O => further	RBR
synchronization	NN	O => synchronization	NN
Channels	NNP	O => Channels	NNP
act	VBP	O => act	VB
first-in-first-out	JJ	O => first-in-first-out	JJ
queues	NNS	O => queue	NN
example	NN	O => example	NN
goroutine	NN	O => goroutine	NN
sends	VBZ	O => send	VB
values	NNS	O => value	NN
channel	NN	O => channel	NN
second	JJ	O => second	JJ
goroutine	NN	O => goroutine	NN
receives	NNS	O => receife	NN
values	NNS	O => value	NN
received	JJ	O => received	JJ
order	NN	O => order	NN
sent	NN	O => sent	NN
Properties	NNS	O => Property	NN
types	NNS	O => type	NN
values	NNS	O => value	NN
Type	NNP	B-PERSON => Type	NNP
identity	NN	O => identity	NN
types	NNS	O => type	NN
identical	JJ	O => identical	JJ
different	JJ	O => different	JJ
defined	VBN	O => defin	VB
type	NN	O => type	NN
always	RB	O => always	RB
different	JJ	O => different	JJ
other	JJ	O => other	JJ
type	NN	O => type	NN
Otherwise	RB	O => Otherwise	RB
types	NNS	O => type	NN
identical	JJ	O => identical	JJ
underlying	VBG	O => under	VB
type	NN	O => type	NN
literals	NNS	O => literal	NN
structurally	RB	O => structurally	RB
equivalent	JJ	O => equivalent	JJ
have	VB	O => have	VB
literal	NN	O => literal	NN
structure	NN	O => structure	NN
corresponding	JJ	O => corresponding	JJ
components	NNS	O => component	NN
have	VB	O => have	VB
identical	JJ	O => identical	JJ
types	NNS	O => type	NN
detail	NN	O => detail	NN
array	NN	O => array	NN
types	NNS	O => type	NN
identical	JJ	O => identical	JJ
have	VB	O => have	VB
identical	JJ	O => identical	JJ
element	NN	O => element	NN
types	NNS	O => type	NN
array	NN	O => array	NN
length	NN	O => length	NN
slice	NN	O => slice	NN
types	NNS	O => type	NN
identical	JJ	O => identical	JJ
have	VB	O => have	VB
identical	JJ	O => identical	JJ
element	NN	O => element	NN
types	NNS	O => type	NN
struct	NN	O => struct	NN
types	NNS	O => type	NN
identical	JJ	O => identical	JJ
have	VB	O => have	VB
sequence	NN	O => sequence	NN
fields	NNS	O => field	NN
corresponding	JJ	O => corresponding	JJ
fields	NNS	O => field	NN
have	VB	O => have	VB
names	NNS	O => name	NN
identical	JJ	O => identical	JJ
types	NNS	O => type	NN
identical	JJ	O => identical	JJ
tags	NNS	O => tag	NN
Non-exported	JJ	O => Non-exported	JJ
field	NN	O => field	NN
names	VBZ	O => name	VB
different	JJ	O => different	JJ
packages	NNS	O => package	NN
always	RB	O => always	RB
different	JJ	O => different	JJ
pointer	NN	O => pointer	NN
types	NNS	O => type	NN
identical	JJ	O => identical	JJ
have	VB	O => have	VB
identical	JJ	O => identical	JJ
base	NN	O => base	NN
types	NNS	O => type	NN
function	NN	O => function	NN
types	NNS	O => type	NN
identical	JJ	O => identical	JJ
have	VB	O => have	VB
number	NN	O => number	NN
parameters	NNS	O => parameter	NN
result	NN	O => result	NN
values	NNS	O => value	NN
corresponding	JJ	O => corresponding	JJ
parameter	NN	O => parameter	NN
result	NN	O => result	NN
types	NNS	O => type	NN
identical	JJ	O => identical	JJ
functions	NNS	O => function	NN
variadic	JJ	O => variadic	JJ
Parameter	NNP	B-PERSON => Parameter	NNP
result	NN	O => result	NN
names	VBZ	O => name	VB
required	VBN	O => requir	VB
match	VB	O => match	VB
interface	NN	O => interface	NN
types	NNS	O => type	NN
identical	JJ	O => identical	JJ
have	VB	O => have	VB
set	NN	O => set	NN
methods	NNS	O => method	NN
names	VBZ	O => name	VB
identical	JJ	O => identical	JJ
function	NN	O => function	NN
types	NNS	O => type	NN
Non-exported	JJ	O => Non-exported	JJ
method	NN	O => method	NN
names	VBZ	O => name	VB
different	JJ	O => different	JJ
packages	NNS	O => package	NN
always	RB	O => always	RB
different	JJ	O => different	JJ
order	NN	O => order	NN
methods	NNS	O => method	NN
irrelevant	JJ	O => irrelevant	JJ
map	NN	O => map	NN
types	NNS	O => type	NN
identical	JJ	O => identical	JJ
have	VB	O => have	VB
identical	JJ	O => identical	JJ
key	JJ	O => key	JJ
element	NN	O => element	NN
types	NNS	O => type	NN
channel	NN	O => channel	NN
types	NNS	O => type	NN
identical	JJ	O => identical	JJ
have	VB	O => have	VB
identical	JJ	O => identical	JJ
element	NN	O => element	NN
types	NNS	O => type	NN
direction	NN	O => direction	NN
Given	VBN	O => given	VB
declarations	NNS	O => declaration	NN
types	NNS	O => type	NN
identical	JJ	O => identical	JJ
different	JJ	O => different	JJ
new	JJ	O => new	JJ
types	NNS	O => type	NN
created	VBN	O => creat	VB
distinct	JJ	O => distinct	JJ
type	NN	O => type	NN
definitions	NNS	O => definition	NN
different	JJ	O => different	JJ
different	JJ	O => different	JJ
Assignability	NNP	O => Assignability	NNP
value	NN	O => value	NN
assignable	JJ	O => assignable	JJ
variable	NN	O => variable	NN
type	NN	O => type	NN
assignable	JJ	O => assignable	JJ
following	VBG	O => follow	VB
conditions	NNS	O => condition	NN
applies	NNS	O => apply	NN
type	NN	O => type	NN
identical	JJ	O => identical	JJ
type	NN	O => type	NN
have	VB	O => have	VB
identical	JJ	O => identical	JJ
underlying	VBG	O => under	VB
types	NNS	O => type	NN
least	JJS	O => least	JJS
defined	VBN	O => defin	VB
type	NN	O => type	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
implements	VBZ	O => implement	VB
bidirectional	JJ	O => bidirectional	JJ
channel	NN	O => channel	NN
value	NN	O => value	NN
channel	NN	O => channel	NN
type	NN	O => type	NN
type	NN	O => type	NN
have	VB	O => have	VB
identical	JJ	O => identical	JJ
element	NN	O => element	NN
types	NNS	O => type	NN
least	JJS	O => least	JJS
defined	VBN	O => defin	VB
type	NN	O => type	NN
predeclared	JJ	O => predeclared	JJ
identifier	NN	O => identifier	NN
pointer	NN	O => pointer	NN
function	NN	O => function	NN
slice	NN	O => slice	NN
map	NN	O => map	NN
channel	NN	O => channel	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
untyped	JJ	O => untyped	JJ
constant	JJ	O => constant	JJ
representable	JJ	O => representable	JJ
value	NN	O => value	NN
type	NN	O => type	NN
Representability	NNP	O => Representability	NNP
constant	JJ	O => constant	JJ
representable	JJ	O => representable	JJ
value	NN	O => value	NN
type	NN	O => type	NN
following	VBG	O => follow	VB
conditions	NNS	O => condition	NN
applies	NNS	O => apply	NN
set	NN	O => set	NN
values	NNS	O => value	NN
determined	VBN	O => determin	VB
floating-point	NN	O => floating-point	NN
type	NN	O => type	NN
rounded	VBN	O => round	VB
precision	NN	O => precision	NN
overflow	NN	O => overflow	NN
Rounding	VBG	O => round	VB
uses	VBZ	O => use	VB
IEEE	NNP	O => IEEE	NNP
round-to-even	JJ	O => round-to-even	JJ
rules	NNS	O => rule	NN
IEEE	NNP	O => IEEE	NNP
negative	JJ	O => negative	JJ
further	RBR	O => further	RBR
simplified	VBD	O => simplifi	VB
unsigned	JJ	O => unsigned	JJ
Note	NN	O => Note	NN
constant	JJ	O => constant	JJ
values	NNS	O => value	NN
never	RB	O => never	RB
result	NN	O => result	NN
IEEE	NNP	O => IEEE	NNP
negative	JJ	O => negative	JJ
NaN	NNP	O => NaN	NNP
infinity	NN	O => infinity	NN
complex	JJ	O => complex	JJ
type	NN	O => type	NN
components	NNS	O => component	NN
representable	JJ	O => representable	JJ
values	NNS	O => value	NN
component	NN	O => component	NN
type	NN	O => type	NN
Blocks	NNP	B-PERSON => Blocks	NNP
block	NN	O => block	NN
possibly	RB	O => possibly	RB
empty	JJ	O => empty	JJ
sequence	NN	O => sequence	NN
declarations	NNS	O => declaration	NN
statements	NNS	O => statement	NN
matching	VBG	O => match	VB
brace	NN	O => brace	NN
brackets	NNS	O => bracket	NN
addition	NN	O => addition	NN
explicit	JJ	O => explicit	JJ
blocks	VBZ	O => block	VB
source	NN	O => source	NN
code	NN	O => code	NN
there	EX	O => there	EX
implicit	JJ	O => implicit	JJ
blocks	NNS	O => block	NN
universe	JJ	O => universe	JJ
block	NN	O => block	NN
encompasses	VBZ	O => encompass	VB
all	PDT	O => all	PDT
Go	NNP	O => Go	NNP
source	NN	O => source	NN
text	NN	O => text	NN
package	NN	O => package	NN
package	NN	O => package	NN
block	NN	O => block	NN
containing	VBG	O => contain	VB
all	PDT	O => all	PDT
Go	NNP	O => Go	NNP
source	NN	O => source	NN
text	NN	O => text	NN
package	NN	O => package	NN
file	NN	O => file	NN
file	NN	O => file	NN
block	NN	O => block	NN
containing	VBG	O => contain	VB
all	PDT	O => all	PDT
Go	NNP	O => Go	NNP
source	NN	O => source	NN
text	NN	O => text	NN
file	NN	O => file	NN
switch	NN	O => switch	NN
statement	NN	O => statement	NN
considered	VBN	O => consid	VB
own	JJ	O => own	JJ
implicit	JJ	O => implicit	JJ
block	NN	O => block	NN
clause	NN	O => clause	NN
switch	NN	O => switch	NN
select	JJ	O => select	JJ
statement	NN	O => statement	NN
acts	VBZ	O => act	VB
implicit	JJ	O => implicit	JJ
block	NN	O => block	NN
Blocks	NNP	B-PERSON => Blocks	NNP
nest	JJS	O => n	JJ
influence	NN	O => influence	NN
scoping	NN	O => scoping	NN
Declarations	NNS	O => Declaration	NN
scope	NN	O => scope	NN
declaration	NN	O => declaration	NN
binds	VBZ	O => bind	VB
non-blank	JJ	O => non-blank	JJ
identifier	NN	O => identifier	NN
constant	NN	O => constant	NN
type	NN	O => type	NN
variable	JJ	O => variable	JJ
function	NN	O => function	NN
label	NN	O => label	NN
package	NN	O => package	NN
identifier	NN	O => identifier	NN
program	NN	O => program	NN
declared	VBN	O => declar	VB
identifier	NN	O => identifier	NN
declared	VBN	O => declar	VB
twice	RB	O => twice	RB
block	NN	O => block	NN
identifier	NN	O => identifier	NN
declared	VBN	O => declar	VB
file	NN	O => file	NN
package	NN	O => package	NN
block	NN	O => block	NN
blank	JJ	O => blank	JJ
identifier	NN	O => identifier	NN
used	VBN	O => use	VB
other	JJ	O => other	JJ
identifier	NN	O => identifier	NN
declaration	NN	O => declaration	NN
does	VBZ	O => doe	VB
introduce	VB	O => introduce	VB
binding	VBG	O => bind	VB
thus	RB	O => thus	RB
declared	VBN	O => declar	VB
package	NN	O => package	NN
block	NN	O => block	NN
identifier	NN	O => identifier	NN
used	VBN	O => use	VB
function	NN	O => function	NN
declarations	NNS	O => declaration	NN
blank	JJ	O => blank	JJ
identifier	NN	O => identifier	NN
does	VBZ	O => doe	VB
introduce	VB	O => introduce	VB
new	JJ	O => new	JJ
binding	NN	O => binding	NN
scope	NN	O => scope	NN
declared	VBN	O => declar	VB
identifier	NN	O => identifier	NN
extent	NN	O => extent	NN
source	NN	O => source	NN
text	NN	O => text	NN
identifier	NN	O => identifier	NN
denotes	VBZ	O => denot	VB
specified	VBN	O => specifi	VB
constant	NN	O => constant	NN
type	NN	O => type	NN
variable	JJ	O => variable	JJ
function	NN	O => function	NN
label	NN	O => label	NN
package	NN	O => package	NN
Go	NNP	O => Go	NNP
lexically	RB	O => lexically	RB
scoped	NNS	O => scoped	NNS
using	VBG	O => use	VB
blocks	NNS	O => block	NN
scope	NN	O => scope	NN
predeclared	JJ	O => predeclared	JJ
identifier	NN	O => identifier	NN
universe	JJ	O => universe	JJ
block	NN	O => block	NN
scope	NN	O => scope	NN
identifier	NN	O => identifier	NN
denoting	VBG	O => denot	VB
constant	NN	O => constant	NN
type	NN	O => type	NN
variable	JJ	O => variable	JJ
function	NN	O => function	NN
method	NN	O => method	NN
declared	VBN	O => declar	VB
top	JJ	O => top	JJ
level	NN	O => level	NN
function	NN	O => function	NN
package	NN	O => package	NN
block	NN	O => block	NN
scope	NN	O => scope	NN
package	NN	O => package	NN
imported	VBN	O => import	VB
package	NN	O => package	NN
file	NN	O => file	NN
block	NN	O => block	NN
file	NN	O => file	NN
containing	VBG	O => contain	VB
import	NN	O => import	NN
declaration	NN	O => declaration	NN
scope	NN	O => scope	NN
identifier	NN	O => identifier	NN
denoting	VBG	O => denot	VB
method	NN	O => method	NN
receiver	NN	O => receiver	NN
function	NN	O => function	NN
parameter	NN	O => parameter	NN
result	NN	O => result	NN
variable	NN	O => variable	NN
function	NN	O => function	NN
body	NN	O => body	NN
scope	NN	O => scope	NN
constant	JJ	O => constant	JJ
variable	NN	O => variable	NN
identifier	NN	O => identifier	NN
declared	VBN	O => declar	VB
function	NN	O => function	NN
begins	VBZ	O => begin	VB
end	NN	O => end	NN
ConstSpec	NNP	O => ConstSpec	NNP
VarSpec	NNP	B-GPE => VarSpec	NNP
ShortVarDecl	NNP	O => ShortVarDecl	NNP
short	JJ	O => short	JJ
variable	NN	O => variable	NN
declarations	NNS	O => declaration	NN
ends	VBZ	O => end	VB
end	NN	O => end	NN
innermost	NN	O => innermost	NN
containing	VBG	O => contain	VB
block	NN	O => block	NN
scope	NN	O => scope	NN
type	NN	O => type	NN
identifier	NN	O => identifier	NN
declared	VBN	O => declar	VB
function	NN	O => function	NN
begins	VBZ	O => begin	VB
identifier	NN	O => identifier	NN
TypeSpec	NNP	B-GPE => TypeSpec	NNP
ends	VBZ	O => end	VB
end	NN	O => end	NN
innermost	NN	O => innermost	NN
containing	VBG	O => contain	VB
block	NN	O => block	NN
identifier	NN	O => identifier	NN
declared	VBN	O => declar	VB
block	NN	O => block	NN
redeclared	VBN	O => redeclar	VB
inner	JJ	O => inner	JJ
block	NN	O => block	NN
identifier	NN	O => identifier	NN
inner	JJ	O => inner	JJ
declaration	NN	O => declaration	NN
scope	NN	O => scope	NN
denotes	VBZ	O => denot	VB
entity	NN	O => entity	NN
declared	VBN	O => declar	VB
inner	JJ	O => inner	JJ
declaration	NN	O => declaration	NN
package	NN	O => package	NN
clause	NN	O => clause	NN
declaration	NN	O => declaration	NN
package	NN	O => package	NN
does	VBZ	O => doe	VB
appear	VBP	O => appear	VB
scope	NN	O => scope	NN
purpose	NN	O => purpose	NN
identify	VB	O => identify	VB
files	NNS	O => file	NN
belonging	VBG	O => belong	VB
package	NN	O => package	NN
specify	VB	O => specify	VB
default	NN	O => default	NN
package	NN	O => package	NN
import	NN	O => import	NN
declarations	NNS	O => declaration	NN
Label	NNP	B-PERSON => Label	NNP
scopes	VBZ	O => scope	VB
Labels	NNP	B-GPE => Labels	NNP
declared	VBN	O => declar	VB
labeled	JJ	O => labeled	JJ
statements	NNS	O => statement	NN
used	VBN	O => use	VB
break	NN	O => break	NN
continue	VBP	O => continu	VB
goto	NN	O => goto	NN
statements	NNS	O => statement	NN
illegal	JJ	O => illegal	JJ
define	VB	O => define	VB
label	NN	O => label	NN
never	RB	O => never	RB
used	VBN	O => use	VB
contrast	NN	O => contrast	NN
other	JJ	O => other	JJ
identifiers	NNS	O => identifier	NN
labels	NNS	O => label	NN
block	NN	O => block	NN
scoped	NNS	O => scoped	NNS
do	VBP	O => do	VB
conflict	VB	O => conflict	VB
identifiers	NNS	O => identifier	NN
labels	NNS	O => label	NN
scope	NN	O => scope	NN
label	NN	O => label	NN
body	NN	O => body	NN
function	NN	O => function	NN
declared	VBN	O => declar	VB
excludes	VBZ	O => exclud	VB
body	NN	O => body	NN
nested	JJ	O => nested	JJ
function	NN	O => function	NN
Blank	NNP	B-PERSON => Blank	NNP
identifier	NN	O => identifier	NN
blank	JJ	O => blank	JJ
identifier	NN	O => identifier	NN
represented	VBN	O => repres	VB
underscore	JJ	O => underscore	JJ
character	NN	O => character	NN
serves	VBZ	O => serv	VB
anonymous	JJ	O => anonymous	JJ
placeholder	NN	O => placeholder	NN
instead	RB	O => instead	RB
regular	JJ	O => regular	JJ
non-blank	JJ	O => non-blank	JJ
identifier	NN	O => identifier	NN
special	JJ	O => special	JJ
meaning	NN	O => meaning	NN
declarations	NNS	O => declaration	NN
operand	NN	O => operand	NN
assignments	NNS	O => assignment	NN
Predeclared	VBD	O => predeclar	VB
identifiers	NNS	O => identifier	NN
following	VBG	O => follow	VB
identifiers	NNS	O => identifier	NN
implicitly	RB	O => implicitly	RB
declared	VBN	O => declar	VB
universe	JJ	O => universe	JJ
block	NN	O => block	NN
Exported	VBN	O => export	VB
identifiers	NNS	O => identifier	NN
identifier	NN	O => identifier	NN
exported	JJ	O => exported	JJ
permit	VB	O => permit	VB
access	NN	O => access	NN
package	NN	O => package	NN
identifier	NN	O => identifier	NN
exported	JJ	O => exported	JJ
character	NN	O => character	NN
identifier	NN	O => identifier	NN
Unicode	NNP	B-GPE => Unicode	NNP
upper	JJ	O => upper	JJ
case	NN	O => case	NN
letter	NN	O => letter	NN
Unicode	NNP	B-GPE => Unicode	NNP
class	NN	O => class	NN
Lu	NNP	O => Lu	NNP
identifier	NN	O => identifier	NN
declared	VBN	O => declar	VB
package	NN	O => package	NN
block	NN	O => block	NN
field	NN	O => field	NN
method	NN	O => method	NN
other	JJ	O => other	JJ
identifiers	NNS	O => identifier	NN
exported	VBN	O => export	VB
Uniqueness	NNP	O => Uniqueness	NNP
identifiers	NNS	O => identifier	NN
Given	VBN	O => given	VB
set	NN	O => set	NN
identifiers	NNS	O => identifier	NN
identifier	NN	O => identifier	NN
called	VBD	O => call	VB
unique	JJ	O => unique	JJ
different	JJ	O => different	JJ
other	JJ	O => other	JJ
set	NN	O => set	NN
identifiers	NNS	O => identifier	NN
different	JJ	O => different	JJ
spelled	VBN	O => spell	VB
differently	RB	O => differently	RB
appear	VBP	O => appear	VB
different	JJ	O => different	JJ
packages	NNS	O => package	NN
exported	VBN	O => export	VB
Otherwise	RB	O => Otherwise	RB
Constant	JJ	O => Constant	JJ
declarations	NNS	O => declaration	NN
constant	JJ	O => constant	JJ
declaration	NN	O => declaration	NN
binds	VBZ	O => bind	VB
list	NN	O => list	NN
identifiers	NNS	O => identifier	NN
names	VBZ	O => name	VB
constants	NNS	O => constant	NN
values	NNS	O => value	NN
list	NN	O => list	NN
constant	JJ	O => constant	JJ
expressions	NNS	O => expression	NN
number	NN	O => number	NN
identifiers	NNS	O => identifier	NN
equal	VB	O => equal	VB
number	NN	O => number	NN
expressions	NNS	O => expression	NN
nth	JJ	O => nth	JJ
identifier	NN	O => identifier	NN
left	NN	O => left	NN
bound	VBN	O => bound	VB
value	NN	O => value	NN
nth	JJ	O => nth	JJ
expression	NN	O => expression	NN
right	VB	O => right	VB
type	NN	O => type	NN
present	JJ	O => present	JJ
all	PDT	O => all	PDT
constants	NNS	O => constant	NN
take	VB	O => take	VB
type	NN	O => type	NN
specified	VBN	O => specifi	VB
expressions	NNS	O => expression	NN
assignable	JJ	O => assignable	JJ
type	NN	O => type	NN
type	NN	O => type	NN
omitted	VBN	O => omit	VB
constants	NNS	O => constant	NN
take	VB	O => take	VB
individual	JJ	O => individual	JJ
types	NNS	O => type	NN
corresponding	JJ	O => corresponding	JJ
expressions	NNS	O => expression	NN
expression	NN	O => expression	NN
values	NNS	O => value	NN
untyped	JJ	O => untyped	JJ
constants	NNS	O => constant	NN
declared	VBN	O => declar	VB
constants	NNS	O => constant	NN
remain	VBP	O => remain	VB
untyped	JJ	O => untyped	JJ
constant	JJ	O => constant	JJ
identifiers	NNS	O => identifier	NN
denote	VBP	O => denot	VB
constant	JJ	O => constant	JJ
values	NNS	O => value	NN
instance	NN	O => instance	NN
expression	NN	O => expression	NN
floating-point	NN	O => floating-point	NN
literal	JJ	O => literal	JJ
constant	JJ	O => constant	JJ
identifier	NN	O => identifier	NN
denotes	VBZ	O => denot	VB
floating-point	NN	O => floating-point	NN
constant	NN	O => constant	NN
even	RB	O => even	RB
literal	NN	O => literal	NN
fractional	JJ	O => fractional	JJ
part	NN	O => part	NN
parenthesized	VBN	O => parenthes	VB
declaration	NN	O => declaration	NN
list	NN	O => list	NN
expression	NN	O => expression	NN
list	NN	O => list	NN
omitted	VBN	O => omit	VB
ConstSpec	NNP	O => ConstSpec	NNP
Such	JJ	O => Such	JJ
empty	JJ	O => empty	JJ
list	NN	O => list	NN
equivalent	NN	O => equivalent	NN
textual	JJ	O => textual	JJ
substitution	NN	O => substitution	NN
preceding	VBG	O => preced	VB
non-empty	JJ	O => non-empty	JJ
expression	NN	O => expression	NN
list	NN	O => list	NN
type	NN	O => type	NN
Omitting	VBG	O => omit	VB
list	NN	O => list	NN
expressions	NNS	O => expression	NN
therefore	RB	O => therefore	RB
equivalent	NN	O => equivalent	NN
repeating	VBG	O => repeat	VB
previous	JJ	O => previous	JJ
list	NN	O => list	NN
number	NN	O => number	NN
identifiers	NNS	O => identifier	NN
equal	VB	O => equal	VB
number	NN	O => number	NN
expressions	NNS	O => expression	NN
previous	JJ	O => previous	JJ
list	NN	O => list	NN
Together	RB	O => Together	RB
constant	JJ	O => constant	JJ
generator	NN	O => generator	NN
mechanism	NN	O => mechanism	NN
permits	VBZ	O => permit	VB
light-weight	JJ	O => light-weight	JJ
declaration	NN	O => declaration	NN
sequential	JJ	O => sequential	JJ
values	NNS	O => value	NN
Iota	NNP	O => Iota	NNP
constant	JJ	O => constant	JJ
declaration	NN	O => declaration	NN
predeclared	JJ	O => predeclared	JJ
identifier	NN	O => identifier	NN
represents	VBZ	O => repres	VB
successive	JJ	O => successive	JJ
untyped	JJ	O => untyped	JJ
integer	JJ	O => integer	JJ
constants	NNS	O => constant	NN
value	NN	O => value	NN
index	NN	O => index	NN
respective	JJ	O => respective	JJ
ConstSpec	NNP	O => ConstSpec	NNP
constant	JJ	O => constant	JJ
declaration	NN	O => declaration	NN
starting	VBG	O => start	VB
used	VBN	O => use	VB
construct	NN	O => construct	NN
set	NN	O => set	NN
related	JJ	O => related	JJ
constants	NNS	O => constant	NN
definition	NN	O => definition	NN
multiple	NN	O => multiple	NN
uses	VBZ	O => use	VB
ConstSpec	NNP	O => ConstSpec	NNP
all	PDT	O => all	PDT
have	VB	O => have	VB
value	NN	O => value	NN
last	JJ	O => last	JJ
example	NN	O => example	NN
exploits	VBZ	O => exploit	VB
implicit	JJ	O => implicit	JJ
repetition	NN	O => repetition	NN
last	JJ	O => last	JJ
non-empty	JJ	O => non-empty	JJ
expression	NN	O => expression	NN
list	NN	O => list	NN
Type	NNP	B-PERSON => Type	NNP
declarations	NNS	O => declaration	NN
type	NN	O => type	NN
declaration	NN	O => declaration	NN
binds	VBZ	O => bind	VB
identifier	NN	O => identifier	NN
type	NN	O => type	NN
type	NN	O => type	NN
Type	NNP	B-PERSON => Type	NNP
declarations	NNS	O => declaration	NN
come	VB	O => come	VB
forms	NNS	O => form	NN
alias	NN	O => alias	NN
declarations	NNS	O => declaration	NN
type	NN	O => type	NN
definitions	NNS	O => definition	NN
Alias	NNP	O => Alias	NNP
declarations	NNS	O => declaration	NN
alias	NN	O => alias	NN
declaration	NN	O => declaration	NN
binds	VBZ	O => bind	VB
identifier	NN	O => identifier	NN
given	VBN	O => given	VB
type	NN	O => type	NN
scope	NN	O => scope	NN
identifier	NN	O => identifier	NN
serves	VBZ	O => serv	VB
alias	NN	O => alias	NN
type	NN	O => type	NN
Type	NNP	B-PERSON => Type	NNP
definitions	NNS	O => definition	NN
type	NN	O => type	NN
definition	NN	O => definition	NN
creates	VBZ	O => creat	VB
new	JJ	O => new	JJ
distinct	JJ	O => distinct	JJ
type	NN	O => type	NN
underlying	VBG	O => under	VB
type	NN	O => type	NN
operations	NNS	O => operation	NN
given	VBN	O => given	VB
type	NN	O => type	NN
binds	VBZ	O => bind	VB
identifier	NN	O => identifier	NN
new	JJ	O => new	JJ
type	NN	O => type	NN
called	VBD	O => call	VB
defined	VBN	O => defin	VB
type	NN	O => type	NN
different	JJ	O => different	JJ
other	JJ	O => other	JJ
type	NN	O => type	NN
including	VBG	O => includ	VB
type	NN	O => type	NN
created	VBN	O => creat	VB
defined	VBN	O => defin	VB
type	NN	O => type	NN
have	VB	O => have	VB
methods	NNS	O => method	NN
associated	JJ	O => associated	JJ
does	VBZ	O => doe	VB
inherit	VB	O => inherit	VB
methods	NNS	O => method	NN
bound	VBN	O => bound	VB
given	VBN	O => given	VB
type	NN	O => type	NN
method	NN	O => method	NN
set	NN	O => set	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
elements	NNS	O => element	NN
composite	JJ	O => composite	JJ
type	NN	O => type	NN
remains	VBZ	O => remain	VB
unchanged	JJ	O => unchanged	JJ
Type	NNP	B-PERSON => Type	NNP
definitions	NNS	O => definition	NN
used	VBN	O => use	VB
define	VB	O => define	VB
different	JJ	O => different	JJ
boolean	NN	O => boolean	NN
numeric	JJ	O => numeric	JJ
string	VBG	O => string	VB
types	NNS	O => type	NN
associate	NN	O => associate	NN
methods	NNS	O => method	NN
Variable	JJ	O => Variable	JJ
declarations	NNS	O => declaration	NN
variable	NN	O => variable	NN
declaration	NN	O => declaration	NN
creates	VBZ	O => creat	VB
more	JJR	O => more	JJR
variables	NNS	O => variable	NN
binds	VBZ	O => bind	VB
corresponding	JJ	O => corresponding	JJ
identifiers	NNS	O => identifier	NN
gives	VBZ	O => give	VB
type	NN	O => type	NN
initial	JJ	O => initial	JJ
value	NN	O => value	NN
list	NN	O => list	NN
expressions	NNS	O => expression	NN
given	VBN	O => given	VB
variables	NNS	O => variable	NN
initialized	VBN	O => initi	VB
expressions	NNS	O => expression	NN
following	VBG	O => follow	VB
rules	NNS	O => rule	NN
assignments	NNS	O => assignment	NN
Otherwise	RB	O => Otherwise	RB
variable	NN	O => variable	NN
initialized	VBN	O => initi	VB
value	NN	O => value	NN
type	NN	O => type	NN
present	JJ	O => present	JJ
variable	NN	O => variable	NN
given	VBN	O => given	VB
type	NN	O => type	NN
Otherwise	RB	O => Otherwise	RB
variable	NN	O => variable	NN
given	VBN	O => given	VB
type	NN	O => type	NN
corresponding	JJ	O => corresponding	JJ
initialization	NN	O => initialization	NN
value	NN	O => value	NN
assignment	NN	O => assignment	NN
value	NN	O => value	NN
untyped	JJ	O => untyped	JJ
constant	NN	O => constant	NN
implicitly	RB	O => implicitly	RB
converted	VBN	O => convert	VB
default	NN	O => default	NN
type	NN	O => type	NN
untyped	JJ	O => untyped	JJ
boolean	JJ	O => boolean	JJ
value	NN	O => value	NN
implicitly	RB	O => implicitly	RB
converted	VBN	O => convert	VB
type	NN	O => type	NN
predeclared	JJ	O => predeclared	JJ
value	NN	O => value	NN
cannot	VBP	O => cannot	VB
used	VBN	O => use	VB
initialize	VB	O => initialize	VB
variable	NN	O => variable	NN
explicit	JJ	O => explicit	JJ
type	NN	O => type	NN
Implementation	NNP	O => Implementation	NNP
restriction	NN	O => restriction	NN
compiler	NN	O => compiler	NN
make	VB	O => make	VB
illegal	JJ	O => illegal	JJ
declare	VB	O => declare	VB
variable	NN	O => variable	NN
function	NN	O => function	NN
body	NN	O => body	NN
variable	NN	O => variable	NN
never	RB	O => never	RB
used	VBN	O => use	VB
Short	NNP	O => Short	NNP
variable	NN	O => variable	NN
declarations	NNS	O => declaration	NN
short	JJ	O => short	JJ
variable	NN	O => variable	NN
declaration	NN	O => declaration	NN
uses	VBZ	O => use	VB
syntax	NN	O => syntax	NN
shorthand	NN	O => shorthand	NN
regular	JJ	O => regular	JJ
variable	NN	O => variable	NN
declaration	NN	O => declaration	NN
initializer	JJ	O => initializer	JJ
expressions	NNS	O => expression	NN
types	NNS	O => type	NN
regular	JJ	O => regular	JJ
variable	NN	O => variable	NN
declarations	NNS	O => declaration	NN
short	JJ	O => short	JJ
variable	NN	O => variable	NN
declaration	NN	O => declaration	NN
redeclare	VB	O => redeclare	VB
variables	NNS	O => variable	NN
provided	VBN	O => provid	VB
were	VBD	O => were	VB
originally	RB	O => originally	RB
declared	VBN	O => declar	VB
earlier	RBR	O => earlier	RBR
block	NN	O => block	NN
parameter	NN	O => parameter	NN
lists	NNS	O => list	NN
block	NN	O => block	NN
function	NN	O => function	NN
body	NN	O => body	NN
type	NN	O => type	NN
least	JJS	O => least	JJS
non-blank	JJ	O => non-blank	JJ
variables	NNS	O => variable	NN
new	JJ	O => new	JJ
consequence	NN	O => consequence	NN
redeclaration	NN	O => redeclaration	NN
appear	VBP	O => appear	VB
multi-variable	JJ	O => multi-variable	JJ
short	JJ	O => short	JJ
declaration	NN	O => declaration	NN
Redeclaration	NN	O => Redeclaration	NN
does	VBZ	O => doe	VB
introduce	VB	O => introduce	VB
new	JJ	O => new	JJ
variable	NN	O => variable	NN
just	RB	O => just	RB
assigns	VBZ	O => assign	VB
new	JJ	O => new	JJ
value	NN	O => value	NN
original	JJ	O => original	JJ
Short	NNP	O => Short	NNP
variable	NN	O => variable	NN
declarations	NNS	O => declaration	NN
appear	VBP	O => appear	VB
functions	NNS	O => function	NN
contexts	NNS	O => context	NN
such	JJ	O => such	JJ
initializers	NNS	O => initializer	NN
switch	NN	O => switch	NN
statements	NNS	O => statement	NN
used	VBN	O => use	VB
declare	VB	O => declare	VB
local	JJ	O => local	JJ
temporary	JJ	O => temporary	JJ
variables	NNS	O => variable	NN
Function	NNP	O => Function	NNP
declarations	NNS	O => declaration	NN
function	NN	O => function	NN
declaration	NN	O => declaration	NN
binds	VBZ	O => bind	VB
identifier	NN	O => identifier	NN
function	NN	O => function	NN
function	NN	O => function	NN
function	NN	O => function	NN
signature	NN	O => signature	NN
declares	VBZ	O => declar	VB
result	NN	O => result	NN
parameters	NNS	O => parameter	NN
function	NN	O => function	NN
body	NN	O => body	NN
statement	NN	O => statement	NN
list	NN	O => list	NN
end	NN	O => end	NN
terminating	NN	O => terminating	NN
statement	NN	O => statement	NN
function	NN	O => function	NN
declaration	NN	O => declaration	NN
omit	VB	O => omit	VB
body	NN	O => body	NN
Such	JJ	O => Such	JJ
declaration	NN	O => declaration	NN
provides	VBZ	O => provid	VB
signature	NN	O => signature	NN
function	NN	O => function	NN
implemented	VBD	O => implement	VB
Go	NNP	B-GPE => Go	NNP
such	JJ	O => such	JJ
assembly	NN	O => assembly	NN
routine	NN	O => routine	NN
Method	NNP	B-GPE => Method	NNP
declarations	NNS	O => declaration	NN
method	NN	O => method	NN
function	NN	O => function	NN
receiver	NN	O => receiver	NN
method	NN	O => method	NN
declaration	NN	O => declaration	NN
binds	VBZ	O => bind	VB
identifier	NN	O => identifier	NN
method	NN	O => method	NN
method	NN	O => method	NN
associates	VBZ	O => associ	VB
method	NN	O => method	NN
receiver	NN	O => receiver	NN
base	NN	O => base	NN
type	NN	O => type	NN
receiver	NN	O => receiver	NN
specified	VBN	O => specifi	VB
extra	JJ	O => extra	JJ
parameter	NN	O => parameter	NN
section	NN	O => section	NN
preceding	VBG	O => preced	VB
method	NN	O => method	NN
parameter	NN	O => parameter	NN
section	NN	O => section	NN
declare	VB	O => declare	VB
single	JJ	O => single	JJ
non-variadic	JJ	O => non-variadic	JJ
parameter	NN	O => parameter	NN
receiver	NN	O => receiver	NN
type	NN	O => type	NN
defined	VBN	O => defin	VB
type	NN	O => type	NN
pointer	NN	O => pointer	NN
defined	VBN	O => defin	VB
type	NN	O => type	NN
called	VBD	O => call	VB
receiver	NN	O => receiver	NN
base	NN	O => base	NN
type	NN	O => type	NN
receiver	NN	O => receiver	NN
base	NN	O => base	NN
type	NN	O => type	NN
cannot	VBP	O => cannot	VB
pointer	NN	O => pointer	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
defined	VBN	O => defin	VB
package	NN	O => package	NN
method	NN	O => method	NN
method	NN	O => method	NN
said	VBD	O => said	VB
bound	VBN	O => bound	VB
receiver	NN	O => receiver	NN
base	NN	O => base	NN
type	NN	O => type	NN
method	NN	O => method	NN
visible	JJ	O => visible	JJ
selectors	NNS	O => selector	NN
type	NN	O => type	NN
non-blank	JJ	O => non-blank	JJ
receiver	NN	O => receiver	NN
identifier	NN	O => identifier	NN
unique	JJ	O => unique	JJ
method	NN	O => method	NN
signature	NN	O => signature	NN
receiver	NN	O => receiver	NN
value	NN	O => value	NN
referenced	VBN	O => referenc	VB
body	NN	O => body	NN
method	NN	O => method	NN
identifier	NN	O => identifier	NN
omitted	VBN	O => omit	VB
declaration	NN	O => declaration	NN
applies	NNS	O => apply	NN
general	JJ	O => general	JJ
parameters	NNS	O => parameter	NN
functions	NNS	O => function	NN
methods	NNS	O => method	NN
base	NN	O => base	NN
type	NN	O => type	NN
non-blank	JJ	O => non-blank	JJ
names	VBZ	O => name	VB
methods	NNS	O => method	NN
bound	VBN	O => bound	VB
unique	JJ	O => unique	JJ
base	NN	O => base	NN
type	NN	O => type	NN
struct	NN	O => struct	NN
type	NN	O => type	NN
non-blank	JJ	O => non-blank	JJ
method	NN	O => method	NN
field	NN	O => field	NN
names	VBZ	O => name	VB
distinct	JJ	O => distinct	JJ
Given	VBN	O => given	VB
defined	VBN	O => defin	VB
type	NN	O => type	NN
declarations	NNS	O => declaration	NN
bind	VBP	O => bind	VB
methods	NNS	O => method	NN
receiver	NN	O => receiver	NN
type	NN	O => type	NN
base	NN	O => base	NN
type	NN	O => type	NN
type	NN	O => type	NN
method	NN	O => method	NN
type	NN	O => type	NN
function	NN	O => function	NN
receiver	NN	O => receiver	NN
argument	NN	O => argument	NN
instance	NN	O => instance	NN
method	NN	O => method	NN
type	NN	O => type	NN
However	RB	O => However	RB
function	NN	O => function	NN
declared	VBN	O => declar	VB
way	NN	O => way	NN
method	NN	O => method	NN
Expressions	NNS	O => Expression	NN
expression	NN	O => expression	NN
specifies	VBZ	O => specifi	VB
computation	NN	O => computation	NN
value	NN	O => value	NN
applying	VBG	O => appli	VB
operators	NNS	O => operator	NN
functions	NNS	O => function	NN
operands	NNS	O => operand	NN
Operands	NNS	O => Operand	NN
Operands	NNS	O => Operand	NN
denote	VBP	O => denot	VB
elementary	JJ	O => elementary	JJ
values	NNS	O => value	NN
expression	NN	O => expression	NN
operand	NN	O => operand	NN
literal	JJ	O => literal	JJ
possibly	RB	O => possibly	RB
qualified	VBN	O => qualifi	VB
non-blank	JJ	O => non-blank	JJ
identifier	NN	O => identifier	NN
denoting	VBG	O => denot	VB
constant	NN	O => constant	NN
variable	JJ	O => variable	JJ
function	NN	O => function	NN
parenthesized	VBN	O => parenthes	VB
expression	NN	O => expression	NN
blank	JJ	O => blank	JJ
identifier	NN	O => identifier	NN
appear	VBP	O => appear	VB
operand	NN	O => operand	NN
left-hand	JJ	O => left-hand	JJ
side	NN	O => side	NN
assignment	NN	O => assignment	NN
Qualified	VBN	O => qualifi	VB
identifiers	NNS	O => identifier	NN
qualified	JJ	O => qualified	JJ
identifier	NN	O => identifier	NN
identifier	NN	O => identifier	NN
qualified	JJ	O => qualified	JJ
package	NN	O => package	NN
prefix	NN	O => prefix	NN
package	NN	O => package	NN
identifier	NN	O => identifier	NN
blank	JJ	O => blank	JJ
qualified	JJ	O => qualified	JJ
identifier	NN	O => identifier	NN
accesses	VBZ	O => access	VB
identifier	NN	O => identifier	NN
different	JJ	O => different	JJ
package	NN	O => package	NN
imported	VBN	O => import	VB
identifier	NN	O => identifier	NN
exported	JJ	O => exported	JJ
declared	VBN	O => declar	VB
package	NN	O => package	NN
block	NN	O => block	NN
package	NN	O => package	NN
Composite	JJ	O => Composite	JJ
literals	NNS	O => literal	NN
Composite	JJ	O => Composite	JJ
literals	NNS	O => literal	NN
construct	NN	O => construct	NN
values	NNS	O => value	NN
structs	NNS	O => struct	NN
arrays	NNS	O => array	NN
slices	NNS	O => slice	NN
maps	NNS	O => map	NN
create	VB	O => create	VB
new	JJ	O => new	JJ
value	NN	O => value	NN
time	NN	O => time	NN
evaluated	VBN	O => evalu	VB
consist	VBP	O => consist	VB
type	NN	O => type	NN
literal	NN	O => literal	NN
followed	VBN	O => follow	VB
brace-bound	JJ	O => brace-bound	JJ
list	NN	O => list	NN
elements	NNS	O => element	NN
element	NN	O => element	NN
optionally	RB	O => optionally	RB
preceded	VBN	O => preced	VB
corresponding	JJ	O => corresponding	JJ
key	NN	O => key	NN
LiteralType	NNP	B-GPE => LiteralType	NNP
underlying	VBG	O => under	VB
type	NN	O => type	NN
struct	NN	O => struct	NN
array	VB	O => array	VB
slice	NN	O => slice	NN
map	NN	O => map	NN
type	NN	O => type	NN
grammar	NN	O => grammar	NN
enforces	VBZ	O => enforc	VB
constraint	NN	O => constraint	NN
type	NN	O => type	NN
given	VBN	O => given	VB
TypeName	NN	O => TypeName	NN
types	NNS	O => type	NN
elements	NNS	O => element	NN
keys	NNS	O => key	NN
assignable	JJ	O => assignable	JJ
respective	JJ	O => respective	JJ
field	NN	O => field	NN
element	NN	O => element	NN
key	JJ	O => key	JJ
types	NNS	O => type	NN
literal	NN	O => literal	NN
type	NN	O => type	NN
there	EX	O => there	EX
additional	JJ	O => additional	JJ
conversion	NN	O => conversion	NN
key	JJ	O => key	JJ
interpreted	VBN	O => interpret	VB
field	NN	O => field	NN
struct	NN	O => struct	NN
literals	NNS	O => literal	NN
index	NN	O => index	NN
array	NN	O => array	NN
slice	NN	O => slice	NN
literals	NNS	O => literal	NN
key	JJ	O => key	JJ
map	NN	O => map	NN
literals	NNS	O => literal	NN
map	NN	O => map	NN
literals	NNS	O => literal	NN
all	PDT	O => all	PDT
elements	NNS	O => element	NN
have	VB	O => have	VB
key	NN	O => key	NN
error	NN	O => error	NN
specify	VB	O => specify	VB
multiple	NN	O => multiple	NN
elements	NNS	O => element	NN
field	NN	O => field	NN
constant	JJ	O => constant	JJ
key	JJ	O => key	JJ
value	NN	O => value	NN
non-constant	JJ	O => non-constant	JJ
map	NN	O => map	NN
keys	NNS	O => key	NN
see	VB	O => see	VB
section	NN	O => section	NN
evaluation	NN	O => evaluation	NN
order	NN	O => order	NN
struct	NN	O => struct	NN
literals	NNS	O => literal	NN
following	VBG	O => follow	VB
rules	NNS	O => rule	NN
apply	VBP	O => appli	VB
key	JJ	O => key	JJ
field	NN	O => field	NN
declared	VBN	O => declar	VB
struct	NN	O => struct	NN
type	NN	O => type	NN
element	NN	O => element	NN
list	NN	O => list	NN
does	VBZ	O => doe	VB
contain	VB	O => contain	VB
keys	NNS	O => key	NN
list	NN	O => list	NN
element	NN	O => element	NN
struct	NN	O => struct	NN
field	NN	O => field	NN
order	NN	O => order	NN
fields	NNS	O => field	NN
declared	VBN	O => declar	VB
element	NN	O => element	NN
key	NN	O => key	NN
element	NN	O => element	NN
have	VB	O => have	VB
key	NN	O => key	NN
element	NN	O => element	NN
list	NN	O => list	NN
contains	VBZ	O => contain	VB
keys	NNS	O => key	NN
does	VBZ	O => doe	VB
have	VB	O => have	VB
element	NN	O => element	NN
struct	NN	O => struct	NN
field	NN	O => field	NN
Omitted	VBN	O => omit	VB
fields	NNS	O => field	NN
get	VBP	O => get	VB
value	NN	O => value	NN
field	NN	O => field	NN
literal	NN	O => literal	NN
omit	VB	O => omit	VB
element	NN	O => element	NN
list	NN	O => list	NN
such	JJ	O => such	JJ
literal	NN	O => literal	NN
evaluates	VBZ	O => evalu	VB
value	NN	O => value	NN
type	NN	O => type	NN
error	NN	O => error	NN
specify	VB	O => specify	VB
element	NN	O => element	NN
non-exported	JJ	O => non-exported	JJ
field	NN	O => field	NN
struct	NN	O => struct	NN
belonging	VBG	O => belong	VB
different	JJ	O => different	JJ
package	NN	O => package	NN
Given	VBN	O => given	VB
declarations	NNS	O => declaration	NN
write	VB	O => write	VB
array	NN	O => array	NN
slice	NN	O => slice	NN
literals	NNS	O => literal	NN
following	VBG	O => follow	VB
rules	NNS	O => rule	NN
apply	VBP	O => appli	VB
element	NN	O => element	NN
associated	JJ	O => associated	JJ
integer	JJ	O => integer	JJ
index	NN	O => index	NN
marking	VBG	O => mark	VB
position	NN	O => position	NN
array	NN	O => array	NN
element	NN	O => element	NN
key	JJ	O => key	JJ
uses	VBZ	O => use	VB
key	JJ	O => key	JJ
index	NN	O => index	NN
key	JJ	O => key	JJ
non-negative	JJ	O => non-negative	JJ
constant	JJ	O => constant	JJ
representable	JJ	O => representable	JJ
value	NN	O => value	NN
type	NN	O => type	NN
typed	JJ	O => typed	JJ
integer	JJ	O => integer	JJ
type	NN	O => type	NN
element	NN	O => element	NN
key	JJ	O => key	JJ
uses	VBZ	O => use	VB
previous	JJ	O => previous	JJ
element	NN	O => element	NN
index	NN	O => index	NN
element	NN	O => element	NN
key	NN	O => key	NN
index	NN	O => index	NN
Taking	VBG	O => take	VB
address	NN	O => address	NN
composite	JJ	O => composite	JJ
literal	NN	O => literal	NN
generates	VBZ	O => generat	VB
pointer	NN	O => pointer	NN
unique	JJ	O => unique	JJ
variable	NN	O => variable	NN
initialized	VBN	O => initi	VB
literal	NN	O => literal	NN
value	NN	O => value	NN
Note	NN	O => Note	NN
value	NN	O => value	NN
slice	NN	O => slice	NN
map	NN	O => map	NN
type	NN	O => type	NN
initialized	VBN	O => initi	VB
empty	JJ	O => empty	JJ
value	NN	O => value	NN
type	NN	O => type	NN
Consequently	RB	O => Consequently	RB
taking	VBG	O => take	VB
address	NN	O => address	NN
empty	JJ	O => empty	JJ
slice	NN	O => slice	NN
map	NN	O => map	NN
composite	JJ	O => composite	JJ
literal	NN	O => literal	NN
does	VBZ	O => doe	VB
have	VB	O => have	VB
effect	NN	O => effect	NN
allocating	VBG	O => alloc	VB
new	JJ	O => new	JJ
slice	NN	O => slice	NN
map	NN	O => map	NN
value	NN	O => value	NN
new	JJ	O => new	JJ
length	NN	O => length	NN
array	NN	O => array	NN
literal	NN	O => literal	NN
length	NN	O => length	NN
specified	VBN	O => specifi	VB
literal	NN	O => literal	NN
type	NN	O => type	NN
fewer	JJR	O => fewer	JJR
elements	NNS	O => element	NN
length	NN	O => length	NN
provided	VBN	O => provid	VB
literal	JJ	O => literal	JJ
missing	JJ	O => missing	JJ
elements	NNS	O => element	NN
set	NN	O => set	NN
value	NN	O => value	NN
array	NN	O => array	NN
element	NN	O => element	NN
type	NN	O => type	NN
error	NN	O => error	NN
provide	VBP	O => provid	VB
elements	NNS	O => element	NN
index	NN	O => index	NN
values	NNS	O => value	NN
index	NN	O => index	NN
range	NN	O => range	NN
array	NN	O => array	NN
notation	NN	O => notation	NN
specifies	VBZ	O => specifi	VB
array	NN	O => array	NN
length	NN	O => length	NN
equal	VB	O => equal	VB
maximum	JJ	O => maximum	JJ
element	NN	O => element	NN
index	NN	O => index	NN
slice	NN	O => slice	NN
literal	NN	O => literal	NN
describes	VBZ	O => describ	VB
entire	JJ	O => entire	JJ
underlying	VBG	O => under	VB
array	NN	O => array	NN
literal	JJ	O => literal	JJ
Thus	NNP	O => Thus	NNP
length	NN	O => length	NN
capacity	NN	O => capacity	NN
slice	NN	O => slice	NN
literal	NN	O => literal	NN
maximum	JJ	O => maximum	JJ
element	NN	O => element	NN
index	NN	O => index	NN
slice	NN	O => slice	NN
literal	NN	O => literal	NN
form	NN	O => form	NN
shorthand	NN	O => shorthand	NN
slice	NN	O => slice	NN
operation	NN	O => operation	NN
applied	VBD	O => appli	VB
array	NN	O => array	NN
composite	JJ	O => composite	JJ
literal	NN	O => literal	NN
array	VB	O => array	VB
slice	NN	O => slice	NN
map	NN	O => map	NN
type	NN	O => type	NN
elements	NNS	O => element	NN
map	NN	O => map	NN
keys	NNS	O => key	NN
composite	JJ	O => composite	JJ
literals	NNS	O => literal	NN
elide	VB	O => elide	VB
respective	JJ	O => respective	JJ
literal	NN	O => literal	NN
type	NN	O => type	NN
identical	JJ	O => identical	JJ
element	NN	O => element	NN
key	JJ	O => key	JJ
type	NN	O => type	NN
Similarly	RB	O => Similarly	RB
elements	NNS	O => element	NN
keys	NNS	O => key	NN
addresses	NNS	O => address	NN
composite	JJ	O => composite	JJ
literals	NNS	O => literal	NN
elide	VB	O => elide	VB
element	NN	O => element	NN
key	JJ	O => key	JJ
type	NN	O => type	NN
parsing	JJ	O => parsing	JJ
ambiguity	NN	O => ambiguity	NN
arises	NNS	O => arise	NN
composite	JJ	O => composite	JJ
literal	NN	O => literal	NN
using	VBG	O => use	VB
TypeName	NNP	B-GPE => TypeName	NNP
form	NN	O => form	NN
LiteralType	NNP	B-GPE => LiteralType	NNP
appears	VBZ	O => appear	VB
operand	NN	O => operand	NN
keyword	NN	O => keyword	NN
opening	NN	O => opening	NN
brace	NN	O => brace	NN
block	NN	O => block	NN
switch	NN	O => switch	NN
statement	NN	O => statement	NN
composite	JJ	O => composite	JJ
literal	NN	O => literal	NN
enclosed	VBN	O => enclos	VB
parentheses	NNS	O => parenthesis	NN
square	JJ	O => square	JJ
brackets	NNS	O => bracket	NN
curly	RB	O => curly	RB
braces	NNS	O => brace	NN
rare	JJ	O => rare	JJ
case	NN	O => case	NN
opening	NN	O => opening	NN
brace	NN	O => brace	NN
literal	NN	O => literal	NN
erroneously	RB	O => erroneously	RB
parsed	VBN	O => pars	VB
introducing	VBG	O => introduc	VB
block	NN	O => block	NN
statements	NNS	O => statement	NN
resolve	VB	O => resolve	VB
ambiguity	NN	O => ambiguity	NN
composite	JJ	O => composite	JJ
literal	NN	O => literal	NN
appear	VBP	O => appear	VB
parentheses	NNS	O => parenthesis	NN
Examples	NNS	O => Example	NN
valid	JJ	O => valid	JJ
array	VB	O => array	VB
slice	NN	O => slice	NN
map	NN	O => map	NN
literals	NNS	O => literal	NN
Function	NNP	O => Function	NNP
literals	NNS	O => literal	NN
function	NN	O => function	NN
literal	NN	O => literal	NN
represents	VBZ	O => repres	VB
anonymous	JJ	O => anonymous	JJ
function	NN	O => function	NN
function	NN	O => function	NN
literal	NN	O => literal	NN
assigned	VBN	O => assign	VB
variable	NN	O => variable	NN
invoked	VBN	O => invok	VB
directly	RB	O => directly	RB
Function	NNP	O => Function	NNP
literals	NNS	O => literal	NN
closures	NNS	O => closure	NN
refer	VB	O => refer	VB
variables	NNS	O => variable	NN
defined	VBN	O => defin	VB
surrounding	VBG	O => surround	VB
function	NN	O => function	NN
variables	NNS	O => variable	NN
then	RB	O => then	RB
shared	VBN	O => share	VB
surrounding	VBG	O => surround	VB
function	NN	O => function	NN
function	NN	O => function	NN
literal	JJ	O => literal	JJ
survive	VBP	O => surviv	VB
long	RB	O => long	RB
accessible	JJ	O => accessible	JJ
Primary	JJ	O => Primary	JJ
expressions	NNS	O => expression	NN
Primary	JJ	O => Primary	JJ
expressions	NNS	O => expression	NN
operands	NNS	O => operand	NN
unary	JJ	O => unary	JJ
binary	JJ	O => binary	JJ
expressions	NNS	O => expression	NN
Selectors	NNS	O => Selector	NN
primary	JJ	O => primary	JJ
expression	NN	O => expression	NN
package	NN	O => package	NN
selector	NN	O => selector	NN
expression	NN	O => expression	NN
denotes	VBZ	O => denot	VB
field	NN	O => field	NN
method	NN	O => method	NN
value	NN	O => value	NN
sometimes	RB	O => sometimes	RB
see	VB	O => see	VB
identifier	NN	O => identifier	NN
called	VBD	O => call	VB
field	NN	O => field	NN
method	NN	O => method	NN
selector	NN	O => selector	NN
blank	JJ	O => blank	JJ
identifier	NN	O => identifier	NN
type	NN	O => type	NN
selector	NN	O => selector	NN
expression	NN	O => expression	NN
type	NN	O => type	NN
package	NN	O => package	NN
see	VB	O => see	VB
section	NN	O => section	NN
qualified	JJ	O => qualified	JJ
identifiers	NNS	O => identifier	NN
selector	NN	O => selector	NN
denote	VBP	O => denot	VB
field	NN	O => field	NN
method	NN	O => method	NN
type	NN	O => type	NN
refer	VB	O => refer	VB
field	NN	O => field	NN
method	NN	O => method	NN
nested	JJ	O => nested	JJ
embedded	JJ	O => embedded	JJ
field	NN	O => field	NN
number	NN	O => number	NN
embedded	JJ	O => embedded	JJ
fields	NNS	O => field	NN
traversed	VBD	O => travers	VB
reach	VB	O => reach	VB
called	VBD	O => call	VB
depth	NN	O => depth	NN
depth	NN	O => depth	NN
field	NN	O => field	NN
method	NN	O => method	NN
declared	VBN	O => declar	VB
depth	NN	O => depth	NN
field	NN	O => field	NN
method	NN	O => method	NN
declared	VBN	O => declar	VB
embedded	JJ	O => embedded	JJ
field	NN	O => field	NN
depth	NN	O => depth	NN
following	VBG	O => follow	VB
rules	NNS	O => rule	NN
apply	VBP	O => appli	VB
selectors	NNS	O => selector	NN
value	NN	O => value	NN
type	NN	O => type	NN
pointer	NN	O => pointer	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
denotes	VBZ	O => denot	VB
field	NN	O => field	NN
method	NN	O => method	NN
shallowest	NN	O => shallowest	NN
depth	NN	O => depth	NN
there	EX	O => there	EX
such	JJ	O => such	JJ
there	EX	O => there	EX
exactly	RB	O => exactly	RB
shallowest	NN	O => shallowest	NN
depth	NN	O => depth	NN
selector	NN	O => selector	NN
expression	NN	O => expression	NN
illegal	JJ	O => illegal	JJ
value	NN	O => value	NN
type	NN	O => type	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
denotes	VBZ	O => denot	VB
actual	JJ	O => actual	JJ
method	NN	O => method	NN
dynamic	JJ	O => dynamic	JJ
value	NN	O => value	NN
there	EX	O => there	EX
method	NN	O => method	NN
method	NN	O => method	NN
set	NN	O => set	NN
selector	NN	O => selector	NN
expression	NN	O => expression	NN
illegal	JJ	O => illegal	JJ
exception	NN	O => exception	NN
type	NN	O => type	NN
defined	VBN	O => defin	VB
pointer	NN	O => pointer	NN
type	NN	O => type	NN
valid	JJ	O => valid	JJ
selector	NN	O => selector	NN
expression	NN	O => expression	NN
denoting	VBG	O => denot	VB
field	NN	O => field	NN
method	NN	O => method	NN
shorthand	NN	O => shorthand	NN
all	PDT	O => all	PDT
other	JJ	O => other	JJ
cases	NNS	O => case	NN
illegal	JJ	O => illegal	JJ
pointer	NN	O => pointer	NN
type	NN	O => type	NN
value	NN	O => value	NN
denotes	VBZ	O => denot	VB
struct	NN	O => struct	NN
field	NN	O => field	NN
assigning	VBG	O => assign	VB
evaluating	VBG	O => evalu	VB
causes	VBZ	O => caus	VB
run-time	JJ	O => run-time	JJ
panic	NN	O => panic	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
value	NN	O => value	NN
calling	VBG	O => call	VB
evaluating	VBG	O => evalu	VB
method	NN	O => method	NN
causes	VBZ	O => caus	VB
run-time	JJ	O => run-time	JJ
panic	NN	O => panic	NN
example	NN	O => example	NN
given	VBN	O => given	VB
declarations	NNS	O => declaration	NN
write	VB	O => write	VB
following	VBG	O => follow	VB
invalid	JJ	O => invalid	JJ
Method	NNP	B-GPE => Method	NNP
expressions	NNS	O => expression	NN
method	NN	O => method	NN
set	NN	O => set	NN
type	NN	O => type	NN
function	NN	O => function	NN
callable	JJ	O => callable	JJ
regular	JJ	O => regular	JJ
function	NN	O => function	NN
arguments	NNS	O => argument	NN
prefixed	VBN	O => prefix	VB
additional	JJ	O => additional	JJ
argument	NN	O => argument	NN
receiver	NN	O => receiver	NN
method	NN	O => method	NN
Consider	VB	O => Consider	VB
struct	NN	O => struct	NN
type	NN	O => type	NN
methods	NNS	O => method	NN
receiver	NN	O => receiver	NN
type	NN	O => type	NN
receiver	NN	O => receiver	NN
type	NN	O => type	NN
expression	NN	O => expression	NN
yields	NNS	O => yield	NN
function	NN	O => function	NN
equivalent	NN	O => equivalent	NN
explicit	JJ	O => explicit	JJ
receiver	NN	O => receiver	NN
argument	NN	O => argument	NN
signature	NN	O => signature	NN
function	NN	O => function	NN
called	VBD	O => call	VB
normally	RB	O => normally	RB
explicit	JJ	O => explicit	JJ
receiver	NN	O => receiver	NN
so	RB	O => so	RB
invocations	NNS	O => invocation	NN
equivalent	JJ	O => equivalent	JJ
Similarly	RB	O => Similarly	RB
expression	NN	O => expression	NN
yields	NNS	O => yield	NN
function	NN	O => function	NN
value	NN	O => value	NN
representing	VBG	O => repres	VB
signature	NN	O => signature	NN
method	NN	O => method	NN
value	NN	O => value	NN
receiver	NN	O => receiver	NN
derive	VB	O => derive	VB
function	NN	O => function	NN
explicit	JJ	O => explicit	JJ
pointer	NN	O => pointer	NN
receiver	NN	O => receiver	NN
so	RB	O => so	RB
yields	NNS	O => yield	NN
function	NN	O => function	NN
value	NN	O => value	NN
representing	VBG	O => repres	VB
signature	NN	O => signature	NN
Such	JJ	O => Such	JJ
function	NN	O => function	NN
indirects	VBZ	O => indirect	VB
receiver	NN	O => receiver	NN
create	VB	O => create	VB
value	NN	O => value	NN
pass	VB	O => pass	VB
receiver	NN	O => receiver	NN
underlying	VBG	O => under	VB
method	NN	O => method	NN
method	NN	O => method	NN
does	VBZ	O => doe	VB
overwrite	VB	O => overwrite	VB
value	NN	O => value	NN
address	NN	O => address	NN
passed	VBD	O => pass	VB
function	NN	O => function	NN
call	NN	O => call	NN
final	JJ	O => final	JJ
case	NN	O => case	NN
value-receiver	JJ	O => value-receiver	JJ
function	NN	O => function	NN
pointer-receiver	JJ	O => pointer-receiver	JJ
method	NN	O => method	NN
illegal	JJ	O => illegal	JJ
pointer-receiver	JJ	O => pointer-receiver	JJ
methods	NNS	O => method	NN
method	NN	O => method	NN
set	NN	O => set	NN
value	NN	O => value	NN
type	NN	O => type	NN
Function	NNP	O => Function	NNP
values	NNS	O => value	NN
derived	VBN	O => deriv	VB
methods	NNS	O => method	NN
called	VBD	O => call	VB
function	NN	O => function	NN
call	NN	O => call	NN
syntax	NN	O => syntax	NN
receiver	NN	O => receiver	NN
provided	VBN	O => provid	VB
argument	NN	O => argument	NN
call	NN	O => call	NN
given	VBN	O => given	VB
invoked	VBN	O => invok	VB
construct	NN	O => construct	NN
function	NN	O => function	NN
binds	VBZ	O => bind	VB
receiver	NN	O => receiver	NN
function	NN	O => function	NN
literal	NN	O => literal	NN
method	NN	O => method	NN
value	NN	O => value	NN
legal	JJ	O => legal	JJ
derive	VB	O => derive	VB
function	NN	O => function	NN
value	NN	O => value	NN
method	NN	O => method	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
resulting	VBG	O => result	VB
function	NN	O => function	NN
takes	VBZ	O => take	VB
explicit	JJ	O => explicit	JJ
receiver	NN	O => receiver	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
Method	NNP	B-GPE => Method	NNP
values	NNS	O => value	NN
expression	NN	O => expression	NN
static	JJ	O => static	JJ
type	NN	O => type	NN
method	NN	O => method	NN
set	NN	O => set	NN
type	NN	O => type	NN
called	VBD	O => call	VB
method	NN	O => method	NN
value	NN	O => value	NN
method	NN	O => method	NN
value	NN	O => value	NN
function	NN	O => function	NN
value	NN	O => value	NN
callable	JJ	O => callable	JJ
arguments	NNS	O => argument	NN
method	NN	O => method	NN
call	NN	O => call	NN
expression	NN	O => expression	NN
evaluated	VBN	O => evalu	VB
saved	VBD	O => save	VB
evaluation	NN	O => evaluation	NN
method	NN	O => method	NN
value	NN	O => value	NN
saved	VBD	O => save	VB
copy	NN	O => copy	NN
then	RB	O => then	RB
used	VBN	O => use	VB
receiver	NN	O => receiver	NN
calls	NNS	O => call	NN
executed	VBN	O => execut	VB
later	RB	O => later	RB
type	NN	O => type	NN
interface	NN	O => interface	NN
non-interface	JJ	O => non-interface	JJ
type	NN	O => type	NN
discussion	NN	O => discussion	NN
method	NN	O => method	NN
expressions	NNS	O => expression	NN
consider	VB	O => consider	VB
struct	NN	O => struct	NN
type	NN	O => type	NN
methods	NNS	O => method	NN
receiver	NN	O => receiver	NN
type	NN	O => type	NN
receiver	NN	O => receiver	NN
type	NN	O => type	NN
expression	NN	O => expression	NN
yields	NNS	O => yield	NN
function	NN	O => function	NN
value	NN	O => value	NN
type	NN	O => type	NN
invocations	NNS	O => invocation	NN
equivalent	JJ	O => equivalent	JJ
Similarly	RB	O => Similarly	RB
expression	NN	O => expression	NN
yields	NNS	O => yield	NN
function	NN	O => function	NN
value	NN	O => value	NN
type	NN	O => type	NN
selectors	NNS	O => selector	NN
reference	NN	O => reference	NN
non-interface	JJ	O => non-interface	JJ
method	NN	O => method	NN
value	NN	O => value	NN
receiver	NN	O => receiver	NN
using	VBG	O => use	VB
pointer	NN	O => pointer	NN
automatically	RB	O => automatically	RB
dereference	VB	O => dereference	VB
pointer	NN	O => pointer	NN
equivalent	NN	O => equivalent	NN
method	NN	O => method	NN
calls	NNS	O => call	NN
reference	NN	O => reference	NN
non-interface	JJ	O => non-interface	JJ
method	NN	O => method	NN
pointer	NN	O => pointer	NN
receiver	NN	O => receiver	NN
using	VBG	O => use	VB
addressable	JJ	O => addressable	JJ
value	NN	O => value	NN
automatically	RB	O => automatically	RB
take	VB	O => take	VB
address	NN	O => address	NN
value	NN	O => value	NN
equivalent	NN	O => equivalent	NN
examples	NNS	O => example	NN
non-interface	JJ	O => non-interface	JJ
types	NNS	O => type	NN
also	RB	O => also	RB
legal	JJ	O => legal	JJ
create	VB	O => create	VB
method	NN	O => method	NN
value	NN	O => value	NN
value	NN	O => value	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
Index	NNP	B-GPE => Index	NNP
expressions	NNS	O => expression	NN
primary	JJ	O => primary	JJ
expression	NN	O => expression	NN
form	NN	O => form	NN
denotes	VBZ	O => denot	VB
element	NN	O => element	NN
array	VB	O => array	VB
pointer	NN	O => pointer	NN
array	VB	O => array	VB
slice	NN	O => slice	NN
string	VBG	O => string	VB
map	NN	O => map	NN
indexed	VBN	O => index	VB
value	NN	O => value	NN
called	VBD	O => call	VB
index	NN	O => index	NN
map	NN	O => map	NN
key	NN	O => key	NN
respectively	RB	O => respectively	RB
following	VBG	O => follow	VB
rules	NNS	O => rule	NN
apply	VBP	O => appli	VB
map	NN	O => map	NN
index	NN	O => index	NN
integer	JJ	O => integer	JJ
type	NN	O => type	NN
untyped	JJ	O => untyped	JJ
constant	JJ	O => constant	JJ
constant	JJ	O => constant	JJ
index	NN	O => index	NN
non-negative	JJ	O => non-negative	JJ
representable	JJ	O => representable	JJ
value	NN	O => value	NN
type	NN	O => type	NN
constant	JJ	O => constant	JJ
index	NN	O => index	NN
untyped	JJ	O => untyped	JJ
given	VBN	O => given	VB
type	NN	O => type	NN
index	NN	O => index	NN
range	NN	O => range	NN
otherwise	RB	O => otherwise	RB
range	NN	O => range	NN
array	NN	O => array	NN
type	NN	O => type	NN
constant	JJ	O => constant	JJ
index	NN	O => index	NN
range	NN	O => range	NN
range	NN	O => range	NN
run	VB	O => run	VB
time	NN	O => time	NN
run-time	JJ	O => run-time	JJ
panic	JJ	O => panic	JJ
occurs	NN	O => occurs	NN
array	NN	O => array	NN
element	NN	O => element	NN
index	NN	O => index	NN
type	NN	O => type	NN
element	NN	O => element	NN
type	NN	O => type	NN
pointer	NN	O => pointer	NN
array	NN	O => array	NN
type	NN	O => type	NN
shorthand	NN	O => shorthand	NN
slice	NN	O => slice	NN
type	NN	O => type	NN
range	NN	O => range	NN
run	VB	O => run	VB
time	NN	O => time	NN
run-time	JJ	O => run-time	JJ
panic	JJ	O => panic	JJ
occurs	NN	O => occurs	NN
slice	NN	O => slice	NN
element	NN	O => element	NN
index	NN	O => index	NN
type	NN	O => type	NN
element	NN	O => element	NN
type	NN	O => type	NN
string	VBG	O => string	VB
type	NN	O => type	NN
constant	JJ	O => constant	JJ
index	NN	O => index	NN
range	NN	O => range	NN
string	VBG	O => string	VB
also	RB	O => also	RB
constant	JJ	O => constant	JJ
range	NN	O => range	NN
run	VB	O => run	VB
time	NN	O => time	NN
run-time	JJ	O => run-time	JJ
panic	JJ	O => panic	JJ
occurs	NN	O => occurs	NN
non-constant	JJ	O => non-constant	JJ
byte	NN	O => byte	NN
value	NN	O => value	NN
index	NN	O => index	NN
type	NN	O => type	NN
assigned	VBN	O => assign	VB
map	NN	O => map	NN
type	NN	O => type	NN
type	NN	O => type	NN
assignable	JJ	O => assignable	JJ
key	JJ	O => key	JJ
type	NN	O => type	NN
map	NN	O => map	NN
contains	VBZ	O => contain	VB
entry	NN	O => entry	NN
key	JJ	O => key	JJ
map	NN	O => map	NN
element	NN	O => element	NN
key	JJ	O => key	JJ
type	NN	O => type	NN
element	NN	O => element	NN
type	NN	O => type	NN
map	NN	O => map	NN
does	VBZ	O => doe	VB
contain	VB	O => contain	VB
such	JJ	O => such	JJ
entry	NN	O => entry	NN
value	NN	O => value	NN
element	NN	O => element	NN
type	NN	O => type	NN
Otherwise	VB	O => Otherwise	VB
illegal	JJ	O => illegal	JJ
index	NN	O => index	NN
expression	NN	O => expression	NN
map	NN	O => map	NN
type	NN	O => type	NN
used	VBN	O => use	VB
assignment	NN	O => assignment	NN
initialization	NN	O => initialization	NN
special	JJ	O => special	JJ
form	NN	O => form	NN
yields	NNS	O => yield	NN
additional	JJ	O => additional	JJ
untyped	JJ	O => untyped	JJ
boolean	JJ	O => boolean	JJ
value	NN	O => value	NN
value	NN	O => value	NN
key	JJ	O => key	JJ
present	VB	O => present	VB
map	NN	O => map	NN
otherwise	RB	O => otherwise	RB
Assigning	VBG	O => assign	VB
element	NN	O => element	NN
map	NN	O => map	NN
causes	VBZ	O => caus	VB
run-time	JJ	O => run-time	JJ
panic	NN	O => panic	NN
Slice	NNP	O => Slice	NNP
expressions	NNS	O => expression	NN
Slice	NNP	O => Slice	NNP
expressions	NNS	O => expression	NN
construct	NN	O => construct	NN
substring	NN	O => substring	NN
slice	NN	O => slice	NN
string	NN	O => string	NN
array	VB	O => array	VB
pointer	NN	O => pointer	NN
array	VB	O => array	VB
slice	NN	O => slice	NN
There	EX	O => There	EX
variants	NNS	O => variant	NN
simple	NN	O => simple	NN
form	NN	O => form	NN
specifies	VBZ	O => specifi	VB
low	JJ	O => low	JJ
high	JJ	O => high	JJ
bound	NN	O => bound	NN
full	JJ	O => full	JJ
form	NN	O => form	NN
also	RB	O => also	RB
specifies	VBZ	O => specifi	VB
bound	VBN	O => bound	VB
capacity	NN	O => capacity	NN
Simple	JJ	O => Simple	JJ
slice	NN	O => slice	NN
expressions	NNS	O => expression	NN
string	NN	O => string	NN
array	VB	O => array	VB
pointer	NN	O => pointer	NN
array	VB	O => array	VB
slice	NN	O => slice	NN
primary	JJ	O => primary	JJ
expression	NN	O => expression	NN
constructs	VBZ	O => construct	VB
substring	NN	O => substring	NN
slice	NN	O => slice	NN
indices	NNS	O => index	NN
select	NN	O => select	NN
elements	NNS	O => element	NN
operand	NN	O => operand	NN
appear	VBP	O => appear	VB
result	NN	O => result	NN
result	NN	O => result	NN
indices	NNS	O => index	NN
starting	VBG	O => start	VB
length	NN	O => length	NN
equal	VB	O => equal	VB
slicing	VBG	O => slice	VB
array	NN	O => array	NN
slice	NN	O => slice	NN
type	NN	O => type	NN
length	NN	O => length	NN
capacity	NN	O => capacity	NN
elements	NNS	O => element	NN
convenience	NN	O => convenience	NN
indices	NNS	O => index	NN
omitted	VBN	O => omit	VB
missing	JJ	O => missing	JJ
index	NN	O => index	NN
defaults	VBZ	O => default	VB
missing	JJ	O => missing	JJ
index	NN	O => index	NN
defaults	VBZ	O => default	VB
length	NN	O => length	NN
sliced	JJ	O => sliced	JJ
operand	NN	O => operand	NN
pointer	NN	O => pointer	NN
array	VB	O => array	VB
shorthand	NN	O => shorthand	NN
arrays	NNS	O => array	NN
strings	NNS	O => string	NN
indices	NNS	O => index	NN
range	NN	O => range	NN
otherwise	RB	O => otherwise	RB
range	NN	O => range	NN
slices	NNS	O => slice	NN
upper	JJ	O => upper	JJ
index	NN	O => index	NN
bound	VBN	O => bound	VB
slice	NN	O => slice	NN
capacity	NN	O => capacity	NN
rather	RB	O => rather	RB
length	NN	O => length	NN
constant	JJ	O => constant	JJ
index	NN	O => index	NN
non-negative	JJ	O => non-negative	JJ
representable	JJ	O => representable	JJ
value	NN	O => value	NN
type	NN	O => type	NN
arrays	NNS	O => array	NN
constant	JJ	O => constant	JJ
strings	NNS	O => string	NN
constant	JJ	O => constant	JJ
indices	NNS	O => index	NN
also	RB	O => also	RB
range	NN	O => range	NN
indices	NNS	O => index	NN
constant	NN	O => constant	NN
satisfy	VBP	O => satisfi	VB
indices	NNS	O => index	NN
range	NN	O => range	NN
run	VB	O => run	VB
time	NN	O => time	NN
run-time	JJ	O => run-time	JJ
panic	JJ	O => panic	JJ
occurs	NNS	O => occur	NN
untyped	JJ	O => untyped	JJ
strings	NNS	O => string	NN
sliced	JJ	O => sliced	JJ
operand	NN	O => operand	NN
string	VBG	O => string	VB
slice	NN	O => slice	NN
result	NN	O => result	NN
slice	NN	O => slice	NN
operation	NN	O => operation	NN
non-constant	JJ	O => non-constant	JJ
value	NN	O => value	NN
type	NN	O => type	NN
operand	NN	O => operand	NN
untyped	JJ	O => untyped	JJ
string	VBG	O => string	VB
operands	NNS	O => operand	NN
result	NN	O => result	NN
non-constant	JJ	O => non-constant	JJ
value	NN	O => value	NN
type	NN	O => type	NN
sliced	JJ	O => sliced	JJ
operand	NN	O => operand	NN
array	VB	O => array	VB
addressable	JJ	O => addressable	JJ
result	NN	O => result	NN
slice	NN	O => slice	NN
operation	NN	O => operation	NN
slice	NN	O => slice	NN
element	NN	O => element	NN
type	NN	O => type	NN
array	NN	O => array	NN
sliced	JJ	O => sliced	JJ
operand	NN	O => operand	NN
valid	JJ	O => valid	JJ
slice	NN	O => slice	NN
expression	NN	O => expression	NN
slice	NN	O => slice	NN
result	NN	O => result	NN
slice	NN	O => slice	NN
Otherwise	RB	O => Otherwise	RB
result	NN	O => result	NN
slice	NN	O => slice	NN
shares	NNS	O => share	NN
underlying	VBG	O => under	VB
array	NN	O => array	NN
operand	NN	O => operand	NN
Full	NNP	O => Full	NNP
slice	NN	O => slice	NN
expressions	NNS	O => expression	NN
array	VB	O => array	VB
pointer	NN	O => pointer	NN
array	VB	O => array	VB
slice	NN	O => slice	NN
string	NN	O => string	NN
primary	JJ	O => primary	JJ
expression	NN	O => expression	NN
constructs	VBZ	O => construct	VB
slice	NN	O => slice	NN
type	NN	O => type	NN
length	NN	O => length	NN
elements	NNS	O => element	NN
simple	NN	O => simple	NN
slice	NN	O => slice	NN
expression	NN	O => expression	NN
Additionally	RB	O => Additionally	RB
controls	VBZ	O => control	VB
resulting	VBG	O => result	VB
slice	NN	O => slice	NN
capacity	NN	O => capacity	NN
setting	VBG	O => set	VB
Only	RB	O => Only	RB
index	NN	O => index	NN
omitted	VBN	O => omit	VB
defaults	VBZ	O => default	VB
slicing	VBG	O => slice	VB
array	NN	O => array	NN
slice	NN	O => slice	NN
type	NN	O => type	NN
length	NN	O => length	NN
capacity	NN	O => capacity	NN
elements	NNS	O => element	NN
simple	NN	O => simple	NN
slice	NN	O => slice	NN
expressions	NNS	O => expression	NN
pointer	NN	O => pointer	NN
array	VB	O => array	VB
shorthand	NN	O => shorthand	NN
sliced	JJ	O => sliced	JJ
operand	NN	O => operand	NN
array	VB	O => array	VB
addressable	JJ	O => addressable	JJ
indices	NNS	O => index	NN
range	NN	O => range	NN
otherwise	RB	O => otherwise	RB
range	NN	O => range	NN
constant	JJ	O => constant	JJ
index	NN	O => index	NN
non-negative	JJ	O => non-negative	JJ
representable	JJ	O => representable	JJ
value	NN	O => value	NN
type	NN	O => type	NN
arrays	NNS	O => array	NN
constant	JJ	O => constant	JJ
indices	NNS	O => index	NN
also	RB	O => also	RB
range	NN	O => range	NN
multiple	NN	O => multiple	NN
indices	NNS	O => index	NN
constant	NN	O => constant	NN
constants	NNS	O => constant	NN
present	VB	O => present	VB
range	NN	O => range	NN
relative	VBP	O => relat	VB
other	JJ	O => other	JJ
indices	NNS	O => index	NN
range	NN	O => range	NN
run	VB	O => run	VB
time	NN	O => time	NN
run-time	JJ	O => run-time	JJ
panic	JJ	O => panic	JJ
occurs	NNS	O => occur	NN
Type	NNP	B-PERSON => Type	NNP
assertions	NNS	O => assertion	NN
expression	NN	O => expression	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
type	NN	O => type	NN
primary	JJ	O => primary	JJ
expression	NN	O => expression	NN
asserts	VBZ	O => assert	VB
value	NN	O => value	NN
stored	VBN	O => store	VB
type	NN	O => type	NN
notation	NN	O => notation	NN
called	VBD	O => call	VB
type	NN	O => type	NN
assertion	NN	O => assertion	NN
More	RBR	O => More	RBR
precisely	RB	O => precisely	RB
interface	NN	O => interface	NN
type	NN	O => type	NN
asserts	VBZ	O => assert	VB
dynamic	JJ	O => dynamic	JJ
type	NN	O => type	NN
identical	JJ	O => identical	JJ
type	NN	O => type	NN
case	NN	O => case	NN
implement	VB	O => implement	VB
interface	NN	O => interface	NN
type	NN	O => type	NN
otherwise	RB	O => otherwise	RB
type	NN	O => type	NN
assertion	NN	O => assertion	NN
invalid	JJ	O => invalid	JJ
possible	JJ	O => possible	JJ
store	VB	O => store	VB
value	NN	O => value	NN
type	NN	O => type	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
asserts	VBZ	O => assert	VB
dynamic	JJ	O => dynamic	JJ
type	NN	O => type	NN
implements	VBZ	O => implement	VB
interface	NN	O => interface	NN
type	NN	O => type	NN
assertion	NN	O => assertion	NN
holds	VBZ	O => hold	VB
value	NN	O => value	NN
expression	NN	O => expression	NN
value	NN	O => value	NN
stored	VBN	O => store	VB
type	NN	O => type	NN
type	NN	O => type	NN
assertion	NN	O => assertion	NN
false	JJ	O => false	JJ
run-time	JJ	O => run-time	JJ
panic	JJ	O => panic	JJ
occurs	NNS	O => occur	NN
other	JJ	O => other	JJ
words	NNS	O => word	NN
even	RB	O => even	RB
dynamic	JJ	O => dynamic	JJ
type	NN	O => type	NN
known	VBN	O => known	VB
run	VB	O => run	VB
time	NN	O => time	NN
type	NN	O => type	NN
known	VBN	O => known	VB
correct	JJ	O => correct	JJ
program	NN	O => program	NN
type	NN	O => type	NN
assertion	NN	O => assertion	NN
used	VBN	O => use	VB
assignment	NN	O => assignment	NN
initialization	NN	O => initialization	NN
special	JJ	O => special	JJ
form	NN	O => form	NN
yields	NNS	O => yield	NN
additional	JJ	O => additional	JJ
untyped	JJ	O => untyped	JJ
boolean	JJ	O => boolean	JJ
value	NN	O => value	NN
value	NN	O => value	NN
assertion	NN	O => assertion	NN
holds	VBZ	O => hold	VB
Otherwise	VB	O => Otherwise	VB
value	NN	O => value	NN
value	NN	O => value	NN
type	NN	O => type	NN
run-time	JJ	O => run-time	JJ
panic	JJ	O => panic	JJ
occurs	NN	O => occurs	NN
case	NN	O => case	NN
Calls	VBZ	O => call	VB
Given	VBN	O => given	VB
expression	NN	O => expression	NN
function	NN	O => function	NN
type	NN	O => type	NN
calls	VBZ	O => call	VB
arguments	NNS	O => argument	NN
special	JJ	O => special	JJ
case	NN	O => case	NN
arguments	NNS	O => argument	NN
single-valued	JJ	O => single-valued	JJ
expressions	NNS	O => expression	NN
assignable	JJ	O => assignable	JJ
parameter	NN	O => parameter	NN
types	NNS	O => type	NN
evaluated	VBN	O => evalu	VB
function	NN	O => function	NN
called	VBN	O => call	VB
type	NN	O => type	NN
expression	NN	O => expression	NN
result	NN	O => result	NN
type	NN	O => type	NN
method	NN	O => method	NN
invocation	NN	O => invocation	NN
similar	JJ	O => similar	JJ
method	NN	O => method	NN
specified	VBN	O => specifi	VB
selector	NN	O => selector	NN
value	NN	O => value	NN
receiver	NN	O => receiver	NN
type	NN	O => type	NN
method	NN	O => method	NN
function	NN	O => function	NN
call	NN	O => call	NN
function	NN	O => function	NN
value	NN	O => value	NN
arguments	NNS	O => argument	NN
evaluated	VBN	O => evalu	VB
usual	JJ	O => usual	JJ
order	NN	O => order	NN
evaluated	VBN	O => evalu	VB
parameters	NNS	O => parameter	NN
call	NN	O => call	NN
passed	VBD	O => pass	VB
value	NN	O => value	NN
function	NN	O => function	NN
called	VBD	O => call	VB
function	NN	O => function	NN
begins	VBZ	O => begin	VB
execution	NN	O => execution	NN
return	VB	O => return	VB
parameters	NNS	O => parameter	NN
function	NN	O => function	NN
passed	VBD	O => pass	VB
value	NN	O => value	NN
back	RB	O => back	RB
calling	VBG	O => call	VB
function	NN	O => function	NN
function	NN	O => function	NN
returns	NNS	O => return	NN
Calling	VBG	O => call	VB
function	NN	O => function	NN
value	NN	O => value	NN
causes	VBZ	O => caus	VB
run-time	JJ	O => run-time	JJ
panic	NN	O => panic	NN
special	JJ	O => special	JJ
case	NN	O => case	NN
return	VB	O => return	VB
values	NNS	O => value	NN
function	NN	O => function	NN
method	NN	O => method	NN
equal	VB	O => equal	VB
number	NN	O => number	NN
individually	RB	O => individually	RB
assignable	JJ	O => assignable	JJ
parameters	NNS	O => parameter	NN
function	NN	O => function	NN
method	NN	O => method	NN
then	RB	O => then	RB
call	NN	O => call	NN
invoke	VB	O => invoke	VB
binding	VBG	O => bind	VB
return	VB	O => return	VB
values	NNS	O => value	NN
parameters	NNS	O => parameter	NN
order	NN	O => order	NN
call	NN	O => call	NN
contain	VB	O => contain	VB
parameters	NNS	O => parameter	NN
other	JJ	O => other	JJ
call	NN	O => call	NN
have	VB	O => have	VB
least	JJS	O => least	JJS
return	VB	O => return	VB
value	NN	O => value	NN
final	JJ	O => final	JJ
parameter	NN	O => parameter	NN
assigned	VBN	O => assign	VB
return	VB	O => return	VB
values	NNS	O => value	NN
remain	VBP	O => remain	VB
assignment	NN	O => assignment	NN
regular	JJ	O => regular	JJ
parameters	NNS	O => parameter	NN
method	NN	O => method	NN
call	NN	O => call	NN
valid	JJ	O => valid	JJ
method	NN	O => method	NN
set	NN	O => set	NN
type	NN	O => type	NN
contains	VBZ	O => contain	VB
argument	NN	O => argument	NN
list	NN	O => list	NN
assigned	VBN	O => assign	VB
parameter	NN	O => parameter	NN
list	NN	O => list	NN
addressable	JJ	O => addressable	JJ
method	NN	O => method	NN
set	NN	O => set	NN
contains	VBZ	O => contain	VB
shorthand	NN	O => shorthand	NN
There	EX	O => There	EX
distinct	JJ	O => distinct	JJ
method	NN	O => method	NN
type	NN	O => type	NN
there	EX	O => there	EX
method	NN	O => method	NN
literals	NNS	O => literal	NN
Passing	VBG	O => pass	VB
arguments	NNS	O => argument	NN
parameters	NNS	O => parameter	NN
variadic	JJ	O => variadic	JJ
final	JJ	O => final	JJ
parameter	NN	O => parameter	NN
type	NN	O => type	NN
then	RB	O => then	RB
type	NN	O => type	NN
equivalent	NN	O => equivalent	NN
type	NN	O => type	NN
invoked	VBN	O => invok	VB
actual	JJ	O => actual	JJ
arguments	NNS	O => argument	NN
value	NN	O => value	NN
passed	VBD	O => pass	VB
Otherwise	RB	O => Otherwise	RB
value	NN	O => value	NN
passed	VBD	O => pass	VB
new	JJ	O => new	JJ
slice	NN	O => slice	NN
type	NN	O => type	NN
new	JJ	O => new	JJ
underlying	VBG	O => under	VB
array	NN	O => array	NN
successive	JJ	O => successive	JJ
elements	NNS	O => element	NN
actual	JJ	O => actual	JJ
arguments	NNS	O => argument	NN
all	PDT	O => all	PDT
assignable	JJ	O => assignable	JJ
length	NN	O => length	NN
capacity	NN	O => capacity	NN
slice	NN	O => slice	NN
therefore	RB	O => therefore	RB
number	NN	O => number	NN
arguments	NNS	O => argument	NN
bound	VBN	O => bound	VB
differ	VB	O => differ	VB
call	NN	O => call	NN
site	NN	O => site	NN
Given	VBN	O => given	VB
function	NN	O => function	NN
calls	VBZ	O => call	VB
have	VB	O => have	VB
value	NN	O => value	NN
call	NN	O => call	NN
second	JJ	O => second	JJ
final	JJ	O => final	JJ
argument	NN	O => argument	NN
assignable	JJ	O => assignable	JJ
slice	NN	O => slice	NN
type	NN	O => type	NN
passed	VBD	O => pass	VB
unchanged	JJ	O => unchanged	JJ
value	NN	O => value	NN
parameter	NN	O => parameter	NN
argument	NN	O => argument	NN
followed	VBN	O => follow	VB
case	NN	O => case	NN
new	JJ	O => new	JJ
slice	NN	O => slice	NN
created	VBN	O => creat	VB
Given	VBN	O => given	VB
slice	NN	O => slice	NN
call	NN	O => call	NN
have	VB	O => have	VB
value	NN	O => value	NN
underlying	VBG	O => under	VB
array	NN	O => array	NN
Operators	NNPS	O => Operator	NN
Operators	NNPS	O => Operator	NN
combine	VB	O => combine	VB
operands	NNS	O => operand	NN
expressions	NNS	O => expression	NN
Comparisons	NNS	O => Comparison	NN
discussed	VBN	O => discuss	VB
elsewhere	RB	O => elsewhere	RB
other	JJ	O => other	JJ
binary	JJ	O => binary	JJ
operators	NNS	O => operator	NN
operand	NN	O => operand	NN
types	NNS	O => type	NN
identical	JJ	O => identical	JJ
operation	NN	O => operation	NN
involves	VBZ	O => involv	VB
shifts	NNS	O => shift	NN
untyped	JJ	O => untyped	JJ
constants	NNS	O => constant	NN
operations	NNS	O => operation	NN
involving	VBG	O => involv	VB
constants	NNS	O => constant	NN
see	VB	O => see	VB
section	NN	O => section	NN
constant	JJ	O => constant	JJ
expressions	NNS	O => expression	NN
shift	NN	O => shift	NN
operations	NNS	O => operation	NN
operand	NN	O => operand	NN
untyped	JJ	O => untyped	JJ
constant	JJ	O => constant	JJ
other	JJ	O => other	JJ
operand	NN	O => operand	NN
constant	JJ	O => constant	JJ
implicitly	RB	O => implicitly	RB
converted	VBN	O => convert	VB
type	NN	O => type	NN
other	JJ	O => other	JJ
operand	NN	O => operand	NN
right	NN	O => right	NN
operand	NN	O => operand	NN
shift	NN	O => shift	NN
expression	NN	O => expression	NN
have	VB	O => have	VB
integer	JJ	O => integer	JJ
type	NN	O => type	NN
untyped	JJ	O => untyped	JJ
constant	JJ	O => constant	JJ
representable	JJ	O => representable	JJ
value	NN	O => value	NN
type	NN	O => type	NN
left	NN	O => left	NN
operand	NN	O => operand	NN
non-constant	JJ	O => non-constant	JJ
shift	NN	O => shift	NN
expression	NN	O => expression	NN
untyped	JJ	O => untyped	JJ
constant	NN	O => constant	NN
implicitly	RB	O => implicitly	RB
converted	VBN	O => convert	VB
type	NN	O => type	NN
assume	VB	O => assume	VB
shift	NN	O => shift	NN
expression	NN	O => expression	NN
were	VBD	O => were	VB
replaced	VBN	O => replac	VB
left	NN	O => left	NN
operand	NN	O => operand	NN
alone	RB	O => alone	RB
Operator	NNP	O => Operator	NNP
precedence	NN	O => precedence	NN
Unary	NNP	O => Unary	NNP
operators	NNS	O => operator	NN
have	VB	O => have	VB
highest	JJS	O => high	JJ
precedence	NN	O => precedence	NN
operators	NNS	O => operator	NN
form	NN	O => form	NN
statements	NNS	O => statement	NN
expressions	NNS	O => expression	NN
fall	VBP	O => fall	VB
operator	NN	O => operator	NN
hierarchy	NN	O => hierarchy	NN
consequence	NN	O => consequence	NN
statement	NN	O => statement	NN
There	EX	O => There	EX
precedence	NN	O => precedence	NN
levels	NNS	O => level	NN
binary	JJ	O => binary	JJ
operators	NNS	O => operator	NN
Multiplication	NN	O => Multiplication	NN
operators	NNS	O => operator	NN
bind	VBP	O => bind	VB
strongest	JJS	O => strong	JJ
followed	VBN	O => follow	VB
addition	NN	O => addition	NN
operators	NNS	O => operator	NN
comparison	NN	O => comparison	NN
operators	NNS	O => operator	NN
logical	JJ	O => logical	JJ
AND	NNP	B-GPE => AND	NNP
finally	RB	O => finally	RB
logical	JJ	O => logical	JJ
OR	NNP	O => OR	NNP
Binary	JJ	O => Binary	JJ
operators	NNS	O => operator	NN
precedence	NN	O => precedence	NN
associate	NN	O => associate	NN
left	NN	O => left	NN
right	VB	O => right	VB
instance	NN	O => instance	NN
Arithmetic	JJ	B-GPE => Arithmetic	JJ
operators	NNS	O => operator	NN
Arithmetic	JJ	B-GPE => Arithmetic	JJ
operators	NNS	O => operator	NN
apply	VBP	O => appli	VB
numeric	JJ	O => numeric	JJ
values	NNS	O => value	NN
yield	VB	O => yield	VB
result	NN	O => result	NN
type	NN	O => type	NN
operand	NN	O => operand	NN
standard	VBN	O => standard	VB
arithmetic	NN	O => arithmetic	NN
operators	NNS	O => operator	NN
apply	VBP	O => appli	VB
integer	NN	O => integer	NN
floating-point	JJ	O => floating-point	JJ
complex	JJ	O => complex	JJ
types	NNS	O => type	NN
also	RB	O => also	RB
applies	NNS	O => apply	NN
strings	NNS	O => string	NN
bitwise	NN	O => bitwise	NN
logical	JJ	O => logical	JJ
shift	NN	O => shift	NN
operators	NNS	O => operator	NN
apply	VBP	O => appli	VB
integers	NNS	O => integer	NN
Integer	JJR	O => Integer	JJR
operators	NNS	O => operator	NN
integer	JJ	O => integer	JJ
values	NNS	O => value	NN
integer	JJ	O => integer	JJ
quotient	NN	O => quotient	NN
remainder	NN	O => remainder	NN
satisfy	VBP	O => satisfi	VB
following	VBG	O => follow	VB
relationships	NNS	O => relationship	NN
truncated	VBN	O => truncat	VB
truncated	VBN	O => truncat	VB
division	NN	O => division	NN
exception	NN	O => exception	NN
rule	NN	O => rule	NN
dividend	NN	O => dividend	NN
most	JJS	O => most	JJS
negative	JJ	O => negative	JJ
value	NN	O => value	NN
int	NN	O => int	NN
type	NN	O => type	NN
quotient	NN	O => quotient	NN
equal	VB	O => equal	VB
due	JJ	O => due	JJ
integer	JJ	O => integer	JJ
divisor	NN	O => divisor	NN
constant	NN	O => constant	NN
divisor	NN	O => divisor	NN
run	VB	O => run	VB
time	NN	O => time	NN
run-time	JJ	O => run-time	JJ
panic	JJ	O => panic	JJ
occurs	NNS	O => occur	NN
dividend	NN	O => dividend	NN
non-negative	JJ	O => non-negative	JJ
divisor	NN	O => divisor	NN
constant	JJ	O => constant	JJ
power	NN	O => power	NN
division	NN	O => division	NN
replaced	VBN	O => replac	VB
right	NN	O => right	NN
shift	NN	O => shift	NN
computing	VBG	O => comput	VB
remainder	NN	O => remainder	NN
replaced	VBN	O => replac	VB
bitwise	NN	O => bitwise	NN
operation	NN	O => operation	NN
shift	NN	O => shift	NN
operators	NNS	O => operator	NN
shift	NN	O => shift	NN
left	NN	O => left	NN
operand	NN	O => operand	NN
shift	NN	O => shift	NN
count	NN	O => count	NN
specified	VBN	O => specifi	VB
right	NN	O => right	NN
operand	NN	O => operand	NN
non-negative	JJ	O => non-negative	JJ
shift	NN	O => shift	NN
count	NN	O => count	NN
negative	JJ	O => negative	JJ
run	VB	O => run	VB
time	NN	O => time	NN
run-time	JJ	O => run-time	JJ
panic	JJ	O => panic	JJ
occurs	NNS	O => occur	NN
shift	NN	O => shift	NN
operators	NNS	O => operator	NN
implement	VB	O => implement	VB
arithmetic	NN	O => arithmetic	NN
shifts	NNS	O => shift	NN
left	NN	O => left	NN
operand	NN	O => operand	NN
signed	VBN	O => sign	VB
integer	JJ	O => integer	JJ
logical	JJ	O => logical	JJ
shifts	NNS	O => shift	NN
unsigned	JJ	O => unsigned	JJ
integer	NN	O => integer	NN
There	EX	O => There	EX
upper	JJ	O => upper	JJ
limit	NN	O => limit	NN
shift	NN	O => shift	NN
count	NN	O => count	NN
Shifts	NNS	O => Shift	NN
behave	VBP	O => behav	VB
left	NN	O => left	NN
operand	NN	O => operand	NN
shifted	VBN	O => shift	VB
times	NNS	O => time	NN
shift	NN	O => shift	NN
count	NN	O => count	NN
result	NN	O => result	NN
truncated	VBN	O => truncat	VB
negative	JJ	O => negative	JJ
infinity	NN	O => infinity	NN
integer	JJ	O => integer	JJ
operands	NNS	O => operand	NN
unary	JJ	O => unary	JJ
operators	NNS	O => operator	NN
defined	VBN	O => defin	VB
follows	VBZ	O => follow	VB
Integer	JJR	O => Integer	JJR
overflow	NN	O => overflow	NN
unsigned	JJ	O => unsigned	JJ
integer	JJ	O => integer	JJ
values	NNS	O => value	NN
operations	NNS	O => operation	NN
computed	VBN	O => comput	VB
modulo	JJ	O => modulo	JJ
bit	NN	O => bit	NN
width	NN	O => width	NN
unsigned	JJ	O => unsigned	JJ
integer	NN	O => integer	NN
type	NN	O => type	NN
Loosely	RB	O => Loosely	RB
speaking	VBG	O => speak	VB
unsigned	JJ	O => unsigned	JJ
integer	JJ	O => integer	JJ
operations	NNS	O => operation	NN
discard	VB	O => discard	VB
high	JJ	O => high	JJ
bits	NNS	O => bit	NN
overflow	NN	O => overflow	NN
programs	NNS	O => program	NN
rely	VB	O => rely	VB
wrap	NN	O => wrap	NN
signed	VBN	O => sign	VB
integers	NNS	O => integer	NN
operations	NNS	O => operation	NN
legally	RB	O => legally	RB
overflow	NN	O => overflow	NN
resulting	VBG	O => result	VB
value	NN	O => value	NN
exists	VBZ	O => exist	VB
deterministically	RB	O => deterministically	RB
defined	VBN	O => defin	VB
signed	VBN	O => sign	VB
integer	JJ	O => integer	JJ
representation	NN	O => representation	NN
operation	NN	O => operation	NN
operands	NNS	O => operand	NN
Overflow	NNP	B-PERSON => Overflow	NNP
does	VBZ	O => doe	VB
cause	VB	O => cause	VB
run-time	JJ	O => run-time	JJ
panic	NN	O => panic	NN
compiler	NN	O => compiler	NN
optimize	VB	O => optimize	VB
code	NN	O => code	NN
assumption	NN	O => assumption	NN
overflow	NN	O => overflow	NN
does	VBZ	O => doe	VB
occur	VB	O => occur	VB
instance	NN	O => instance	NN
assume	VB	O => assume	VB
always	RB	O => always	RB
true	JJ	O => true	JJ
Floating-point	JJ	O => Floating-point	JJ
operators	NNS	O => operator	NN
floating-point	NN	O => floating-point	NN
complex	JJ	O => complex	JJ
numbers	NNS	O => number	NN
negation	NN	O => negation	NN
result	NN	O => result	NN
floating-point	NN	O => floating-point	NN
complex	JJ	O => complex	JJ
division	NN	O => division	NN
specified	VBN	O => specifi	VB
IEEE-754	JJ	O => IEEE-754	JJ
standard	NN	O => standard	NN
run-time	JJ	O => run-time	JJ
panic	JJ	O => panic	JJ
occurs	NN	O => occurs	NN
implementation-specific	JJ	O => implementation-specific	JJ
implementation	NN	O => implementation	NN
combine	VB	O => combine	VB
multiple	NN	O => multiple	NN
floating-point	NN	O => floating-point	NN
operations	NNS	O => operation	NN
single	JJ	O => single	JJ
fused	JJ	O => fused	JJ
operation	NN	O => operation	NN
possibly	RB	O => possibly	RB
statements	NNS	O => statement	NN
produce	VB	O => produce	VB
result	NN	O => result	NN
differs	NNS	O => differ	NN
value	NN	O => value	NN
obtained	VBN	O => obtain	VB
executing	VBG	O => execut	VB
rounding	NN	O => rounding	NN
instructions	NNS	O => instruction	NN
individually	RB	O => individually	RB
explicit	JJ	O => explicit	JJ
floating-point	NN	O => floating-point	NN
type	NN	O => type	NN
conversion	NN	O => conversion	NN
rounds	VBZ	O => round	VB
precision	NN	O => precision	NN
target	NN	O => target	NN
type	NN	O => type	NN
preventing	VBG	O => prevent	VB
fusion	NN	O => fusion	NN
discard	VB	O => discard	VB
rounding	VBG	O => round	VB
instance	NN	O => instance	NN
architectures	VBZ	O => architectur	VB
provide	VBP	O => provid	VB
fused	VBN	O => fuse	VB
multiply	NN	O => multiply	NN
add	VB	O => add	VB
FMA	NNP	O => FMA	NNP
instruction	NN	O => instruction	NN
computes	VBZ	O => comput	VB
rounding	NN	O => rounding	NN
intermediate	JJ	O => intermediate	JJ
result	NN	O => result	NN
examples	NNS	O => example	NN
show	VBP	O => show	VB
Go	NNP	O => Go	NNP
implementation	NN	O => implementation	NN
instruction	NN	O => instruction	NN
String	VBG	O => string	VB
concatenation	NN	O => concatenation	NN
Strings	NNS	O => String	NN
concatenated	VBN	O => concaten	VB
using	VBG	O => use	VB
operator	NN	O => operator	NN
assignment	NN	O => assignment	NN
operator	NN	O => operator	NN
String	VBG	O => string	VB
addition	NN	O => addition	NN
creates	VBZ	O => creat	VB
new	JJ	O => new	JJ
string	VBG	O => string	VB
concatenating	VBG	O => concaten	VB
operands	NNS	O => operand	NN
Comparison	NNP	O => Comparison	NNP
operators	NNS	O => operator	NN
Comparison	NNP	O => Comparison	NNP
operators	NNS	O => operator	NN
compare	VBP	O => compar	VB
operands	NNS	O => operand	NN
yield	VB	O => yield	VB
untyped	JJ	O => untyped	JJ
boolean	JJ	O => boolean	JJ
value	NN	O => value	NN
comparison	NN	O => comparison	NN
operand	NN	O => operand	NN
assignable	JJ	O => assignable	JJ
type	NN	O => type	NN
second	JJ	O => second	JJ
operand	NN	O => operand	NN
vice	NN	O => vice	NN
versa	NN	O => versa	NN
equality	NN	O => equality	NN
operators	NNS	O => operator	NN
apply	VBP	O => appli	VB
operands	NNS	O => operand	NN
comparable	JJ	O => comparable	JJ
ordering	NN	O => ordering	NN
operators	NNS	O => operator	NN
apply	VBP	O => appli	VB
operands	NNS	O => operand	NN
ordered	VBN	O => order	VB
terms	NNS	O => term	NN
result	NN	O => result	NN
comparisons	NNS	O => comparison	NN
defined	VBN	O => defin	VB
follows	VBZ	O => follow	VB
Boolean	JJ	B-GPE => Boolean	JJ
values	NNS	O => value	NN
comparable	JJ	O => comparable	JJ
boolean	JJ	O => boolean	JJ
values	NNS	O => value	NN
equal	VB	O => equal	VB
Integer	JJR	O => Integer	JJR
values	NNS	O => value	NN
comparable	JJ	O => comparable	JJ
ordered	VBD	O => order	VB
usual	JJ	O => usual	JJ
way	NN	O => way	NN
Floating-point	JJ	O => Floating-point	JJ
values	NNS	O => value	NN
comparable	JJ	O => comparable	JJ
ordered	VBD	O => order	VB
defined	VBN	O => defin	VB
IEEE-754	JJ	O => IEEE-754	JJ
standard	NN	O => standard	NN
Complex	JJ	O => Complex	JJ
values	NNS	O => value	NN
comparable	JJ	O => comparable	JJ
complex	JJ	O => complex	JJ
values	NNS	O => value	NN
equal	VB	O => equal	VB
String	VBG	O => string	VB
values	NNS	O => value	NN
comparable	JJ	O => comparable	JJ
ordered	VBD	O => order	VB
lexically	RB	O => lexically	RB
byte-wise	NN	O => byte-wise	NN
Pointer	NN	O => Pointer	NN
values	NNS	O => value	NN
comparable	JJ	O => comparable	JJ
pointer	NN	O => pointer	NN
values	NNS	O => value	NN
equal	VB	O => equal	VB
point	NN	O => point	NN
variable	NN	O => variable	NN
have	VB	O => have	VB
value	NN	O => value	NN
Pointers	NNS	O => Pointer	NN
distinct	JJ	O => distinct	JJ
zero-size	JJ	O => zero-size	JJ
variables	NNS	O => variable	NN
equal	JJ	O => equal	JJ
Channel	NNP	O => Channel	NNP
values	NNS	O => value	NN
comparable	JJ	O => comparable	JJ
channel	NN	O => channel	NN
values	NNS	O => value	NN
equal	VB	O => equal	VB
were	VBD	O => were	VB
created	VBN	O => creat	VB
call	NN	O => call	NN
have	VB	O => have	VB
value	NN	O => value	NN
Interface	NNP	O => Interface	NNP
values	NNS	O => value	NN
comparable	JJ	O => comparable	JJ
interface	NN	O => interface	NN
values	NNS	O => value	NN
equal	VB	O => equal	VB
have	VB	O => have	VB
identical	JJ	O => identical	JJ
dynamic	JJ	O => dynamic	JJ
types	NNS	O => type	NN
equal	VB	O => equal	VB
dynamic	JJ	O => dynamic	JJ
values	NNS	O => value	NN
have	VB	O => have	VB
value	NN	O => value	NN
value	NN	O => value	NN
non-interface	JJ	O => non-interface	JJ
type	NN	O => type	NN
value	NN	O => value	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
comparable	JJ	O => comparable	JJ
values	NNS	O => value	NN
type	NN	O => type	NN
comparable	JJ	O => comparable	JJ
implements	VBZ	O => implement	VB
equal	VB	O => equal	VB
dynamic	JJ	O => dynamic	JJ
type	NN	O => type	NN
identical	JJ	O => identical	JJ
dynamic	JJ	O => dynamic	JJ
value	NN	O => value	NN
equal	VB	O => equal	VB
Struct	NN	O => Struct	NN
values	NNS	O => value	NN
comparable	JJ	O => comparable	JJ
all	PDT	O => all	PDT
fields	NNS	O => field	NN
comparable	JJ	O => comparable	JJ
struct	NN	O => struct	NN
values	NNS	O => value	NN
equal	VB	O => equal	VB
corresponding	JJ	O => corresponding	JJ
non-blank	JJ	O => non-blank	JJ
fields	NNS	O => field	NN
equal	JJ	O => equal	JJ
Array	NN	O => Array	NN
values	NNS	O => value	NN
comparable	JJ	O => comparable	JJ
values	NNS	O => value	NN
array	NN	O => array	NN
element	NN	O => element	NN
type	NN	O => type	NN
comparable	JJ	O => comparable	JJ
array	NN	O => array	NN
values	NNS	O => value	NN
equal	VB	O => equal	VB
corresponding	JJ	O => corresponding	JJ
elements	NNS	O => element	NN
equal	JJ	O => equal	JJ
comparison	NN	O => comparison	NN
interface	NN	O => interface	NN
values	NNS	O => value	NN
identical	JJ	O => identical	JJ
dynamic	JJ	O => dynamic	JJ
types	NNS	O => type	NN
causes	VBZ	O => caus	VB
run-time	JJ	O => run-time	JJ
panic	JJ	O => panic	JJ
values	NNS	O => value	NN
type	NN	O => type	NN
comparable	JJ	O => comparable	JJ
behavior	NN	O => behavior	NN
applies	NNS	O => apply	NN
direct	VB	O => direct	VB
interface	NN	O => interface	NN
value	NN	O => value	NN
comparisons	NNS	O => comparison	NN
also	RB	O => also	RB
comparing	VBG	O => compar	VB
arrays	NNS	O => array	NN
interface	NN	O => interface	NN
values	NNS	O => value	NN
structs	NNS	O => struct	NN
interface-valued	JJ	O => interface-valued	JJ
fields	NNS	O => field	NN
Slice	NNP	O => Slice	NNP
map	NN	O => map	NN
function	NN	O => function	NN
values	NNS	O => value	NN
comparable	JJ	O => comparable	JJ
However	RB	O => However	RB
special	JJ	O => special	JJ
case	NN	O => case	NN
slice	NN	O => slice	NN
map	NN	O => map	NN
function	NN	O => function	NN
value	NN	O => value	NN
compared	VBN	O => compar	VB
predeclared	JJ	O => predeclared	JJ
identifier	NN	O => identifier	NN
Comparison	NNP	O => Comparison	NNP
pointer	NN	O => pointer	NN
channel	NN	O => channel	NN
interface	NN	O => interface	NN
values	NNS	O => value	NN
also	RB	O => also	RB
allowed	VBN	O => allow	VB
follows	VBZ	O => follow	VB
general	JJ	O => general	JJ
rules	NNS	O => rule	NN
Logical	JJ	O => Logical	JJ
operators	NNS	O => operator	NN
Logical	JJ	O => Logical	JJ
operators	NNS	O => operator	NN
apply	VBP	O => appli	VB
boolean	JJ	O => boolean	JJ
values	NNS	O => value	NN
yield	VB	O => yield	VB
result	NN	O => result	NN
type	NN	O => type	NN
operands	NNS	O => operand	NN
right	NN	O => right	NN
operand	NN	O => operand	NN
evaluated	VBN	O => evalu	VB
conditionally	RB	O => conditionally	RB
Address	NN	O => Address	NN
operators	NNS	O => operator	NN
operand	NN	O => operand	NN
type	NN	O => type	NN
address	NN	O => address	NN
operation	NN	O => operation	NN
generates	VBZ	O => generat	VB
pointer	NN	O => pointer	NN
type	NN	O => type	NN
operand	NN	O => operand	NN
addressable	JJ	O => addressable	JJ
variable	JJ	O => variable	JJ
pointer	NN	O => pointer	NN
indirection	NN	O => indirection	NN
slice	NN	O => slice	NN
indexing	NN	O => indexing	NN
operation	NN	O => operation	NN
field	NN	O => field	NN
selector	NN	O => selector	NN
addressable	JJ	O => addressable	JJ
struct	NN	O => struct	NN
operand	NN	O => operand	NN
array	NN	O => array	NN
indexing	NN	O => indexing	NN
operation	NN	O => operation	NN
addressable	JJ	O => addressable	JJ
array	NN	O => array	NN
exception	NN	O => exception	NN
addressability	NN	O => addressability	NN
requirement	NN	O => requirement	NN
also	RB	O => also	RB
possibly	RB	O => possibly	RB
parenthesized	VBN	O => parenthes	VB
composite	JJ	O => composite	JJ
literal	JJ	O => literal	JJ
evaluation	NN	O => evaluation	NN
cause	VB	O => cause	VB
run-time	JJ	O => run-time	JJ
panic	NN	O => panic	NN
then	RB	O => then	RB
evaluation	NN	O => evaluation	NN
does	VBZ	O => doe	VB
too	RB	O => too	RB
operand	NN	O => operand	NN
pointer	NN	O => pointer	NN
type	NN	O => type	NN
pointer	NN	O => pointer	NN
indirection	NN	O => indirection	NN
denotes	VBZ	O => denot	VB
variable	NN	O => variable	NN
type	NN	O => type	NN
pointed	VBN	O => point	VB
attempt	NN	O => attempt	NN
evaluate	VBP	O => evalu	VB
cause	VB	O => cause	VB
run-time	JJ	O => run-time	JJ
panic	NN	O => panic	NN
Receive	NNP	O => Receive	NNP
operator	NN	O => operator	NN
operand	NN	O => operand	NN
channel	NN	O => channel	NN
type	NN	O => type	NN
value	NN	O => value	NN
receive	NN	O => receive	NN
operation	NN	O => operation	NN
value	NN	O => value	NN
received	JJ	O => received	JJ
channel	NN	O => channel	NN
channel	NN	O => channel	NN
direction	NN	O => direction	NN
permit	VB	O => permit	VB
receive	NN	O => receive	NN
operations	NNS	O => operation	NN
type	NN	O => type	NN
receive	NN	O => receive	NN
operation	NN	O => operation	NN
element	NN	O => element	NN
type	NN	O => type	NN
channel	NN	O => channel	NN
expression	NN	O => expression	NN
blocks	VBZ	O => block	VB
value	NN	O => value	NN
available	JJ	O => available	JJ
Receiving	VBG	O => receiv	VB
channel	NN	O => channel	NN
blocks	VBZ	O => block	VB
forever	RB	O => forever	RB
receive	NN	O => receive	NN
operation	NN	O => operation	NN
closed	JJ	O => closed	JJ
channel	NN	O => channel	NN
always	RB	O => always	RB
proceed	VB	O => proceed	VB
immediately	RB	O => immediately	RB
yielding	VBG	O => yield	VB
element	NN	O => element	NN
type	NN	O => type	NN
value	NN	O => value	NN
previously	RB	O => previously	RB
sent	VBN	O => sent	VB
values	NNS	O => value	NN
have	VB	O => have	VB
been	VBN	O => been	VB
received	VBN	O => receiv	VB
receive	NN	O => receive	NN
expression	NN	O => expression	NN
used	VBN	O => use	VB
assignment	NN	O => assignment	NN
initialization	NN	O => initialization	NN
special	JJ	O => special	JJ
form	NN	O => form	NN
yields	NNS	O => yield	NN
additional	JJ	O => additional	JJ
untyped	JJ	O => untyped	JJ
boolean	JJ	O => boolean	JJ
result	NN	O => result	NN
reporting	NN	O => reporting	NN
communication	NN	O => communication	NN
succeeded	VBD	O => succeed	VB
value	NN	O => value	NN
value	NN	O => value	NN
received	JJ	O => received	JJ
was	VBD	O => was	VB
delivered	VBN	O => deliv	VB
successful	JJ	O => successful	JJ
send	VB	O => send	VB
operation	NN	O => operation	NN
channel	NN	O => channel	NN
value	NN	O => value	NN
generated	VBN	O => generat	VB
channel	NN	O => channel	NN
closed	JJ	O => closed	JJ
empty	JJ	O => empty	JJ
Conversions	NNS	O => Conversion	NN
conversion	NN	O => conversion	NN
changes	VBZ	O => chang	VB
type	NN	O => type	NN
expression	NN	O => expression	NN
type	NN	O => type	NN
specified	VBN	O => specifi	VB
conversion	NN	O => conversion	NN
conversion	NN	O => conversion	NN
appear	VBP	O => appear	VB
literally	RB	O => literally	RB
source	NN	O => source	NN
implied	VBN	O => impli	VB
context	NN	O => context	NN
expression	NN	O => expression	NN
appears	VBZ	O => appear	VB
explicit	JJ	O => explicit	JJ
conversion	NN	O => conversion	NN
expression	NN	O => expression	NN
form	NN	O => form	NN
type	NN	O => type	NN
expression	NN	O => expression	NN
converted	VBN	O => convert	VB
type	NN	O => type	NN
type	NN	O => type	NN
starts	VBZ	O => start	VB
operator	NN	O => operator	NN
type	NN	O => type	NN
starts	VBZ	O => start	VB
keyword	NN	O => keyword	NN
result	NN	O => result	NN
list	NN	O => list	NN
parenthesized	VBN	O => parenthes	VB
necessary	JJ	O => necessary	JJ
avoid	VB	O => avoid	VB
ambiguity	NN	O => ambiguity	NN
constant	JJ	O => constant	JJ
value	NN	O => value	NN
converted	VBN	O => convert	VB
type	NN	O => type	NN
representable	JJ	O => representable	JJ
value	NN	O => value	NN
special	JJ	O => special	JJ
case	NN	O => case	NN
integer	JJ	O => integer	JJ
constant	JJ	O => constant	JJ
explicitly	RB	O => explicitly	RB
converted	VBN	O => convert	VB
string	VBG	O => string	VB
type	NN	O => type	NN
using	VBG	O => use	VB
rule	NN	O => rule	NN
non-constant	JJ	O => non-constant	JJ
Converting	VBG	O => convert	VB
constant	JJ	O => constant	JJ
yields	NNS	O => yield	NN
typed	JJ	O => typed	JJ
constant	JJ	O => constant	JJ
result	NN	O => result	NN
non-constant	JJ	O => non-constant	JJ
value	NN	O => value	NN
converted	VBN	O => convert	VB
type	NN	O => type	NN
cases	NNS	O => case	NN
assignable	JJ	O => assignable	JJ
ignoring	VBG	O => ignor	VB
struct	NN	O => struct	NN
tags	NNS	O => tag	NN
see	VB	O => see	VB
type	NN	O => type	NN
have	VB	O => have	VB
identical	JJ	O => identical	JJ
underlying	VBG	O => under	VB
types	NNS	O => type	NN
ignoring	VBG	O => ignor	VB
struct	NN	O => struct	NN
tags	NNS	O => tag	NN
see	VB	O => see	VB
type	NN	O => type	NN
pointer	NN	O => pointer	NN
types	NNS	O => type	NN
defined	VBN	O => defin	VB
types	NNS	O => type	NN
pointer	NN	O => pointer	NN
base	NN	O => base	NN
types	NNS	O => type	NN
have	VB	O => have	VB
identical	JJ	O => identical	JJ
underlying	VBG	O => under	VB
types	NNS	O => type	NN
type	NN	O => type	NN
integer	JJ	O => integer	JJ
floating	VBG	O => float	VB
point	NN	O => point	NN
types	NNS	O => type	NN
type	NN	O => type	NN
complex	JJ	O => complex	JJ
types	NNS	O => type	NN
integer	JJ	O => integer	JJ
slice	NN	O => slice	NN
bytes	NNS	O => byte	NN
runes	NNS	O => rune	NN
string	VBG	O => string	VB
type	NN	O => type	NN
string	VBG	O => string	VB
slice	NN	O => slice	NN
bytes	NNS	O => byte	NN
runes	NNS	O => rune	NN
Struct	NN	O => Struct	NN
tags	NNS	O => tag	NN
ignored	VBN	O => ignor	VB
comparing	VBG	O => compar	VB
struct	NN	O => struct	NN
types	NNS	O => type	NN
identity	NN	O => identity	NN
purpose	NN	O => purpose	NN
conversion	NN	O => conversion	NN
Specific	JJ	O => Specific	JJ
rules	NNS	O => rule	NN
apply	VBP	O => appli	VB
non-constant	JJ	O => non-constant	JJ
conversions	NNS	O => conversion	NN
numeric	JJ	O => numeric	JJ
types	NNS	O => type	NN
string	VBG	O => string	VB
type	NN	O => type	NN
conversions	NNS	O => conversion	NN
change	VBP	O => chang	VB
representation	NN	O => representation	NN
incur	VB	O => incur	VB
run-time	JJ	O => run-time	JJ
cost	NN	O => cost	NN
other	JJ	O => other	JJ
conversions	NNS	O => conversion	NN
change	VBP	O => chang	VB
type	NN	O => type	NN
representation	NN	O => representation	NN
There	EX	O => There	EX
linguistic	JJ	O => linguistic	JJ
mechanism	NN	O => mechanism	NN
convert	VB	O => convert	VB
pointers	NNS	O => pointer	NN
integers	NNS	O => integer	NN
package	NN	O => package	NN
implements	VBZ	O => implement	VB
functionality	NN	O => functionality	NN
restricted	VBN	O => restrict	VB
circumstances	NNS	O => circumstance	NN
Conversions	NNS	O => Conversion	NN
numeric	JJ	O => numeric	JJ
types	NNS	O => type	NN
conversion	NN	O => conversion	NN
non-constant	JJ	O => non-constant	JJ
numeric	JJ	O => numeric	JJ
values	NNS	O => value	NN
following	VBG	O => follow	VB
rules	NNS	O => rule	NN
apply	VBP	O => appli	VB
converting	VBG	O => convert	VB
integer	JJ	O => integer	JJ
types	NNS	O => type	NN
value	NN	O => value	NN
signed	VBN	O => sign	VB
integer	NN	O => integer	NN
sign	JJ	O => sign	JJ
extended	VBN	O => extend	VB
implicit	JJ	O => implicit	JJ
infinite	JJ	O => infinite	JJ
precision	NN	O => precision	NN
otherwise	RB	O => otherwise	RB
extended	JJ	O => extended	JJ
then	RB	O => then	RB
truncated	VBN	O => truncat	VB
fit	VB	O => fit	VB
result	NN	O => result	NN
type	NN	O => type	NN
size	NN	O => size	NN
example	NN	O => example	NN
then	RB	O => then	RB
conversion	NN	O => conversion	NN
always	RB	O => always	RB
yields	NNS	O => yield	NN
valid	JJ	O => valid	JJ
value	NN	O => value	NN
there	EX	O => there	EX
indication	NN	O => indication	NN
overflow	NN	O => overflow	NN
converting	VBG	O => convert	VB
floating-point	NN	O => floating-point	NN
number	NN	O => number	NN
integer	NN	O => integer	NN
fraction	NN	O => fraction	NN
discarded	VBN	O => discard	VB
truncation	NN	O => truncation	NN
converting	VBG	O => convert	VB
integer	JJ	O => integer	JJ
floating-point	NN	O => floating-point	NN
number	NN	O => number	NN
floating-point	NN	O => floating-point	NN
type	NN	O => type	NN
complex	JJ	O => complex	JJ
number	NN	O => number	NN
complex	JJ	O => complex	JJ
type	NN	O => type	NN
result	NN	O => result	NN
value	NN	O => value	NN
rounded	VBN	O => round	VB
precision	NN	O => precision	NN
specified	VBN	O => specifi	VB
destination	NN	O => destination	NN
type	NN	O => type	NN
instance	NN	O => instance	NN
value	NN	O => value	NN
variable	NN	O => variable	NN
type	NN	O => type	NN
stored	VBN	O => store	VB
using	VBG	O => use	VB
additional	JJ	O => additional	JJ
precision	NN	O => precision	NN
IEEE-754	JJ	O => IEEE-754	JJ
number	NN	O => number	NN
represents	VBZ	O => repres	VB
result	NN	O => result	NN
rounding	NN	O => rounding	NN
value	NN	O => value	NN
precision	NN	O => precision	NN
Similarly	RB	O => Similarly	RB
more	JJR	O => more	JJR
bits	NNS	O => bit	NN
precision	NN	O => precision	NN
does	VBZ	O => doe	VB
all	PDT	O => all	PDT
non-constant	JJ	O => non-constant	JJ
conversions	NNS	O => conversion	NN
involving	VBG	O => involv	VB
floating-point	NN	O => floating-point	NN
complex	JJ	O => complex	JJ
values	NNS	O => value	NN
result	NN	O => result	NN
type	NN	O => type	NN
cannot	VBP	O => cannot	VB
represent	VBP	O => repres	VB
value	NN	O => value	NN
conversion	NN	O => conversion	NN
succeeds	VBZ	O => succeed	VB
result	NN	O => result	NN
value	NN	O => value	NN
implementation-dependent	JJ	O => implementation-dependent	JJ
Conversions	NNS	O => Conversion	NN
string	VBG	O => string	VB
type	NN	O => type	NN
Converting	VBG	O => convert	VB
signed	VBN	O => sign	VB
unsigned	JJ	O => unsigned	JJ
integer	JJ	O => integer	JJ
value	NN	O => value	NN
string	VBG	O => string	VB
type	NN	O => type	NN
yields	NNS	O => yield	NN
string	VBG	O => string	VB
containing	VBG	O => contain	VB
UTF-8	JJ	O => UTF-8	JJ
representation	NN	O => representation	NN
integer	NN	O => integer	NN
Values	NNS	O => Value	NN
range	NN	O => range	NN
valid	JJ	O => valid	JJ
Unicode	NNP	B-GPE => Unicode	NNP
code	NN	O => code	NN
points	NNS	O => point	NN
converted	VBN	O => convert	VB
Converting	VBG	O => convert	VB
slice	NN	O => slice	NN
bytes	NNS	O => byte	NN
string	VBG	O => string	VB
type	NN	O => type	NN
yields	NNS	O => yield	NN
string	VBG	O => string	VB
successive	JJ	O => successive	JJ
bytes	NNS	O => byte	NN
elements	NNS	O => element	NN
slice	NN	O => slice	NN
Converting	VBG	O => convert	VB
slice	NN	O => slice	NN
runes	NNS	O => rune	NN
string	VBG	O => string	VB
type	NN	O => type	NN
yields	NNS	O => yield	NN
string	VBG	O => string	VB
concatenation	NN	O => concatenation	NN
individual	JJ	O => individual	JJ
rune	NN	O => rune	NN
values	NNS	O => value	NN
converted	VBN	O => convert	VB
strings	NNS	O => string	NN
Converting	VBG	O => convert	VB
value	NN	O => value	NN
string	VBG	O => string	VB
type	NN	O => type	NN
slice	NN	O => slice	NN
bytes	NNS	O => byte	NN
type	NN	O => type	NN
yields	NNS	O => yield	NN
slice	NN	O => slice	NN
successive	JJ	O => successive	JJ
elements	NNS	O => element	NN
bytes	NNS	O => byte	NN
string	NN	O => string	NN
Converting	VBG	O => convert	VB
value	NN	O => value	NN
string	VBG	O => string	VB
type	NN	O => type	NN
slice	NN	O => slice	NN
runes	NNS	O => rune	NN
type	NN	O => type	NN
yields	NNS	O => yield	NN
slice	NN	O => slice	NN
containing	VBG	O => contain	VB
individual	JJ	O => individual	JJ
Unicode	NNP	B-GPE => Unicode	NNP
code	NN	O => code	NN
points	NNS	O => point	NN
string	NN	O => string	NN
Constant	JJ	O => Constant	JJ
expressions	NNS	O => expression	NN
Constant	JJ	O => Constant	JJ
expressions	NNS	O => expression	NN
contain	VB	O => contain	VB
constant	JJ	O => constant	JJ
operands	NNS	O => operand	NN
evaluated	VBN	O => evalu	VB
compile	JJ	O => compile	JJ
time	NN	O => time	NN
Untyped	JJ	O => Untyped	JJ
boolean	NN	O => boolean	NN
numeric	JJ	O => numeric	JJ
string	VBG	O => string	VB
constants	NNS	O => constant	NN
used	VBN	O => use	VB
operands	NNS	O => operand	NN
legal	JJ	O => legal	JJ
operand	NN	O => operand	NN
boolean	NN	O => boolean	NN
numeric	JJ	O => numeric	JJ
string	VBG	O => string	VB
type	NN	O => type	NN
respectively	RB	O => respectively	RB
constant	JJ	O => constant	JJ
comparison	NN	O => comparison	NN
always	RB	O => always	RB
yields	NNS	O => yield	NN
untyped	JJ	O => untyped	JJ
boolean	JJ	O => boolean	JJ
constant	JJ	O => constant	JJ
left	NN	O => left	NN
operand	NN	O => operand	NN
constant	JJ	O => constant	JJ
shift	NN	O => shift	NN
expression	NN	O => expression	NN
untyped	JJ	O => untyped	JJ
constant	NN	O => constant	NN
result	NN	O => result	NN
integer	JJ	O => integer	JJ
constant	NN	O => constant	NN
otherwise	RB	O => otherwise	RB
constant	JJ	O => constant	JJ
type	NN	O => type	NN
left	NN	O => left	NN
operand	NN	O => operand	NN
integer	JJ	O => integer	JJ
type	NN	O => type	NN
other	JJ	O => other	JJ
operation	NN	O => operation	NN
untyped	JJ	O => untyped	JJ
constants	NNS	O => constant	NN
results	NNS	O => result	NN
untyped	JJ	O => untyped	JJ
constant	JJ	O => constant	JJ
kind	NN	O => kind	NN
boolean	NN	O => boolean	NN
integer	NN	O => integer	NN
floating-point	JJ	O => floating-point	JJ
complex	JJ	O => complex	JJ
string	VBG	O => string	VB
constant	JJ	O => constant	JJ
untyped	JJ	O => untyped	JJ
operands	NNS	O => operand	NN
binary	JJ	O => binary	JJ
operation	NN	O => operation	NN
other	JJ	O => other	JJ
shift	NN	O => shift	NN
different	JJ	O => different	JJ
kinds	NNS	O => kind	NN
result	NN	O => result	NN
operand	NN	O => operand	NN
kind	NN	O => kind	NN
appears	VBZ	O => appear	VB
later	RB	O => later	RB
list	NN	O => list	NN
integer	NN	O => integer	NN
rune	NN	O => rune	NN
floating-point	JJ	O => floating-point	JJ
complex	JJ	O => complex	JJ
example	NN	O => example	NN
untyped	JJ	O => untyped	JJ
integer	JJ	O => integer	JJ
constant	JJ	O => constant	JJ
divided	VBN	O => divid	VB
untyped	JJ	O => untyped	JJ
complex	JJ	O => complex	JJ
constant	JJ	O => constant	JJ
yields	NNS	O => yield	NN
untyped	JJ	O => untyped	JJ
complex	JJ	O => complex	JJ
constant	JJ	O => constant	JJ
Applying	VBG	O => appli	VB
built-in	JJ	O => built-in	JJ
function	NN	O => function	NN
untyped	JJ	O => untyped	JJ
integer	NN	O => integer	NN
rune	NN	O => rune	NN
floating-point	NN	O => floating-point	NN
constants	NNS	O => constant	NN
yields	NNS	O => yield	NN
untyped	JJ	O => untyped	JJ
complex	JJ	O => complex	JJ
constant	JJ	O => constant	JJ
Constant	JJ	O => Constant	JJ
expressions	NNS	O => expression	NN
always	RB	O => always	RB
evaluated	VBN	O => evalu	VB
exactly	RB	O => exactly	RB
intermediate	JJ	O => intermediate	JJ
values	NNS	O => value	NN
constants	NNS	O => constant	NN
require	VB	O => require	VB
precision	NN	O => precision	NN
significantly	RB	O => significantly	RB
larger	JJR	O => larger	JJR
supported	VBN	O => support	VB
predeclared	JJ	O => predeclared	JJ
type	NN	O => type	NN
language	NN	O => language	NN
following	VBG	O => follow	VB
legal	JJ	O => legal	JJ
declarations	NNS	O => declaration	NN
divisor	NN	O => divisor	NN
constant	JJ	O => constant	JJ
division	NN	O => division	NN
remainder	NN	O => remainder	NN
operation	NN	O => operation	NN
values	NNS	O => value	NN
typed	JJ	O => typed	JJ
constants	NNS	O => constant	NN
always	RB	O => always	RB
accurately	RB	O => accurately	RB
representable	JJ	O => representable	JJ
values	NNS	O => value	NN
constant	JJ	O => constant	JJ
type	NN	O => type	NN
following	VBG	O => follow	VB
constant	JJ	O => constant	JJ
expressions	NNS	O => expression	NN
illegal	JJ	O => illegal	JJ
mask	NN	O => mask	NN
used	VBN	O => use	VB
unary	JJ	O => unary	JJ
bitwise	NN	O => bitwise	NN
complement	NN	O => complement	NN
operator	NN	O => operator	NN
matches	NNS	O => match	NN
rule	NN	O => rule	NN
non-constants	NNS	O => non-constant	NN
mask	NN	O => mask	NN
all	PDT	O => all	PDT
unsigned	JJ	O => unsigned	JJ
constants	NNS	O => constant	NN
signed	VBN	O => sign	VB
untyped	JJ	O => untyped	JJ
constants	NNS	O => constant	NN
Implementation	NNP	O => Implementation	NNP
restriction	NN	O => restriction	NN
compiler	NN	O => compiler	NN
rounding	NN	O => rounding	NN
computing	VBG	O => comput	VB
untyped	JJ	O => untyped	JJ
floating-point	NN	O => floating-point	NN
complex	JJ	O => complex	JJ
constant	JJ	O => constant	JJ
expressions	NNS	O => expression	NN
see	VB	O => see	VB
implementation	NN	O => implementation	NN
restriction	NN	O => restriction	NN
section	NN	O => section	NN
constants	NNS	O => constant	NN
rounding	NN	O => rounding	NN
cause	VB	O => cause	VB
floating-point	NN	O => floating-point	NN
constant	JJ	O => constant	JJ
expression	NN	O => expression	NN
invalid	JJ	O => invalid	JJ
integer	JJ	O => integer	JJ
context	NN	O => context	NN
even	RB	O => even	RB
integral	JJ	O => integral	JJ
calculated	VBN	O => calcul	VB
using	VBG	O => use	VB
infinite	JJ	O => infinite	JJ
precision	NN	O => precision	NN
vice	NN	O => vice	NN
versa	NN	O => versa	NN
Order	NN	O => Order	NN
evaluation	NN	O => evaluation	NN
package	NN	O => package	NN
level	NN	O => level	NN
initialization	NN	O => initialization	NN
dependencies	NNS	O => dependency	NN
determine	VB	O => determine	VB
evaluation	NN	O => evaluation	NN
order	NN	O => order	NN
individual	JJ	O => individual	JJ
initialization	NN	O => initialization	NN
expressions	NNS	O => expression	NN
variable	NN	O => variable	NN
declarations	NNS	O => declaration	NN
Otherwise	RB	O => Otherwise	RB
evaluating	VBG	O => evalu	VB
operands	NNS	O => operand	NN
expression	NN	O => expression	NN
assignment	NN	O => assignment	NN
return	VB	O => return	VB
statement	NN	O => statement	NN
all	PDT	O => all	PDT
function	NN	O => function	NN
calls	NNS	O => call	NN
method	NN	O => method	NN
calls	NNS	O => call	NN
communication	NN	O => communication	NN
operations	NNS	O => operation	NN
evaluated	VBN	O => evalu	VB
lexical	JJ	O => lexical	JJ
left-to-right	JJ	O => left-to-right	JJ
order	NN	O => order	NN
example	NN	O => example	NN
function-local	JJ	O => function-local	JJ
assignment	NN	O => assignment	NN
function	NN	O => function	NN
calls	VBZ	O => call	VB
communication	NN	O => communication	NN
happen	VB	O => happen	VB
order	NN	O => order	NN
However	RB	O => However	RB
order	NN	O => order	NN
events	NNS	O => event	NN
compared	VBN	O => compar	VB
evaluation	NN	O => evaluation	NN
indexing	NN	O => indexing	NN
evaluation	NN	O => evaluation	NN
specified	VBN	O => specifi	VB
package	NN	O => package	NN
level	NN	O => level	NN
initialization	NN	O => initialization	NN
dependencies	NNS	O => dependency	NN
left-to-right	JJ	O => left-to-right	JJ
rule	NN	O => rule	NN
individual	JJ	O => individual	JJ
initialization	NN	O => initialization	NN
expressions	NNS	O => expression	NN
operands	NNS	O => operand	NN
expression	NN	O => expression	NN
function	NN	O => function	NN
calls	VBZ	O => call	VB
happen	VB	O => happen	VB
order	NN	O => order	NN
Floating-point	JJ	O => Floating-point	JJ
operations	NNS	O => operation	NN
single	JJ	O => single	JJ
expression	NN	O => expression	NN
evaluated	VBN	O => evalu	VB
according	VBG	O => accord	VB
associativity	NN	O => associativity	NN
operators	NNS	O => operator	NN
Explicit	NNP	B-PERSON => Explicit	NNP
parentheses	VBZ	O => parenthes	VB
affect	VBP	O => affect	VB
evaluation	NN	O => evaluation	NN
overriding	VBG	O => overrid	VB
default	NN	O => default	NN
associativity	NN	O => associativity	NN
expression	NN	O => expression	NN
addition	NN	O => addition	NN
performed	VBN	O => perform	VB
adding	VBG	O => ad	VB
Statements	NNS	O => Statement	NN
Statements	NNS	O => Statement	NN
control	VBP	O => control	VB
execution	NN	O => execution	NN
Terminating	VBG	O => termin	VB
statements	NNS	O => statement	NN
terminating	NN	O => terminating	NN
statement	NN	O => statement	NN
prevents	VBZ	O => prevent	VB
execution	NN	O => execution	NN
all	PDT	O => all	PDT
statements	NNS	O => statement	NN
lexically	RB	O => lexically	RB
appear	VBP	O => appear	VB
block	NN	O => block	NN
following	VBG	O => follow	VB
statements	NNS	O => statement	NN
terminating	VBG	O => termin	VB
return	NN	O => return	NN
goto	NN	O => goto	NN
statement	NN	O => statement	NN
call	NN	O => call	NN
built-in	JJ	O => built-in	JJ
function	NN	O => function	NN
block	NN	O => block	NN
statement	NN	O => statement	NN
list	NN	O => list	NN
ends	VBZ	O => end	VB
terminating	NN	O => terminating	NN
statement	NN	O => statement	NN
statement	NN	O => statement	NN
else	RB	O => else	RB
branch	NN	O => branch	NN
present	JJ	O => present	JJ
branches	NNS	O => branch	NN
terminating	NN	O => terminating	NN
statements	NNS	O => statement	NN
statement	NN	O => statement	NN
there	EX	O => there	EX
break	NN	O => break	NN
statements	NNS	O => statement	NN
referring	VBG	O => refer	VB
statement	NN	O => statement	NN
loop	NN	O => loop	NN
condition	NN	O => condition	NN
absent	JJ	O => absent	JJ
switch	NN	O => switch	NN
statement	NN	O => statement	NN
there	EX	O => there	EX
break	NN	O => break	NN
statements	NNS	O => statement	NN
referring	VBG	O => refer	VB
switch	NN	O => switch	NN
statement	NN	O => statement	NN
there	EX	O => there	EX
default	NN	O => default	NN
case	NN	O => case	NN
statement	NN	O => statement	NN
lists	NNS	O => list	NN
case	NN	O => case	NN
including	VBG	O => includ	VB
default	NN	O => default	NN
end	NN	O => end	NN
terminating	NN	O => terminating	NN
statement	NN	O => statement	NN
possibly	RB	O => possibly	RB
labeled	JJ	O => labeled	JJ
statement	NN	O => statement	NN
select	JJ	O => select	JJ
statement	NN	O => statement	NN
there	EX	O => there	EX
break	NN	O => break	NN
statements	NNS	O => statement	NN
referring	VBG	O => refer	VB
select	JJ	O => select	JJ
statement	NN	O => statement	NN
statement	NN	O => statement	NN
lists	NNS	O => list	NN
case	NN	O => case	NN
including	VBG	O => includ	VB
default	NN	O => default	NN
present	JJ	O => present	JJ
end	NN	O => end	NN
terminating	NN	O => terminating	NN
statement	NN	O => statement	NN
labeled	JJ	O => labeled	JJ
statement	NN	O => statement	NN
labeling	VBG	O => label	VB
terminating	NN	O => terminating	NN
statement	NN	O => statement	NN
other	JJ	O => other	JJ
statements	NNS	O => statement	NN
terminating	VBG	O => termin	VB
statement	NN	O => statement	NN
list	NN	O => list	NN
ends	VBZ	O => end	VB
terminating	NN	O => terminating	NN
statement	NN	O => statement	NN
list	NN	O => list	NN
empty	JJ	O => empty	JJ
final	JJ	O => final	JJ
non-empty	JJ	O => non-empty	JJ
statement	NN	O => statement	NN
terminating	VBG	O => termin	VB
Empty	JJ	O => Empty	JJ
statements	NNS	O => statement	NN
empty	JJ	O => empty	JJ
statement	NN	O => statement	NN
does	VBZ	O => doe	VB
nothing	NN	O => nothing	NN
Labeled	VBN	O => label	VB
statements	NNS	O => statement	NN
labeled	JJ	O => labeled	JJ
statement	NN	O => statement	NN
target	NN	O => target	NN
statement	NN	O => statement	NN
Expression	NN	O => Expression	NN
statements	NNS	O => statement	NN
exception	NN	O => exception	NN
specific	JJ	O => specific	JJ
built-in	JJ	O => built-in	JJ
functions	NNS	O => function	NN
function	NN	O => function	NN
method	NN	O => method	NN
calls	VBZ	O => call	VB
receive	NN	O => receive	NN
operations	NNS	O => operation	NN
appear	VBP	O => appear	VB
statement	NN	O => statement	NN
context	NN	O => context	NN
Such	JJ	O => Such	JJ
statements	NNS	O => statement	NN
parenthesized	VBN	O => parenthes	VB
following	VBG	O => follow	VB
built-in	JJ	O => built-in	JJ
functions	NNS	O => function	NN
permitted	VBN	O => permit	VB
statement	NN	O => statement	NN
context	NN	O => context	NN
Send	JJ	O => Send	JJ
statements	NNS	O => statement	NN
send	VB	O => send	VB
statement	NN	O => statement	NN
sends	VBZ	O => send	VB
value	NN	O => value	NN
channel	NN	O => channel	NN
channel	NN	O => channel	NN
expression	NN	O => expression	NN
channel	NN	O => channel	NN
type	NN	O => type	NN
channel	NN	O => channel	NN
direction	NN	O => direction	NN
permit	VB	O => permit	VB
send	VB	O => send	VB
operations	NNS	O => operation	NN
type	NN	O => type	NN
value	NN	O => value	NN
sent	VBN	O => sent	VB
assignable	JJ	O => assignable	JJ
channel	NN	O => channel	NN
element	NN	O => element	NN
type	NN	O => type	NN
channel	NN	O => channel	NN
value	NN	O => value	NN
expression	NN	O => expression	NN
evaluated	VBN	O => evalu	VB
communication	NN	O => communication	NN
begins	NNS	O => begin	NN
Communication	NN	O => Communication	NN
blocks	VBZ	O => block	VB
send	VB	O => send	VB
proceed	VB	O => proceed	VB
send	VB	O => send	VB
unbuffered	JJ	O => unbuffered	JJ
channel	NN	O => channel	NN
proceed	VB	O => proceed	VB
receiver	NN	O => receiver	NN
ready	JJ	O => ready	JJ
send	VB	O => send	VB
buffered	JJ	O => buffered	JJ
channel	NN	O => channel	NN
proceed	VB	O => proceed	VB
there	EX	O => there	EX
room	NN	O => room	NN
buffer	NN	O => buffer	NN
send	VB	O => send	VB
closed	JJ	O => closed	JJ
channel	NN	O => channel	NN
proceeds	NNS	O => proceed	NN
causing	VBG	O => caus	VB
run-time	JJ	O => run-time	JJ
panic	NN	O => panic	NN
send	VB	O => send	VB
channel	NN	O => channel	NN
blocks	VBZ	O => block	VB
forever	RB	O => forever	RB
IncDec	JJ	O => IncDec	JJ
statements	NNS	O => statement	NN
statements	NNS	O => statement	NN
increment	NN	O => increment	NN
decrement	JJ	O => decrement	JJ
operands	NNS	O => operand	NN
untyped	JJ	O => untyped	JJ
constant	JJ	O => constant	JJ
assignment	NN	O => assignment	NN
operand	NN	O => operand	NN
addressable	JJ	O => addressable	JJ
map	NN	O => map	NN
index	NN	O => index	NN
expression	NN	O => expression	NN
following	VBG	O => follow	VB
assignment	NN	O => assignment	NN
statements	NNS	O => statement	NN
semantically	RB	O => semantically	RB
equivalent	JJ	O => equivalent	JJ
Assignments	NNS	O => Assignment	NN
left-hand	JJ	O => left-hand	JJ
side	NN	O => side	NN
operand	NN	O => operand	NN
addressable	JJ	O => addressable	JJ
map	NN	O => map	NN
index	NN	O => index	NN
expression	NN	O => expression	NN
assignments	NNS	O => assignment	NN
blank	JJ	O => blank	JJ
identifier	NN	O => identifier	NN
Operands	NNS	O => Operand	NN
parenthesized	VBN	O => parenthes	VB
assignment	NN	O => assignment	NN
operation	NN	O => operation	NN
op	JJ	O => op	JJ
op	JJ	O => op	JJ
binary	JJ	O => binary	JJ
arithmetic	NN	O => arithmetic	NN
operator	NN	O => operator	NN
equivalent	NN	O => equivalent	NN
op	JJ	O => op	JJ
evaluates	VBZ	O => evalu	VB
once	RB	O => once	RB
op	JJ	O => op	JJ
construct	NN	O => construct	NN
single	JJ	O => single	JJ
token	NN	O => token	NN
assignment	NN	O => assignment	NN
operations	NNS	O => operation	NN
left-	JJ	O => left-	JJ
right-hand	JJ	O => right-hand	JJ
expression	NN	O => expression	NN
lists	NNS	O => list	NN
contain	VB	O => contain	VB
exactly	RB	O => exactly	RB
single-valued	JJ	O => single-valued	JJ
expression	NN	O => expression	NN
left-hand	JJ	O => left-hand	JJ
expression	NN	O => expression	NN
blank	JJ	O => blank	JJ
identifier	NN	O => identifier	NN
tuple	JJ	O => tuple	JJ
assignment	NN	O => assignment	NN
assigns	VBZ	O => assign	VB
individual	JJ	O => individual	JJ
elements	NNS	O => element	NN
multi-valued	JJ	O => multi-valued	JJ
operation	NN	O => operation	NN
list	NN	O => list	NN
variables	NNS	O => variable	NN
There	EX	O => There	EX
forms	NNS	O => form	NN
right	NN	O => right	NN
hand	NN	O => hand	NN
operand	NN	O => operand	NN
single	JJ	O => single	JJ
multi-valued	JJ	O => multi-valued	JJ
expression	NN	O => expression	NN
such	JJ	O => such	JJ
function	NN	O => function	NN
call	NN	O => call	NN
channel	NN	O => channel	NN
map	NN	O => map	NN
operation	NN	O => operation	NN
type	NN	O => type	NN
assertion	NN	O => assertion	NN
number	NN	O => number	NN
operands	NNS	O => operand	NN
left	NN	O => left	NN
hand	NN	O => hand	NN
side	NN	O => side	NN
match	VBP	O => match	VB
number	NN	O => number	NN
values	NNS	O => value	NN
instance	NN	O => instance	NN
function	NN	O => function	NN
returning	VBG	O => return	VB
values	NNS	O => value	NN
assigns	VBZ	O => assign	VB
value	NN	O => value	NN
second	JJ	O => second	JJ
second	JJ	O => second	JJ
form	NN	O => form	NN
number	NN	O => number	NN
operands	NNS	O => operand	NN
left	NN	O => left	NN
equal	VB	O => equal	VB
number	NN	O => number	NN
expressions	NNS	O => expression	NN
right	NN	O => right	NN
single-valued	JJ	O => single-valued	JJ
nth	JJ	O => nth	JJ
expression	NN	O => expression	NN
right	NN	O => right	NN
assigned	VBN	O => assign	VB
nth	JJ	O => nth	JJ
operand	NN	O => operand	NN
left	NN	O => left	NN
blank	JJ	O => blank	JJ
identifier	NN	O => identifier	NN
provides	VBZ	O => provid	VB
way	NN	O => way	NN
ignore	VB	O => ignore	VB
right-hand	JJ	O => right-hand	JJ
side	NN	O => side	NN
values	NNS	O => value	NN
assignment	NN	O => assignment	NN
assignment	NN	O => assignment	NN
proceeds	NNS	O => proceed	NN
phases	NNS	O => phase	NN
First	NNP	O => First	NNP
operands	NNS	O => operand	NN
index	NN	O => index	NN
expressions	NNS	O => expression	NN
pointer	NN	O => pointer	NN
indirections	NNS	O => indirection	NN
including	VBG	O => includ	VB
implicit	JJ	O => implicit	JJ
pointer	NN	O => pointer	NN
indirections	NNS	O => indirection	NN
selectors	NNS	O => selector	NN
left	NN	O => left	NN
expressions	NNS	O => expression	NN
right	NN	O => right	NN
all	PDT	O => all	PDT
evaluated	VBN	O => evalu	VB
usual	JJ	O => usual	JJ
order	NN	O => order	NN
Second	NNP	O => Second	NNP
assignments	NNS	O => assignment	NN
carried	VBN	O => carri	VB
left-to-right	JJ	O => left-to-right	JJ
order	NN	O => order	NN
assignments	NNS	O => assignment	NN
value	NN	O => value	NN
assignable	JJ	O => assignable	JJ
type	NN	O => type	NN
operand	NN	O => operand	NN
assigned	VBN	O => assign	VB
following	VBG	O => follow	VB
special	JJ	O => special	JJ
cases	NNS	O => case	NN
typed	JJ	O => typed	JJ
value	NN	O => value	NN
assigned	VBN	O => assign	VB
blank	JJ	O => blank	JJ
identifier	NN	O => identifier	NN
untyped	JJ	O => untyped	JJ
constant	JJ	O => constant	JJ
assigned	VBN	O => assign	VB
variable	NN	O => variable	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
blank	JJ	O => blank	JJ
identifier	NN	O => identifier	NN
constant	JJ	O => constant	JJ
implicitly	RB	O => implicitly	RB
converted	VBN	O => convert	VB
default	NN	O => default	NN
type	NN	O => type	NN
untyped	JJ	O => untyped	JJ
boolean	JJ	O => boolean	JJ
value	NN	O => value	NN
assigned	VBN	O => assign	VB
variable	NN	O => variable	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
blank	JJ	O => blank	JJ
identifier	NN	O => identifier	NN
implicitly	RB	O => implicitly	RB
converted	VBN	O => convert	VB
type	NN	O => type	NN
statements	NNS	O => statement	NN
statements	NNS	O => statement	NN
specify	VB	O => specify	VB
conditional	JJ	O => conditional	JJ
execution	NN	O => execution	NN
branches	NNS	O => branch	NN
according	VBG	O => accord	VB
value	NN	O => value	NN
boolean	JJ	O => boolean	JJ
expression	NN	O => expression	NN
expression	NN	O => expression	NN
evaluates	VBZ	O => evalu	VB
true	JJ	O => true	JJ
branch	NN	O => branch	NN
executed	VBN	O => execut	VB
otherwise	RB	O => otherwise	RB
present	JJ	O => present	JJ
else	RB	O => else	RB
branch	NN	O => branch	NN
executed	VBN	O => execut	VB
expression	NN	O => expression	NN
preceded	VBN	O => preced	VB
simple	NN	O => simple	NN
statement	NN	O => statement	NN
executes	VBZ	O => execut	VB
expression	NN	O => expression	NN
evaluated	VBN	O => evalu	VB
Switch	VB	O => Switch	VB
statements	NNS	O => statement	NN
Switch	NNP	B-GPE => Switch	NNP
statements	NNS	O => statement	NN
provide	VBP	O => provid	VB
multi-way	JJ	O => multi-way	JJ
execution	NN	O => execution	NN
expression	NN	O => expression	NN
type	NN	O => type	NN
specifier	NN	O => specifier	NN
compared	VBN	O => compar	VB
cases	NNS	O => case	NN
switch	NN	O => switch	NN
determine	VB	O => determine	VB
branch	NN	O => branch	NN
execute	VB	O => execute	VB
There	EX	O => There	EX
forms	NNS	O => form	NN
expression	NN	O => expression	NN
switches	VBZ	O => switch	VB
type	NN	O => type	NN
switches	NNS	O => switch	NN
expression	NN	O => expression	NN
switch	NN	O => switch	NN
cases	NNS	O => case	NN
contain	VB	O => contain	VB
expressions	NNS	O => expression	NN
compared	VBN	O => compar	VB
value	NN	O => value	NN
switch	VB	O => switch	VB
expression	NN	O => expression	NN
type	NN	O => type	NN
switch	NN	O => switch	NN
cases	NNS	O => case	NN
contain	VB	O => contain	VB
types	NNS	O => type	NN
compared	VBN	O => compar	VB
type	NN	O => type	NN
specially	RB	O => specially	RB
annotated	VBN	O => annot	VB
switch	VB	O => switch	VB
expression	NN	O => expression	NN
switch	VB	O => switch	VB
expression	NN	O => expression	NN
evaluated	VBN	O => evalu	VB
exactly	RB	O => exactly	RB
once	RB	O => once	RB
switch	VB	O => switch	VB
statement	NN	O => statement	NN
Expression	NN	O => Expression	NN
switches	VBZ	O => switch	VB
expression	NN	O => expression	NN
switch	NN	O => switch	NN
switch	VB	O => switch	VB
expression	NN	O => expression	NN
evaluated	VBN	O => evalu	VB
case	NN	O => case	NN
expressions	NNS	O => expression	NN
constants	NNS	O => constant	NN
evaluated	VBN	O => evalu	VB
left-to-right	JJ	O => left-to-right	JJ
top-to-bottom	JJ	O => top-to-bottom	JJ
equals	VBZ	O => equal	VB
switch	VB	O => switch	VB
expression	NN	O => expression	NN
triggers	NNS	O => trigger	NN
execution	NN	O => execution	NN
statements	NNS	O => statement	NN
associated	JJ	O => associated	JJ
case	NN	O => case	NN
other	JJ	O => other	JJ
cases	NNS	O => case	NN
skipped	VBN	O => skip	VB
case	NN	O => case	NN
matches	NNS	O => match	NN
there	EX	O => there	EX
default	NN	O => default	NN
case	NN	O => case	NN
statements	NNS	O => statement	NN
executed	VBN	O => execut	VB
There	EX	O => There	EX
most	JJS	O => most	JJS
default	NN	O => default	NN
case	NN	O => case	NN
appear	VBP	O => appear	VB
anywhere	RB	O => anywhere	RB
switch	NN	O => switch	NN
statement	NN	O => statement	NN
missing	JJ	O => missing	JJ
switch	VB	O => switch	VB
expression	NN	O => expression	NN
equivalent	NN	O => equivalent	NN
boolean	JJ	O => boolean	JJ
value	NN	O => value	NN
switch	VB	O => switch	VB
expression	NN	O => expression	NN
evaluates	VBZ	O => evalu	VB
untyped	JJ	O => untyped	JJ
constant	NN	O => constant	NN
implicitly	RB	O => implicitly	RB
converted	VBN	O => convert	VB
default	NN	O => default	NN
type	NN	O => type	NN
untyped	JJ	O => untyped	JJ
boolean	JJ	O => boolean	JJ
value	NN	O => value	NN
implicitly	RB	O => implicitly	RB
converted	VBN	O => convert	VB
type	NN	O => type	NN
predeclared	JJ	O => predeclared	JJ
untyped	JJ	O => untyped	JJ
value	NN	O => value	NN
cannot	VBP	O => cannot	VB
used	VBN	O => use	VB
switch	VB	O => switch	VB
expression	NN	O => expression	NN
case	NN	O => case	NN
expression	NN	O => expression	NN
untyped	JJ	O => untyped	JJ
implicitly	RB	O => implicitly	RB
converted	VBN	O => convert	VB
type	NN	O => type	NN
switch	VB	O => switch	VB
expression	NN	O => expression	NN
possibly	RB	O => possibly	RB
converted	VBN	O => convert	VB
case	NN	O => case	NN
expression	NN	O => expression	NN
value	NN	O => value	NN
switch	VB	O => switch	VB
expression	NN	O => expression	NN
valid	JJ	O => valid	JJ
comparison	NN	O => comparison	NN
other	JJ	O => other	JJ
words	NNS	O => word	NN
switch	VB	O => switch	VB
expression	NN	O => expression	NN
treated	VBN	O => treat	VB
were	VBD	O => were	VB
used	VBN	O => use	VB
declare	VB	O => declare	VB
initialize	VB	O => initialize	VB
temporary	JJ	O => temporary	JJ
variable	NN	O => variable	NN
explicit	JJ	O => explicit	JJ
type	NN	O => type	NN
value	NN	O => value	NN
case	NN	O => case	NN
expression	NN	O => expression	NN
tested	VBN	O => test	VB
equality	NN	O => equality	NN
case	NN	O => case	NN
default	NN	O => default	NN
clause	NN	O => clause	NN
last	JJ	O => last	JJ
non-empty	JJ	O => non-empty	JJ
statement	NN	O => statement	NN
possibly	RB	O => possibly	RB
labeled	VBN	O => label	VB
statement	NN	O => statement	NN
indicate	VB	O => indicate	VB
control	VBP	O => control	VB
flow	VB	O => flow	VB
end	NN	O => end	NN
clause	NN	O => clause	NN
statement	NN	O => statement	NN
next	JJ	O => next	JJ
clause	NN	O => clause	NN
Otherwise	VB	O => Otherwise	VB
control	VBP	O => control	VB
flows	VBZ	O => flow	VB
end	NN	O => end	NN
switch	NN	O => switch	NN
statement	NN	O => statement	NN
statement	NN	O => statement	NN
appear	VBP	O => appear	VB
last	JJ	O => last	JJ
statement	NN	O => statement	NN
all	PDT	O => all	PDT
last	JJ	O => last	JJ
clause	NN	O => clause	NN
expression	NN	O => expression	NN
switch	NN	O => switch	NN
switch	VB	O => switch	VB
expression	NN	O => expression	NN
preceded	VBN	O => preced	VB
simple	NN	O => simple	NN
statement	NN	O => statement	NN
executes	VBZ	O => execut	VB
expression	NN	O => expression	NN
evaluated	VBN	O => evalu	VB
Implementation	NNP	O => Implementation	NNP
restriction	NN	O => restriction	NN
compiler	NN	O => compiler	NN
disallow	VB	O => disallow	VB
multiple	NN	O => multiple	NN
case	NN	O => case	NN
expressions	NNS	O => expression	NN
evaluating	VBG	O => evalu	VB
constant	JJ	O => constant	JJ
instance	NN	O => instance	NN
current	JJ	O => current	JJ
compilers	NNS	O => compiler	NN
disallow	VB	O => disallow	VB
duplicate	NN	O => duplicate	NN
integer	NN	O => integer	NN
floating	VBG	O => float	VB
point	NN	O => point	NN
string	VBG	O => string	VB
constants	NNS	O => constant	NN
case	NN	O => case	NN
expressions	NNS	O => expression	NN
Type	NNP	B-PERSON => Type	NNP
switches	VBZ	O => switch	VB
type	NN	O => type	NN
switch	VB	O => switch	VB
compares	VBZ	O => compar	VB
types	NNS	O => type	NN
rather	RB	O => rather	RB
values	NNS	O => value	NN
otherwise	RB	O => otherwise	RB
similar	JJ	O => similar	JJ
expression	NN	O => expression	NN
switch	NN	O => switch	NN
marked	VBN	O => mark	VB
special	JJ	O => special	JJ
switch	VB	O => switch	VB
expression	NN	O => expression	NN
form	NN	O => form	NN
type	NN	O => type	NN
assertion	NN	O => assertion	NN
using	VBG	O => use	VB
reserved	VBN	O => reserv	VB
word	NN	O => word	NN
rather	RB	O => rather	RB
actual	JJ	O => actual	JJ
type	NN	O => type	NN
Cases	NNS	O => Case	NN
then	RB	O => then	RB
match	VBP	O => match	VB
actual	JJ	O => actual	JJ
types	NNS	O => type	NN
dynamic	JJ	O => dynamic	JJ
type	NN	O => type	NN
expression	NN	O => expression	NN
type	NN	O => type	NN
assertions	NNS	O => assertion	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
non-interface	JJ	O => non-interface	JJ
type	NN	O => type	NN
listed	VBN	O => list	VB
case	NN	O => case	NN
implement	VB	O => implement	VB
type	NN	O => type	NN
types	NNS	O => type	NN
listed	VBN	O => list	VB
cases	NNS	O => case	NN
type	NN	O => type	NN
switch	VB	O => switch	VB
all	PDT	O => all	PDT
different	JJ	O => different	JJ
TypeSwitchGuard	NNP	B-GPE => TypeSwitchGuard	NNP
include	VB	O => include	VB
short	JJ	O => short	JJ
variable	NN	O => variable	NN
declaration	NN	O => declaration	NN
form	NN	O => form	NN
used	VBN	O => use	VB
variable	NN	O => variable	NN
declared	VBN	O => declar	VB
end	NN	O => end	NN
TypeSwitchCase	NNP	O => TypeSwitchCase	NNP
implicit	JJ	O => implicit	JJ
block	NN	O => block	NN
clause	NN	O => clause	NN
clauses	NNS	O => clause	NN
case	NN	O => case	NN
listing	VBG	O => list	VB
exactly	RB	O => exactly	RB
type	NN	O => type	NN
variable	NN	O => variable	NN
type	NN	O => type	NN
otherwise	RB	O => otherwise	RB
variable	NN	O => variable	NN
type	NN	O => type	NN
expression	NN	O => expression	NN
TypeSwitchGuard	NNP	B-GPE => TypeSwitchGuard	NNP
Instead	RB	O => Instead	RB
type	NN	O => type	NN
case	NN	O => case	NN
predeclared	JJ	O => predeclared	JJ
identifier	NN	O => identifier	NN
case	NN	O => case	NN
selected	VBN	O => select	VB
expression	NN	O => expression	NN
TypeSwitchGuard	NNP	B-GPE => TypeSwitchGuard	NNP
interface	NN	O => interface	NN
value	NN	O => value	NN
There	EX	O => There	EX
most	JJS	O => most	JJS
case	NN	O => case	NN
Given	VBN	O => given	VB
expression	NN	O => expression	NN
type	NN	O => type	NN
following	VBG	O => follow	VB
type	NN	O => type	NN
switch	NN	O => switch	NN
rewritten	VBN	O => rewritten	VB
type	NN	O => type	NN
switch	VB	O => switch	VB
guard	NN	O => guard	NN
preceded	VBN	O => preced	VB
simple	NN	O => simple	NN
statement	NN	O => statement	NN
executes	VBZ	O => execut	VB
guard	NN	O => guard	NN
evaluated	VBN	O => evalu	VB
statement	NN	O => statement	NN
permitted	VBN	O => permit	VB
type	NN	O => type	NN
switch	NN	O => switch	NN
statements	NNS	O => statement	NN
statement	NN	O => statement	NN
specifies	VBZ	O => specifi	VB
repeated	JJ	O => repeated	JJ
execution	NN	O => execution	NN
block	NN	O => block	NN
There	EX	O => There	EX
forms	NNS	O => form	NN
iteration	NN	O => iteration	NN
controlled	VBN	O => control	VB
single	JJ	O => single	JJ
condition	NN	O => condition	NN
clause	NN	O => clause	NN
range	NN	O => range	NN
clause	NN	O => clause	NN
statements	NNS	O => statement	NN
single	JJ	O => single	JJ
condition	NN	O => condition	NN
simplest	JJS	O => simpl	JJ
form	NN	O => form	NN
statement	NN	O => statement	NN
specifies	VBZ	O => specifi	VB
repeated	JJ	O => repeated	JJ
execution	NN	O => execution	NN
block	NN	O => block	NN
long	RB	O => long	RB
boolean	JJ	O => boolean	JJ
condition	NN	O => condition	NN
evaluates	VBZ	O => evalu	VB
true	JJ	O => true	JJ
condition	NN	O => condition	NN
evaluated	VBN	O => evalu	VB
iteration	NN	O => iteration	NN
condition	NN	O => condition	NN
absent	JJ	O => absent	JJ
equivalent	NN	O => equivalent	NN
boolean	JJ	O => boolean	JJ
value	NN	O => value	NN
statements	NNS	O => statement	NN
clause	NN	O => clause	NN
statement	NN	O => statement	NN
ForClause	NNP	O => ForClause	NNP
also	RB	O => also	RB
controlled	VBN	O => control	VB
condition	NN	O => condition	NN
additionally	RB	O => additionally	RB
specify	VB	O => specify	VB
init	NN	O => init	NN
post	NN	O => post	NN
statement	NN	O => statement	NN
such	JJ	O => such	JJ
assignment	NN	O => assignment	NN
increment	NN	O => increment	NN
decrement	JJ	O => decrement	JJ
statement	NN	O => statement	NN
init	NN	O => init	NN
statement	NN	O => statement	NN
short	JJ	O => short	JJ
variable	NN	O => variable	NN
declaration	NN	O => declaration	NN
post	NN	O => post	NN
statement	NN	O => statement	NN
Variables	NNS	O => Variable	NN
declared	VBN	O => declar	VB
init	NN	O => init	NN
statement	NN	O => statement	NN
re-used	JJ	O => re-used	JJ
iteration	NN	O => iteration	NN
non-empty	JJ	O => non-empty	JJ
init	NN	O => init	NN
statement	NN	O => statement	NN
executed	VBN	O => execut	VB
once	RB	O => once	RB
evaluating	VBG	O => evalu	VB
condition	NN	O => condition	NN
iteration	NN	O => iteration	NN
post	NN	O => post	NN
statement	NN	O => statement	NN
executed	VBN	O => execut	VB
execution	NN	O => execution	NN
block	NN	O => block	NN
block	NN	O => block	NN
was	VBD	O => was	VB
executed	VBN	O => execut	VB
element	NN	O => element	NN
ForClause	NNP	O => ForClause	NNP
empty	JJ	O => empty	JJ
semicolons	NNS	O => semicolon	NN
required	VBN	O => requir	VB
there	EX	O => there	EX
condition	NN	O => condition	NN
condition	NN	O => condition	NN
absent	JJ	O => absent	JJ
equivalent	NN	O => equivalent	NN
boolean	JJ	O => boolean	JJ
value	NN	O => value	NN
statements	NNS	O => statement	NN
clause	NN	O => clause	NN
statement	NN	O => statement	NN
range	NN	O => range	NN
clause	NN	O => clause	NN
iterates	VBZ	O => iter	VB
all	PDT	O => all	PDT
entries	NNS	O => entry	NN
array	VB	O => array	VB
slice	NN	O => slice	NN
string	VBG	O => string	VB
map	NN	O => map	NN
values	NNS	O => value	NN
received	JJ	O => received	JJ
channel	NN	O => channel	NN
entry	NN	O => entry	NN
assigns	VBZ	O => assign	VB
iteration	NN	O => iteration	NN
values	NNS	O => value	NN
corresponding	JJ	O => corresponding	JJ
iteration	NN	O => iteration	NN
variables	NNS	O => variable	NN
present	VB	O => present	VB
then	RB	O => then	RB
executes	VBZ	O => execut	VB
block	NN	O => block	NN
expression	NN	O => expression	NN
right	NN	O => right	NN
range	NN	O => range	NN
clause	NN	O => clause	NN
called	VBD	O => call	VB
range	NN	O => range	NN
expression	NN	O => expression	NN
array	VB	O => array	VB
pointer	NN	O => pointer	NN
array	VB	O => array	VB
slice	NN	O => slice	NN
string	NN	O => string	NN
map	NN	O => map	NN
channel	NN	O => channel	NN
permitting	VBG	O => permit	VB
receive	NN	O => receive	NN
operations	NNS	O => operation	NN
assignment	NN	O => assignment	NN
present	VB	O => present	VB
operands	NNS	O => operand	NN
left	NN	O => left	NN
addressable	JJ	O => addressable	JJ
map	NN	O => map	NN
index	NN	O => index	NN
expressions	NNS	O => expression	NN
denote	VBP	O => denot	VB
iteration	NN	O => iteration	NN
variables	NNS	O => variable	NN
range	NN	O => range	NN
expression	NN	O => expression	NN
channel	NN	O => channel	NN
most	JJS	O => most	JJS
iteration	NN	O => iteration	NN
variable	NN	O => variable	NN
permitted	VBN	O => permit	VB
otherwise	RB	O => otherwise	RB
there	EX	O => there	EX
last	JJ	O => last	JJ
iteration	NN	O => iteration	NN
variable	NN	O => variable	NN
blank	JJ	O => blank	JJ
identifier	NN	O => identifier	NN
range	NN	O => range	NN
clause	NN	O => clause	NN
equivalent	NN	O => equivalent	NN
clause	NN	O => clause	NN
identifier	NN	O => identifier	NN
range	NN	O => range	NN
expression	NN	O => expression	NN
evaluated	VBN	O => evalu	VB
once	RB	O => once	RB
beginning	VBG	O => begin	VB
loop	NN	O => loop	NN
exception	NN	O => exception	NN
most	JJS	O => most	JJS
iteration	NN	O => iteration	NN
variable	NN	O => variable	NN
present	VB	O => present	VB
constant	NN	O => constant	NN
range	NN	O => range	NN
expression	NN	O => expression	NN
evaluated	VBN	O => evalu	VB
Function	NNP	O => Function	NNP
calls	VBZ	O => call	VB
left	NN	O => left	NN
evaluated	VBN	O => evalu	VB
once	RB	O => once	RB
iteration	NN	O => iteration	NN
iteration	NN	O => iteration	NN
iteration	NN	O => iteration	NN
values	NNS	O => value	NN
produced	VBN	O => produc	VB
follows	VBZ	O => follow	VB
respective	JJ	O => respective	JJ
iteration	NN	O => iteration	NN
variables	NNS	O => variable	NN
present	JJ	O => present	JJ
array	VB	O => array	VB
pointer	NN	O => pointer	NN
array	VB	O => array	VB
slice	NN	O => slice	NN
value	NN	O => value	NN
index	NN	O => index	NN
iteration	NN	O => iteration	NN
values	NNS	O => value	NN
produced	VBN	O => produc	VB
increasing	VBG	O => increas	VB
order	NN	O => order	NN
starting	VBG	O => start	VB
element	NN	O => element	NN
index	NN	O => index	NN
most	JJS	O => most	JJS
iteration	NN	O => iteration	NN
variable	NN	O => variable	NN
present	JJ	O => present	JJ
range	NN	O => range	NN
loop	NN	O => loop	NN
produces	VBZ	O => produc	VB
iteration	NN	O => iteration	NN
values	NNS	O => value	NN
does	VBZ	O => doe	VB
index	NN	O => index	NN
array	NN	O => array	NN
slice	NN	O => slice	NN
slice	NN	O => slice	NN
number	NN	O => number	NN
iterations	NNS	O => iteration	NN
string	VBG	O => string	VB
value	NN	O => value	NN
range	NN	O => range	NN
clause	NN	O => clause	NN
iterates	VBZ	O => iter	VB
Unicode	NNP	B-GPE => Unicode	NNP
code	NN	O => code	NN
points	NNS	O => point	NN
string	VBG	O => string	VB
starting	VBG	O => start	VB
byte	NN	O => byte	NN
index	NN	O => index	NN
successive	JJ	O => successive	JJ
iterations	NNS	O => iteration	NN
index	NN	O => index	NN
value	NN	O => value	NN
index	NN	O => index	NN
byte	NN	O => byte	NN
successive	JJ	O => successive	JJ
UTF-8-encoded	JJ	O => UTF-8-encoded	JJ
code	NN	O => code	NN
points	NNS	O => point	NN
string	NN	O => string	NN
second	JJ	O => second	JJ
value	NN	O => value	NN
type	NN	O => type	NN
value	NN	O => value	NN
corresponding	JJ	O => corresponding	JJ
code	NN	O => code	NN
point	NN	O => point	NN
iteration	NN	O => iteration	NN
encounters	VBZ	O => encount	VB
invalid	JJ	O => invalid	JJ
UTF-8	JJ	O => UTF-8	JJ
sequence	NN	O => sequence	NN
second	JJ	O => second	JJ
value	NN	O => value	NN
Unicode	NNP	B-GPE => Unicode	NNP
replacement	NN	O => replacement	NN
character	NN	O => character	NN
next	JJ	O => next	JJ
iteration	NN	O => iteration	NN
advance	VB	O => advance	VB
single	JJ	O => single	JJ
byte	NN	O => byte	NN
string	NN	O => string	NN
iteration	NN	O => iteration	NN
order	NN	O => order	NN
maps	NNS	O => map	NN
specified	VBN	O => specifi	VB
guaranteed	VBN	O => guarante	VB
iteration	NN	O => iteration	NN
next	JJ	O => next	JJ
map	NN	O => map	NN
entry	NN	O => entry	NN
yet	RB	O => yet	RB
been	VBN	O => been	VB
reached	VBD	O => reach	VB
removed	VBN	O => remov	VB
iteration	NN	O => iteration	NN
corresponding	JJ	O => corresponding	JJ
iteration	NN	O => iteration	NN
value	NN	O => value	NN
produced	VBN	O => produc	VB
map	NN	O => map	NN
entry	NN	O => entry	NN
created	VBN	O => creat	VB
iteration	NN	O => iteration	NN
entry	NN	O => entry	NN
produced	VBN	O => produc	VB
iteration	NN	O => iteration	NN
skipped	VBN	O => skip	VB
choice	NN	O => choice	NN
vary	VB	O => vary	VB
entry	NN	O => entry	NN
created	VBN	O => creat	VB
iteration	NN	O => iteration	NN
next	JJ	O => next	JJ
map	NN	O => map	NN
number	NN	O => number	NN
iterations	NNS	O => iteration	NN
channels	NNS	O => channel	NN
iteration	NN	O => iteration	NN
values	NNS	O => value	NN
produced	VBN	O => produc	VB
successive	JJ	O => successive	JJ
values	NNS	O => value	NN
sent	VBN	O => sent	VB
channel	NN	O => channel	NN
channel	NN	O => channel	NN
closed	VBN	O => close	VB
channel	NN	O => channel	NN
range	NN	O => range	NN
expression	NN	O => expression	NN
blocks	VBZ	O => block	VB
forever	RB	O => forever	RB
iteration	NN	O => iteration	NN
values	NNS	O => value	NN
assigned	VBN	O => assign	VB
respective	JJ	O => respective	JJ
iteration	NN	O => iteration	NN
variables	NNS	O => variable	NN
assignment	NN	O => assignment	NN
statement	NN	O => statement	NN
iteration	NN	O => iteration	NN
variables	NNS	O => variable	NN
declared	VBN	O => declar	VB
range	NN	O => range	NN
clause	NN	O => clause	NN
using	VBG	O => use	VB
form	NN	O => form	NN
short	JJ	O => short	JJ
variable	NN	O => variable	NN
declaration	NN	O => declaration	NN
case	NN	O => case	NN
types	NNS	O => type	NN
set	NN	O => set	NN
types	NNS	O => type	NN
respective	JJ	O => respective	JJ
iteration	NN	O => iteration	NN
values	NNS	O => value	NN
scope	NN	O => scope	NN
block	NN	O => block	NN
statement	NN	O => statement	NN
re-used	JJ	O => re-used	JJ
iteration	NN	O => iteration	NN
iteration	NN	O => iteration	NN
variables	NNS	O => variable	NN
declared	VBN	O => declar	VB
statement	NN	O => statement	NN
execution	NN	O => execution	NN
values	NNS	O => value	NN
last	JJ	O => last	JJ
iteration	NN	O => iteration	NN
Go	NNP	O => Go	NNP
statements	NNS	O => statement	NN
go	VBP	O => go	VB
statement	NN	O => statement	NN
starts	VBZ	O => start	VB
execution	NN	O => execution	NN
function	NN	O => function	NN
call	NN	O => call	NN
independent	JJ	O => independent	JJ
concurrent	JJ	O => concurrent	JJ
thread	NN	O => thread	NN
control	NN	O => control	NN
goroutine	NN	O => goroutine	NN
address	NN	O => address	NN
space	NN	O => space	NN
expression	NN	O => expression	NN
function	NN	O => function	NN
method	NN	O => method	NN
call	NN	O => call	NN
cannot	VBP	O => cannot	VB
parenthesized	VBN	O => parenthes	VB
Calls	VBZ	O => call	VB
built-in	JJ	O => built-in	JJ
functions	NNS	O => function	NN
restricted	VBN	O => restrict	VB
expression	NN	O => expression	NN
statements	NNS	O => statement	NN
function	NN	O => function	NN
value	NN	O => value	NN
parameters	NNS	O => parameter	NN
evaluated	VBN	O => evalu	VB
usual	JJ	O => usual	JJ
calling	VBG	O => call	VB
goroutine	NN	O => goroutine	NN
regular	JJ	O => regular	JJ
call	NN	O => call	NN
program	NN	O => program	NN
execution	NN	O => execution	NN
does	VBZ	O => doe	VB
wait	VB	O => wait	VB
invoked	VBN	O => invok	VB
function	NN	O => function	NN
complete	VB	O => complete	VB
Instead	RB	O => Instead	RB
function	NN	O => function	NN
begins	VBZ	O => begin	VB
executing	VBG	O => execut	VB
independently	RB	O => independently	RB
new	JJ	O => new	JJ
goroutine	NN	O => goroutine	NN
function	NN	O => function	NN
terminates	VBZ	O => termin	VB
goroutine	NN	O => goroutine	NN
also	RB	O => also	RB
terminates	VBZ	O => termin	VB
function	NN	O => function	NN
return	VB	O => return	VB
values	NNS	O => value	NN
discarded	VBN	O => discard	VB
function	NN	O => function	NN
completes	VBZ	O => complet	VB
Select	JJ	O => Select	JJ
statements	NNS	O => statement	NN
select	JJ	O => select	JJ
statement	NN	O => statement	NN
chooses	VBZ	O => choos	VB
set	NN	O => set	NN
possible	JJ	O => possible	JJ
send	VB	O => send	VB
receive	NN	O => receive	NN
operations	NNS	O => operation	NN
proceed	VB	O => proceed	VB
looks	VBZ	O => look	VB
similar	JJ	O => similar	JJ
switch	NN	O => switch	NN
statement	NN	O => statement	NN
cases	NNS	O => case	NN
all	PDT	O => all	PDT
referring	VBG	O => refer	VB
communication	NN	O => communication	NN
operations	NNS	O => operation	NN
case	NN	O => case	NN
RecvStmt	NNP	O => RecvStmt	NNP
assign	VB	O => assign	VB
result	NN	O => result	NN
RecvExpr	NNP	B-GPE => RecvExpr	NNP
variables	NNS	O => variable	NN
declared	VBN	O => declar	VB
using	VBG	O => use	VB
short	JJ	O => short	JJ
variable	NN	O => variable	NN
declaration	NN	O => declaration	NN
RecvExpr	NNP	B-GPE => RecvExpr	NNP
possibly	RB	O => possibly	RB
parenthesized	VBN	O => parenthes	VB
receive	NN	O => receive	NN
operation	NN	O => operation	NN
There	EX	O => There	EX
most	JJS	O => most	JJS
default	NN	O => default	NN
case	NN	O => case	NN
appear	VBP	O => appear	VB
anywhere	RB	O => anywhere	RB
list	NN	O => list	NN
cases	NNS	O => case	NN
Execution	NN	O => Execution	NN
select	JJ	O => select	JJ
statement	NN	O => statement	NN
proceeds	NNS	O => proceed	NN
several	JJ	O => several	JJ
steps	NNS	O => step	NN
all	PDT	O => all	PDT
cases	NNS	O => case	NN
statement	NN	O => statement	NN
channel	NN	O => channel	NN
operands	NNS	O => operand	NN
receive	NN	O => receive	NN
operations	NNS	O => operation	NN
channel	NN	O => channel	NN
right-hand-side	JJ	O => right-hand-side	JJ
expressions	NNS	O => expression	NN
send	VB	O => send	VB
statements	NNS	O => statement	NN
evaluated	VBN	O => evalu	VB
exactly	RB	O => exactly	RB
once	RB	O => once	RB
source	NN	O => source	NN
order	NN	O => order	NN
entering	VBG	O => enter	VB
select	JJ	O => select	JJ
statement	NN	O => statement	NN
result	NN	O => result	NN
set	NN	O => set	NN
channels	VB	O => channels	VB
receive	NN	O => receive	NN
send	VB	O => send	VB
corresponding	JJ	O => corresponding	JJ
values	NNS	O => value	NN
send	VB	O => send	VB
side	NN	O => side	NN
effects	NNS	O => effect	NN
evaluation	NN	O => evaluation	NN
occur	VB	O => occur	VB
irrespective	NN	O => irrespective	NN
communication	NN	O => communication	NN
operation	NN	O => operation	NN
selected	VBN	O => select	VB
proceed	VB	O => proceed	VB
Expressions	NNS	O => Expression	NN
left-hand	JJ	O => left-hand	JJ
side	NN	O => side	NN
RecvStmt	NNP	O => RecvStmt	NNP
short	JJ	O => short	JJ
variable	NN	O => variable	NN
declaration	NN	O => declaration	NN
assignment	NN	O => assignment	NN
yet	RB	O => yet	RB
evaluated	VBN	O => evalu	VB
more	JJR	O => more	JJR
communications	NNS	O => communication	NN
proceed	VB	O => proceed	VB
single	JJ	O => single	JJ
proceed	VB	O => proceed	VB
chosen	VBN	O => chosen	VB
uniform	JJ	O => uniform	JJ
pseudo-random	JJ	O => pseudo-random	JJ
selection	NN	O => selection	NN
Otherwise	RB	O => Otherwise	RB
there	EX	O => there	EX
default	NN	O => default	NN
case	NN	O => case	NN
case	NN	O => case	NN
chosen	VBN	O => chosen	VB
there	EX	O => there	EX
default	NN	O => default	NN
case	NN	O => case	NN
select	JJ	O => select	JJ
statement	NN	O => statement	NN
blocks	VBZ	O => block	VB
least	JJS	O => least	JJS
communications	NNS	O => communication	NN
proceed	VB	O => proceed	VB
selected	VBN	O => select	VB
case	NN	O => case	NN
default	NN	O => default	NN
case	NN	O => case	NN
respective	JJ	O => respective	JJ
communication	NN	O => communication	NN
operation	NN	O => operation	NN
executed	VBN	O => execut	VB
selected	VBN	O => select	VB
case	NN	O => case	NN
RecvStmt	NNP	O => RecvStmt	NNP
short	JJ	O => short	JJ
variable	NN	O => variable	NN
declaration	NN	O => declaration	NN
assignment	NN	O => assignment	NN
left-hand	JJ	O => left-hand	JJ
side	NN	O => side	NN
expressions	NNS	O => expression	NN
evaluated	VBN	O => evalu	VB
received	JJ	O => received	JJ
value	NN	O => value	NN
values	NNS	O => value	NN
assigned	VBN	O => assign	VB
statement	NN	O => statement	NN
list	NN	O => list	NN
selected	VBN	O => select	VB
case	NN	O => case	NN
executed	VBN	O => execut	VB
communication	NN	O => communication	NN
channels	VB	O => channels	VB
never	RB	O => never	RB
proceed	VB	O => proceed	VB
select	NN	O => select	NN
channels	VB	O => channels	VB
default	NN	O => default	NN
case	NN	O => case	NN
blocks	VBZ	O => block	VB
forever	RB	O => forever	RB
Return	NNP	O => Return	NNP
statements	NNS	O => statement	NN
return	NN	O => return	NN
statement	NN	O => statement	NN
function	NN	O => function	NN
terminates	NNS	O => terminate	NN
execution	NN	O => execution	NN
optionally	RB	O => optionally	RB
provides	VBZ	O => provid	VB
more	JJR	O => more	JJR
result	NN	O => result	NN
values	NNS	O => value	NN
functions	NNS	O => function	NN
deferred	JJ	O => deferred	JJ
executed	VBN	O => execut	VB
returns	VBZ	O => return	VB
caller	NN	O => caller	NN
function	NN	O => function	NN
result	NN	O => result	NN
type	NN	O => type	NN
return	NN	O => return	NN
statement	NN	O => statement	NN
specify	VB	O => specify	VB
result	NN	O => result	NN
values	NNS	O => value	NN
There	EX	O => There	EX
ways	NNS	O => way	NN
return	VB	O => return	VB
values	NNS	O => value	NN
function	NN	O => function	NN
result	NN	O => result	NN
type	NN	O => type	NN
return	VB	O => return	VB
value	NN	O => value	NN
values	NNS	O => value	NN
explicitly	RB	O => explicitly	RB
listed	VBN	O => list	VB
return	NN	O => return	NN
statement	NN	O => statement	NN
expression	NN	O => expression	NN
single-valued	JJ	O => single-valued	JJ
assignable	JJ	O => assignable	JJ
corresponding	JJ	O => corresponding	JJ
element	NN	O => element	NN
function	NN	O => function	NN
result	NN	O => result	NN
type	NN	O => type	NN
expression	NN	O => expression	NN
list	NN	O => list	NN
return	NN	O => return	NN
statement	NN	O => statement	NN
single	JJ	O => single	JJ
call	NN	O => call	NN
multi-valued	JJ	O => multi-valued	JJ
function	NN	O => function	NN
effect	NN	O => effect	NN
value	NN	O => value	NN
returned	VBN	O => return	VB
function	NN	O => function	NN
were	VBD	O => were	VB
assigned	VBN	O => assign	VB
temporary	JJ	O => temporary	JJ
variable	NN	O => variable	NN
type	NN	O => type	NN
respective	JJ	O => respective	JJ
value	NN	O => value	NN
followed	VBN	O => follow	VB
return	NN	O => return	NN
statement	NN	O => statement	NN
listing	VBG	O => list	VB
variables	NNS	O => variable	NN
point	NN	O => point	NN
rules	NNS	O => rule	NN
previous	JJ	O => previous	JJ
case	NN	O => case	NN
apply	RB	O => apply	RB
expression	NN	O => expression	NN
list	NN	O => list	NN
empty	JJ	O => empty	JJ
function	NN	O => function	NN
result	NN	O => result	NN
type	NN	O => type	NN
specifies	VBZ	O => specifi	VB
names	VBZ	O => name	VB
result	NN	O => result	NN
parameters	NNS	O => parameter	NN
result	NN	O => result	NN
parameters	NNS	O => parameter	NN
act	VBP	O => act	VB
ordinary	JJ	O => ordinary	JJ
local	JJ	O => local	JJ
variables	NNS	O => variable	NN
function	NN	O => function	NN
assign	VB	O => assign	VB
values	NNS	O => value	NN
necessary	JJ	O => necessary	JJ
return	NN	O => return	NN
statement	NN	O => statement	NN
returns	VBZ	O => return	VB
values	NNS	O => value	NN
variables	NNS	O => variable	NN
Regardless	NNP	O => Regardless	NNP
declared	VBN	O => declar	VB
all	PDT	O => all	PDT
result	NN	O => result	NN
values	NNS	O => value	NN
initialized	VBN	O => initi	VB
values	NNS	O => value	NN
type	NN	O => type	NN
entry	NN	O => entry	NN
function	NN	O => function	NN
return	NN	O => return	NN
statement	NN	O => statement	NN
specifies	VBZ	O => specifi	VB
results	NNS	O => result	NN
sets	VBZ	O => set	VB
result	NN	O => result	NN
parameters	NNS	O => parameter	NN
deferred	JJ	O => deferred	JJ
functions	NNS	O => function	NN
executed	VBN	O => execut	VB
Implementation	NNP	O => Implementation	NNP
restriction	NN	O => restriction	NN
compiler	NN	O => compiler	NN
disallow	VB	O => disallow	VB
empty	JJ	O => empty	JJ
expression	NN	O => expression	NN
list	NN	O => list	NN
return	NN	O => return	NN
statement	NN	O => statement	NN
different	JJ	O => different	JJ
entity	NN	O => entity	NN
constant	JJ	O => constant	JJ
type	NN	O => type	NN
variable	JJ	O => variable	JJ
result	NN	O => result	NN
parameter	NN	O => parameter	NN
scope	NN	O => scope	NN
place	NN	O => place	NN
return	NN	O => return	NN
Break	NNP	O => Break	NNP
statements	NNS	O => statement	NN
break	NN	O => break	NN
statement	NN	O => statement	NN
terminates	NNS	O => terminate	NN
execution	NN	O => execution	NN
innermost	NN	O => innermost	NN
switch	NN	O => switch	NN
select	JJ	O => select	JJ
statement	NN	O => statement	NN
function	NN	O => function	NN
there	EX	O => there	EX
label	NN	O => label	NN
enclosing	VBG	O => enclos	VB
switch	NN	O => switch	NN
select	JJ	O => select	JJ
statement	NN	O => statement	NN
execution	NN	O => execution	NN
terminates	VBZ	O => termin	VB
Continue	NNP	O => Continue	NNP
statements	NNS	O => statement	NN
continue	NN	O => continue	NN
statement	NN	O => statement	NN
begins	VBZ	O => begin	VB
next	JJ	O => next	JJ
iteration	NN	O => iteration	NN
innermost	NN	O => innermost	NN
loop	NN	O => loop	NN
post	NN	O => post	NN
statement	NN	O => statement	NN
loop	NN	O => loop	NN
function	NN	O => function	NN
there	EX	O => there	EX
label	NN	O => label	NN
enclosing	VBG	O => enclos	VB
statement	NN	O => statement	NN
execution	NN	O => execution	NN
advances	NNS	O => advance	NN
Goto	NNP	O => Goto	NNP
statements	NNS	O => statement	NN
goto	NN	O => goto	NN
statement	NN	O => statement	NN
transfers	NNS	O => transfer	NN
control	VBP	O => control	VB
statement	NN	O => statement	NN
corresponding	JJ	O => corresponding	JJ
label	NN	O => label	NN
function	NN	O => function	NN
Executing	VBG	O => execut	VB
goto	NN	O => goto	NN
statement	NN	O => statement	NN
cause	VB	O => cause	VB
variables	NNS	O => variable	NN
come	VB	O => come	VB
scope	NN	O => scope	NN
were	VBD	O => were	VB
already	RB	O => already	RB
scope	NN	O => scope	NN
point	NN	O => point	NN
goto	NN	O => goto	NN
instance	NN	O => instance	NN
example	NN	O => example	NN
erroneous	JJ	O => erroneous	JJ
jump	NN	O => jump	NN
label	NN	O => label	NN
skips	PDT	O => skips	PDT
creation	NN	O => creation	NN
goto	NN	O => goto	NN
statement	NN	O => statement	NN
block	NN	O => block	NN
cannot	VBP	O => cannot	VB
jump	NN	O => jump	NN
label	NN	O => label	NN
block	NN	O => block	NN
instance	NN	O => instance	NN
example	NN	O => example	NN
erroneous	JJ	O => erroneous	JJ
label	NN	O => label	NN
statement	NN	O => statement	NN
block	NN	O => block	NN
statements	NNS	O => statement	NN
statement	NN	O => statement	NN
transfers	NNS	O => transfer	NN
control	VBP	O => control	VB
statement	NN	O => statement	NN
next	JJ	O => next	JJ
case	NN	O => case	NN
clause	NN	O => clause	NN
expression	NN	O => expression	NN
switch	NN	O => switch	NN
statement	NN	O => statement	NN
used	VBN	O => use	VB
final	JJ	O => final	JJ
non-empty	JJ	O => non-empty	JJ
statement	NN	O => statement	NN
such	JJ	O => such	JJ
clause	NN	O => clause	NN
Defer	NNP	O => Defer	NNP
statements	NNS	O => statement	NN
defer	NN	O => defer	NN
statement	NN	O => statement	NN
invokes	VBZ	O => invok	VB
function	NN	O => function	NN
execution	NN	O => execution	NN
deferred	JJ	O => deferred	JJ
moment	NN	O => moment	NN
surrounding	VBG	O => surround	VB
function	NN	O => function	NN
returns	NNS	O => return	NN
surrounding	VBG	O => surround	VB
function	NN	O => function	NN
executed	VBN	O => execut	VB
return	VB	O => return	VB
statement	NN	O => statement	NN
reached	VBD	O => reach	VB
end	NN	O => end	NN
function	NN	O => function	NN
body	NN	O => body	NN
corresponding	JJ	O => corresponding	JJ
goroutine	NN	O => goroutine	NN
panicking	NN	O => panicking	NN
expression	NN	O => expression	NN
function	NN	O => function	NN
method	NN	O => method	NN
call	NN	O => call	NN
cannot	VBP	O => cannot	VB
parenthesized	VBN	O => parenthes	VB
Calls	VBZ	O => call	VB
built-in	JJ	O => built-in	JJ
functions	NNS	O => function	NN
restricted	VBN	O => restrict	VB
expression	NN	O => expression	NN
statements	NNS	O => statement	NN
time	NN	O => time	NN
defer	NN	O => defer	NN
statement	NN	O => statement	NN
executes	NNS	O => execute	NN
function	NN	O => function	NN
value	NN	O => value	NN
parameters	NNS	O => parameter	NN
call	NN	O => call	NN
evaluated	VBN	O => evalu	VB
usual	JJ	O => usual	JJ
saved	VBD	O => save	VB
anew	RB	O => anew	RB
actual	JJ	O => actual	JJ
function	NN	O => function	NN
invoked	VBN	O => invok	VB
Instead	RB	O => Instead	RB
deferred	JJ	O => deferred	JJ
functions	NNS	O => function	NN
invoked	VBN	O => invok	VB
immediately	RB	O => immediately	RB
surrounding	VBG	O => surround	VB
function	NN	O => function	NN
returns	NNS	O => return	NN
reverse	NN	O => reverse	NN
order	NN	O => order	NN
were	VBD	O => were	VB
deferred	VBN	O => defer	VB
surrounding	VBG	O => surround	VB
function	NN	O => function	NN
returns	VBZ	O => return	VB
explicit	JJ	O => explicit	JJ
return	VB	O => return	VB
statement	NN	O => statement	NN
deferred	JJ	O => deferred	JJ
functions	NNS	O => function	NN
executed	VBN	O => execut	VB
result	NN	O => result	NN
parameters	NNS	O => parameter	NN
set	NN	O => set	NN
return	VB	O => return	VB
statement	NN	O => statement	NN
function	NN	O => function	NN
returns	VBZ	O => return	VB
caller	NN	O => caller	NN
deferred	JJ	O => deferred	JJ
function	NN	O => function	NN
value	NN	O => value	NN
evaluates	VBZ	O => evalu	VB
execution	NN	O => execution	NN
panics	NNS	O => panic	NN
function	NN	O => function	NN
invoked	VBN	O => invok	VB
defer	NN	O => defer	NN
statement	NN	O => statement	NN
executed	VBN	O => execut	VB
instance	NN	O => instance	NN
deferred	JJ	O => deferred	JJ
function	NN	O => function	NN
function	NN	O => function	NN
literal	NN	O => literal	NN
surrounding	VBG	O => surround	VB
function	NN	O => function	NN
named	VBN	O => name	VB
result	NN	O => result	NN
parameters	NNS	O => parameter	NN
scope	NN	O => scope	NN
literal	JJ	O => literal	JJ
deferred	JJ	O => deferred	JJ
function	NN	O => function	NN
access	NN	O => access	NN
modify	VB	O => modify	VB
result	NN	O => result	NN
parameters	NNS	O => parameter	NN
returned	VBN	O => return	VB
deferred	JJ	O => deferred	JJ
function	NN	O => function	NN
return	VB	O => return	VB
values	NNS	O => value	NN
discarded	VBN	O => discard	VB
function	NN	O => function	NN
completes	VBZ	O => complet	VB
See	NNP	B-PERSON => See	NNP
also	RB	O => also	RB
section	NN	O => section	NN
handling	VBG	O => handl	VB
panics	NNS	O => panic	NN
Built-in	JJ	O => Built-in	JJ
functions	NNS	O => function	NN
Built-in	JJ	O => Built-in	JJ
functions	NNS	O => function	NN
predeclared	VBN	O => predeclar	VB
called	VBD	O => call	VB
other	JJ	O => other	JJ
function	NN	O => function	NN
accept	VB	O => accept	VB
type	NN	O => type	NN
instead	RB	O => instead	RB
expression	NN	O => expression	NN
argument	NN	O => argument	NN
built-in	JJ	O => built-in	JJ
functions	NNS	O => function	NN
do	VBP	O => do	VB
have	VB	O => have	VB
standard	VBN	O => standard	VB
Go	NNP	O => Go	NNP
types	NNS	O => type	NN
so	RB	O => so	RB
appear	VBP	O => appear	VB
call	NN	O => call	NN
expressions	NNS	O => expression	NN
cannot	VBP	O => cannot	VB
used	VBN	O => use	VB
function	NN	O => function	NN
values	NNS	O => value	NN
Close	NNP	O => Close	NNP
channel	NN	O => channel	NN
built-in	JJ	O => built-in	JJ
function	NN	O => function	NN
records	NNS	O => record	NN
more	JJR	O => more	JJR
values	NNS	O => value	NN
sent	VBN	O => sent	VB
channel	NN	O => channel	NN
error	NN	O => error	NN
receive-only	JJ	O => receive-only	JJ
channel	NN	O => channel	NN
Sending	VBG	O => send	VB
closing	VBG	O => close	VB
closed	JJ	O => closed	JJ
channel	NN	O => channel	NN
causes	VBZ	O => caus	VB
run-time	JJ	O => run-time	JJ
panic	NN	O => panic	NN
Closing	VBG	O => close	VB
nil	JJ	O => nil	JJ
channel	NN	O => channel	NN
also	RB	O => also	RB
causes	VBZ	O => caus	VB
run-time	JJ	O => run-time	JJ
panic	NN	O => panic	NN
calling	VBG	O => call	VB
previously	RB	O => previously	RB
sent	VBN	O => sent	VB
values	NNS	O => value	NN
have	VB	O => have	VB
been	VBN	O => been	VB
received	VBN	O => receiv	VB
receive	NN	O => receive	NN
operations	NNS	O => operation	NN
return	VB	O => return	VB
value	NN	O => value	NN
channel	NN	O => channel	NN
type	NN	O => type	NN
blocking	VBG	O => block	VB
multi-valued	JJ	O => multi-valued	JJ
receive	NN	O => receive	NN
operation	NN	O => operation	NN
returns	VBZ	O => return	VB
received	JJ	O => received	JJ
value	NN	O => value	NN
indication	NN	O => indication	NN
channel	NN	O => channel	NN
closed	VBN	O => close	VB
Length	NNP	B-PERSON => Length	NNP
capacity	NN	O => capacity	NN
built-in	JJ	O => built-in	JJ
functions	NNS	O => function	NN
take	VB	O => take	VB
arguments	NNS	O => argument	NN
various	JJ	O => various	JJ
types	NNS	O => type	NN
return	VB	O => return	VB
result	NN	O => result	NN
type	NN	O => type	NN
implementation	NN	O => implementation	NN
guarantees	NNS	O => guarantee	NN
result	NN	O => result	NN
always	RB	O => always	RB
fits	VBZ	O => fit	VB
capacity	NN	O => capacity	NN
slice	NN	O => slice	NN
number	NN	O => number	NN
elements	NNS	O => element	NN
there	EX	O => there	EX
space	NN	O => space	NN
allocated	VBN	O => alloc	VB
underlying	VBG	O => under	VB
array	NN	O => array	NN
time	NN	O => time	NN
following	VBG	O => follow	VB
relationship	NN	O => relationship	NN
holds	VBZ	O => hold	VB
length	NN	O => length	NN
slice	NN	O => slice	NN
map	NN	O => map	NN
channel	NN	O => channel	NN
capacity	NN	O => capacity	NN
slice	NN	O => slice	NN
channel	NN	O => channel	NN
expression	NN	O => expression	NN
constant	JJ	O => constant	JJ
string	VBG	O => string	VB
constant	JJ	O => constant	JJ
expressions	NNS	O => expression	NN
constants	NNS	O => constant	NN
type	NN	O => type	NN
array	NN	O => array	NN
pointer	NN	O => pointer	NN
array	NN	O => array	NN
expression	NN	O => expression	NN
does	VBZ	O => doe	VB
contain	VB	O => contain	VB
channel	NN	O => channel	NN
receives	NNS	O => receife	NN
non-constant	JJ	O => non-constant	JJ
function	NN	O => function	NN
calls	VBZ	O => call	VB
case	NN	O => case	NN
evaluated	VBN	O => evalu	VB
Otherwise	RB	O => Otherwise	RB
invocations	NNS	O => invocation	NN
constant	JJ	O => constant	JJ
evaluated	VBN	O => evalu	VB
Allocation	NNP	O => Allocation	NNP
built-in	JJ	O => built-in	JJ
function	NN	O => function	NN
takes	VBZ	O => take	VB
type	NN	O => type	NN
allocates	VBZ	O => alloc	VB
storage	NN	O => storage	NN
variable	NN	O => variable	NN
type	NN	O => type	NN
run	VB	O => run	VB
time	NN	O => time	NN
returns	VBZ	O => return	VB
value	NN	O => value	NN
type	NN	O => type	NN
pointing	VBG	O => point	VB
variable	NN	O => variable	NN
initialized	VBN	O => initi	VB
described	VBN	O => describ	VB
section	NN	O => section	NN
initial	JJ	O => initial	JJ
values	NNS	O => value	NN
instance	NN	O => instance	NN
allocates	VBZ	O => alloc	VB
storage	NN	O => storage	NN
variable	NN	O => variable	NN
type	NN	O => type	NN
initializes	VBZ	O => initi	VB
returns	VBZ	O => return	VB
value	NN	O => value	NN
type	NN	O => type	NN
containing	VBG	O => contain	VB
address	NN	O => address	NN
location	NN	O => location	NN
Making	VBG	O => make	VB
slices	NNS	O => slice	NN
maps	NNS	O => map	NN
channels	VB	O => channels	VB
built-in	JJ	O => built-in	JJ
function	NN	O => function	NN
takes	VBZ	O => take	VB
type	NN	O => type	NN
slice	NN	O => slice	NN
map	NN	O => map	NN
channel	NN	O => channel	NN
type	NN	O => type	NN
optionally	RB	O => optionally	RB
followed	VBN	O => follow	VB
type-specific	JJ	O => type-specific	JJ
list	NN	O => list	NN
expressions	NNS	O => expression	NN
returns	VBZ	O => return	VB
value	NN	O => value	NN
type	NN	O => type	NN
memory	NN	O => memory	NN
initialized	VBN	O => initi	VB
described	VBN	O => describ	VB
section	NN	O => section	NN
initial	JJ	O => initial	JJ
values	NNS	O => value	NN
size	NN	O => size	NN
arguments	NNS	O => argument	NN
integer	JJ	O => integer	JJ
type	NN	O => type	NN
untyped	JJ	O => untyped	JJ
constant	JJ	O => constant	JJ
constant	JJ	O => constant	JJ
size	NN	O => size	NN
argument	NN	O => argument	NN
non-negative	JJ	O => non-negative	JJ
representable	JJ	O => representable	JJ
value	NN	O => value	NN
type	NN	O => type	NN
untyped	JJ	O => untyped	JJ
constant	JJ	O => constant	JJ
given	VBN	O => given	VB
type	NN	O => type	NN
provided	VBN	O => provid	VB
constant	NN	O => constant	NN
then	RB	O => then	RB
larger	JJR	O => larger	JJR
negative	JJ	O => negative	JJ
larger	JJR	O => larger	JJR
run	VB	O => run	VB
time	NN	O => time	NN
run-time	JJ	O => run-time	JJ
panic	JJ	O => panic	JJ
occurs	NNS	O => occur	NN
Calling	VBG	O => call	VB
map	NN	O => map	NN
type	NN	O => type	NN
size	NN	O => size	NN
hint	NN	O => hint	NN
create	VB	O => create	VB
map	NN	O => map	NN
initial	JJ	O => initial	JJ
space	NN	O => space	NN
hold	VB	O => hold	VB
map	NN	O => map	NN
elements	NNS	O => element	NN
precise	JJ	O => precise	JJ
behavior	NN	O => behavior	NN
implementation-dependent	JJ	O => implementation-dependent	JJ
Appending	VBG	O => append	VB
copying	VBG	O => copi	VB
slices	NNS	O => slice	NN
built-in	JJ	O => built-in	JJ
functions	NNS	O => function	NN
assist	VB	O => assist	VB
common	JJ	O => common	JJ
slice	NN	O => slice	NN
operations	NNS	O => operation	NN
functions	NNS	O => function	NN
result	NN	O => result	NN
independent	JJ	O => independent	JJ
memory	NN	O => memory	NN
referenced	VBN	O => referenc	VB
arguments	NNS	O => argument	NN
overlaps	VBP	O => overlap	VB
variadic	JJ	O => variadic	JJ
function	NN	O => function	NN
appends	VBZ	O => append	VB
more	JJR	O => more	JJR
values	NNS	O => value	NN
type	NN	O => type	NN
slice	NN	O => slice	NN
type	NN	O => type	NN
returns	VBZ	O => return	VB
resulting	VBG	O => result	VB
slice	NN	O => slice	NN
also	RB	O => also	RB
type	NN	O => type	NN
values	NNS	O => value	NN
passed	VBD	O => pass	VB
parameter	NN	O => parameter	NN
type	NN	O => type	NN
element	NN	O => element	NN
type	NN	O => type	NN
respective	JJ	O => respective	JJ
parameter	NN	O => parameter	NN
passing	NN	O => passing	NN
rules	NNS	O => rule	NN
apply	RB	O => apply	RB
special	JJ	O => special	JJ
case	NN	O => case	NN
also	RB	O => also	RB
accepts	VBZ	O => accept	VB
argument	NN	O => argument	NN
assignable	JJ	O => assignable	JJ
type	NN	O => type	NN
second	JJ	O => second	JJ
argument	NN	O => argument	NN
string	VBG	O => string	VB
type	NN	O => type	NN
followed	VBN	O => follow	VB
form	NN	O => form	NN
appends	VBZ	O => append	VB
bytes	NNS	O => byte	NN
string	NN	O => string	NN
capacity	NN	O => capacity	NN
large	JJ	O => large	JJ
enough	RB	O => enough	RB
fit	VB	O => fit	VB
additional	JJ	O => additional	JJ
values	NNS	O => value	NN
allocates	VBZ	O => alloc	VB
new	JJ	O => new	JJ
sufficiently	RB	O => sufficiently	RB
large	JJ	O => large	JJ
underlying	VBG	O => under	VB
array	NN	O => array	NN
fits	VBZ	O => fit	VB
existing	VBG	O => exist	VB
slice	NN	O => slice	NN
elements	NNS	O => element	NN
additional	JJ	O => additional	JJ
values	NNS	O => value	NN
Otherwise	RB	O => Otherwise	RB
re-uses	VBZ	O => re-us	VB
underlying	VBG	O => under	VB
array	NN	O => array	NN
function	NN	O => function	NN
copies	VBZ	O => copi	VB
slice	NN	O => slice	NN
elements	NNS	O => element	NN
source	NN	O => source	NN
destination	NN	O => destination	NN
returns	VBZ	O => return	VB
number	NN	O => number	NN
elements	NNS	O => element	NN
copied	VBN	O => copi	VB
arguments	NNS	O => argument	NN
have	VB	O => have	VB
identical	JJ	O => identical	JJ
element	NN	O => element	NN
type	NN	O => type	NN
assignable	JJ	O => assignable	JJ
slice	NN	O => slice	NN
type	NN	O => type	NN
number	NN	O => number	NN
elements	NNS	O => element	NN
copied	VBN	O => copi	VB
minimum	NN	O => minimum	NN
special	JJ	O => special	JJ
case	NN	O => case	NN
also	RB	O => also	RB
accepts	VBZ	O => accept	VB
destination	NN	O => destination	NN
argument	NN	O => argument	NN
assignable	JJ	O => assignable	JJ
type	NN	O => type	NN
source	NN	O => source	NN
argument	NN	O => argument	NN
string	VBG	O => string	VB
type	NN	O => type	NN
form	NN	O => form	NN
copies	VBZ	O => copi	VB
bytes	NNS	O => byte	NN
string	VBG	O => string	VB
byte	NN	O => byte	NN
slice	NN	O => slice	NN
Examples	NNS	O => Example	NN
Deletion	NN	O => Deletion	NN
map	NN	O => map	NN
elements	NNS	O => element	NN
built-in	JJ	O => built-in	JJ
function	NN	O => function	NN
removes	VBZ	O => remov	VB
element	NN	O => element	NN
key	JJ	O => key	JJ
map	NN	O => map	NN
type	NN	O => type	NN
assignable	JJ	O => assignable	JJ
key	JJ	O => key	JJ
type	NN	O => type	NN
map	NN	O => map	NN
element	NN	O => element	NN
does	VBZ	O => doe	VB
exist	VB	O => exist	VB
no-op	JJ	O => no-op	JJ
Manipulating	VBG	O => manipul	VB
complex	JJ	O => complex	JJ
numbers	NNS	O => number	NN
functions	NNS	O => function	NN
assemble	JJ	O => assemble	JJ
disassemble	JJ	O => disassemble	JJ
complex	JJ	O => complex	JJ
numbers	NNS	O => number	NN
built-in	JJ	O => built-in	JJ
function	NN	O => function	NN
constructs	VBZ	O => construct	VB
complex	JJ	O => complex	JJ
value	NN	O => value	NN
floating-point	NN	O => floating-point	NN
real	JJ	O => real	JJ
imaginary	JJ	O => imaginary	JJ
part	NN	O => part	NN
extract	VB	O => extract	VB
real	JJ	O => real	JJ
imaginary	JJ	O => imaginary	JJ
parts	NNS	O => part	NN
complex	JJ	O => complex	JJ
value	NN	O => value	NN
type	NN	O => type	NN
arguments	NNS	O => argument	NN
return	VB	O => return	VB
value	NN	O => value	NN
correspond	NN	O => correspond	NN
arguments	NNS	O => argument	NN
floating-point	NN	O => floating-point	NN
type	NN	O => type	NN
return	VB	O => return	VB
type	NN	O => type	NN
complex	JJ	O => complex	JJ
type	NN	O => type	NN
corresponding	JJ	O => corresponding	JJ
floating-point	NN	O => floating-point	NN
constituents	NNS	O => constituent	NN
arguments	NNS	O => argument	NN
arguments	NNS	O => argument	NN
arguments	NNS	O => argument	NN
evaluates	VBZ	O => evalu	VB
untyped	JJ	O => untyped	JJ
constant	NN	O => constant	NN
implicitly	RB	O => implicitly	RB
converted	VBN	O => convert	VB
type	NN	O => type	NN
other	JJ	O => other	JJ
argument	NN	O => argument	NN
arguments	NNS	O => argument	NN
evaluate	VBP	O => evalu	VB
untyped	JJ	O => untyped	JJ
constants	NNS	O => constant	NN
non-complex	JJ	O => non-complex	JJ
numbers	NNS	O => number	NN
imaginary	JJ	O => imaginary	JJ
parts	NNS	O => part	NN
return	VB	O => return	VB
value	NN	O => value	NN
function	NN	O => function	NN
untyped	JJ	O => untyped	JJ
complex	JJ	O => complex	JJ
constant	JJ	O => constant	JJ
argument	NN	O => argument	NN
complex	JJ	O => complex	JJ
type	NN	O => type	NN
return	VB	O => return	VB
type	NN	O => type	NN
corresponding	JJ	O => corresponding	JJ
floating-point	NN	O => floating-point	NN
type	NN	O => type	NN
argument	NN	O => argument	NN
argument	NN	O => argument	NN
argument	NN	O => argument	NN
evaluates	VBZ	O => evalu	VB
untyped	JJ	O => untyped	JJ
constant	NN	O => constant	NN
number	NN	O => number	NN
return	VB	O => return	VB
value	NN	O => value	NN
function	NN	O => function	NN
untyped	JJ	O => untyped	JJ
floating-point	NN	O => floating-point	NN
constant	JJ	O => constant	JJ
functions	NNS	O => function	NN
together	RB	O => together	RB
form	NN	O => form	NN
inverse	NN	O => inverse	NN
so	RB	O => so	RB
value	NN	O => value	NN
complex	JJ	O => complex	JJ
type	NN	O => type	NN
operands	NNS	O => operand	NN
functions	NNS	O => function	NN
all	PDT	O => all	PDT
constants	NNS	O => constant	NN
return	VB	O => return	VB
value	NN	O => value	NN
constant	JJ	O => constant	JJ
Handling	VBG	O => handl	VB
panics	NNS	O => panic	NN
built-in	JJ	O => built-in	JJ
functions	NNS	O => function	NN
assist	VB	O => assist	VB
reporting	NN	O => reporting	NN
handling	VBG	O => handl	VB
run-time	JJ	O => run-time	JJ
panics	NNS	O => panic	NN
program-defined	JJ	O => program-defined	JJ
error	NN	O => error	NN
conditions	NNS	O => condition	NN
executing	VBG	O => execut	VB
function	NN	O => function	NN
explicit	JJ	O => explicit	JJ
call	NN	O => call	NN
run-time	JJ	O => run-time	JJ
panic	JJ	O => panic	JJ
terminates	NNS	O => terminate	NN
execution	NN	O => execution	NN
functions	NNS	O => function	NN
deferred	JJ	O => deferred	JJ
then	RB	O => then	RB
executed	VBN	O => execut	VB
usual	JJ	O => usual	JJ
Next	JJ	O => Next	JJ
deferred	JJ	O => deferred	JJ
functions	NNS	O => function	NN
run	VB	O => run	VB
caller	NN	O => caller	NN
run	VBN	O => run	VB
so	RB	O => so	RB
deferred	JJ	O => deferred	JJ
top-level	JJ	O => top-level	JJ
function	NN	O => function	NN
executing	VBG	O => execut	VB
goroutine	NN	O => goroutine	NN
point	NN	O => point	NN
program	NN	O => program	NN
terminated	VBN	O => termin	VB
error	NN	O => error	NN
condition	NN	O => condition	NN
reported	VBN	O => report	VB
including	VBG	O => includ	VB
value	NN	O => value	NN
argument	NN	O => argument	NN
termination	NN	O => termination	NN
sequence	NN	O => sequence	NN
called	VBD	O => call	VB
panicking	NN	O => panicking	NN
function	NN	O => function	NN
allows	VBZ	O => allow	VB
program	NN	O => program	NN
manage	VB	O => manage	VB
behavior	NN	O => behavior	NN
panicking	VBG	O => panick	VB
goroutine	NN	O => goroutine	NN
Suppose	VB	O => Suppose	VB
function	NN	O => function	NN
defers	VBZ	O => defer	VB
function	NN	O => function	NN
calls	VBZ	O => call	VB
panic	JJ	O => panic	JJ
occurs	NN	O => occurs	NN
function	NN	O => function	NN
goroutine	NN	O => goroutine	NN
executing	VBG	O => execut	VB
running	NN	O => running	NN
deferred	JJ	O => deferred	JJ
functions	NNS	O => function	NN
reaches	NNS	O => reach	NN
return	VB	O => return	VB
value	NN	O => value	NN
call	NN	O => call	NN
value	NN	O => value	NN
passed	VBD	O => pass	VB
call	NN	O => call	NN
returns	VBZ	O => return	VB
normally	RB	O => normally	RB
starting	VBG	O => start	VB
new	JJ	O => new	JJ
panicking	VBG	O => panick	VB
sequence	NN	O => sequence	NN
stops	NNS	O => stop	NN
case	NN	O => case	NN
state	NN	O => state	NN
functions	NNS	O => function	NN
called	VBD	O => call	VB
call	NN	O => call	NN
discarded	VBN	O => discard	VB
normal	JJ	O => normal	JJ
execution	NN	O => execution	NN
resumes	NNS	O => resume	NN
functions	NNS	O => function	NN
deferred	JJ	O => deferred	JJ
then	RB	O => then	RB
run	VB	O => run	VB
execution	NN	O => execution	NN
terminates	NNS	O => terminate	NN
returning	VBG	O => return	VB
caller	NN	O => caller	NN
return	VB	O => return	VB
value	NN	O => value	NN
following	VBG	O => follow	VB
conditions	NNS	O => condition	NN
holds	VBZ	O => hold	VB
argument	NN	O => argument	NN
was	VBD	O => was	VB
goroutine	NN	O => goroutine	NN
panicking	VBG	O => panick	VB
was	VBD	O => was	VB
called	VBD	O => call	VB
directly	RB	O => directly	RB
deferred	JJ	O => deferred	JJ
function	NN	O => function	NN
function	NN	O => function	NN
example	NN	O => example	NN
invokes	VBZ	O => invok	VB
function	NN	O => function	NN
argument	NN	O => argument	NN
protects	VBZ	O => protect	VB
callers	NNS	O => caller	NN
run-time	JJ	O => run-time	JJ
panics	NNS	O => panic	NN
raised	VBN	O => rais	VB
Bootstrapping	NNP	O => Bootstrapping	NNP
Current	NNP	O => Current	NNP
implementations	NNS	O => implementation	NN
provide	VBP	O => provid	VB
several	JJ	O => several	JJ
built-in	JJ	O => built-in	JJ
functions	NNS	O => function	NN
useful	JJ	O => useful	JJ
bootstrapping	VBG	O => bootstrap	VB
functions	NNS	O => function	NN
documented	VBN	O => document	VB
completeness	NN	O => completeness	NN
guaranteed	VBN	O => guarante	VB
stay	VB	O => stay	VB
language	NN	O => language	NN
do	VBP	O => do	VB
return	VB	O => return	VB
result	NN	O => result	NN
Implementation	NNP	O => Implementation	NNP
restriction	NN	O => restriction	NN
accept	VB	O => accept	VB
arbitrary	JJ	O => arbitrary	JJ
argument	NN	O => argument	NN
types	NNS	O => type	NN
printing	NN	O => printing	NN
boolean	NN	O => boolean	NN
numeric	JJ	O => numeric	JJ
string	VBG	O => string	VB
types	NNS	O => type	NN
supported	VBN	O => support	VB
Packages	NNS	O => Package	NN
Go	NNP	O => Go	NNP
programs	NNS	O => program	NN
constructed	VBN	O => construct	VB
linking	VBG	O => link	VB
together	RB	O => together	RB
packages	NNS	O => package	NN
package	NN	O => package	NN
turn	NN	O => turn	NN
constructed	VBN	O => construct	VB
more	JJR	O => more	JJR
source	NN	O => source	NN
files	NNS	O => file	NN
together	RB	O => together	RB
declare	VB	O => declare	VB
constants	NNS	O => constant	NN
types	NNS	O => type	NN
variables	NNS	O => variable	NN
functions	NNS	O => function	NN
belonging	VBG	O => belong	VB
package	NN	O => package	NN
accessible	JJ	O => accessible	JJ
all	PDT	O => all	PDT
files	NNS	O => file	NN
package	NN	O => package	NN
elements	NNS	O => element	NN
exported	JJ	O => exported	JJ
used	VBN	O => use	VB
package	NN	O => package	NN
Source	NNP	B-GPE => Source	NNP
file	NN	O => file	NN
organization	NN	O => organization	NN
source	NN	O => source	NN
file	NN	O => file	NN
consists	VBZ	O => consist	VB
package	NN	O => package	NN
clause	NN	O => clause	NN
defining	VBG	O => defin	VB
package	NN	O => package	NN
belongs	VBZ	O => belong	VB
followed	VBN	O => follow	VB
possibly	RB	O => possibly	RB
empty	JJ	O => empty	JJ
set	NN	O => set	NN
import	NN	O => import	NN
declarations	NNS	O => declaration	NN
declare	VB	O => declare	VB
packages	NNS	O => package	NN
contents	NNS	O => content	NN
wishes	VBZ	O => wish	VB
followed	VBN	O => follow	VB
possibly	RB	O => possibly	RB
empty	JJ	O => empty	JJ
set	NN	O => set	NN
declarations	NNS	O => declaration	NN
functions	NNS	O => function	NN
types	NNS	O => type	NN
variables	NNS	O => variable	NN
constants	NNS	O => constant	NN
Package	VB	O => Package	VB
clause	NN	O => clause	NN
package	NN	O => package	NN
clause	NN	O => clause	NN
begins	VBZ	O => begin	VB
source	NN	O => source	NN
file	NN	O => file	NN
defines	VBZ	O => defin	VB
package	NN	O => package	NN
file	NN	O => file	NN
belongs	NNS	O => belong	NN
PackageName	NNP	B-GPE => PackageName	NNP
blank	JJ	O => blank	JJ
identifier	NN	O => identifier	NN
set	NN	O => set	NN
files	NNS	O => file	NN
sharing	VBG	O => share	VB
PackageName	NNP	B-GPE => PackageName	NNP
form	NN	O => form	NN
implementation	NN	O => implementation	NN
package	NN	O => package	NN
implementation	NN	O => implementation	NN
require	VB	O => require	VB
all	PDT	O => all	PDT
source	NN	O => source	NN
files	NNS	O => file	NN
package	NN	O => package	NN
inhabit	NN	O => inhabit	NN
directory	NN	O => directory	NN
Import	NNP	O => Import	NNP
declarations	NNS	O => declaration	NN
import	NN	O => import	NN
declaration	NN	O => declaration	NN
states	VBZ	O => state	VB
source	NN	O => source	NN
file	NN	O => file	NN
containing	VBG	O => contain	VB
declaration	NN	O => declaration	NN
depends	VBZ	O => depend	VB
functionality	NN	O => functionality	NN
imported	VBN	O => import	VB
package	NN	O => package	NN
initialization	NN	O => initialization	NN
execution	NN	O => execution	NN
enables	VBZ	O => enabl	VB
access	NN	O => access	NN
exported	JJ	O => exported	JJ
identifiers	NNS	O => identifier	NN
package	NN	O => package	NN
import	NN	O => import	NN
names	VBZ	O => name	VB
identifier	NN	O => identifier	NN
PackageName	NNP	B-GPE => PackageName	NNP
used	VBN	O => use	VB
access	NN	O => access	NN
ImportPath	NNP	B-GPE => ImportPath	NNP
specifies	VBZ	O => specifi	VB
package	NN	O => package	NN
imported	VBN	O => import	VB
PackageName	NNP	B-GPE => PackageName	NNP
used	VBN	O => use	VB
qualified	JJ	O => qualified	JJ
identifiers	NNS	O => identifier	NN
access	NN	O => access	NN
exported	JJ	O => exported	JJ
identifiers	NNS	O => identifier	NN
package	NN	O => package	NN
importing	NN	O => importing	NN
source	NN	O => source	NN
file	NN	O => file	NN
declared	VBN	O => declar	VB
file	NN	O => file	NN
block	NN	O => block	NN
PackageName	NNP	B-GPE => PackageName	NNP
omitted	VBN	O => omit	VB
defaults	VBZ	O => default	VB
identifier	NN	O => identifier	NN
specified	VBN	O => specifi	VB
package	NN	O => package	NN
clause	NN	O => clause	NN
imported	VBN	O => import	VB
package	NN	O => package	NN
explicit	JJ	O => explicit	JJ
period	NN	O => period	NN
appears	VBZ	O => appear	VB
instead	RB	O => instead	RB
all	PDT	O => all	PDT
package	NN	O => package	NN
exported	JJ	O => exported	JJ
identifiers	NNS	O => identifier	NN
declared	VBN	O => declar	VB
package	NN	O => package	NN
package	NN	O => package	NN
block	NN	O => block	NN
declared	VBN	O => declar	VB
importing	NN	O => importing	NN
source	NN	O => source	NN
file	NN	O => file	NN
file	NN	O => file	NN
block	NN	O => block	NN
accessed	VBN	O => access	VB
qualifier	NN	O => qualifier	NN
interpretation	NN	O => interpretation	NN
ImportPath	NNP	B-GPE => ImportPath	NNP
implementation-dependent	JJ	O => implementation-dependent	JJ
typically	RB	O => typically	RB
substring	NN	O => substring	NN
full	JJ	O => full	JJ
file	NN	O => file	NN
compiled	JJ	O => compiled	JJ
package	NN	O => package	NN
relative	VBP	O => relat	VB
repository	NN	O => repository	NN
installed	VBD	O => instal	VB
packages	NNS	O => package	NN
Implementation	NNP	O => Implementation	NNP
restriction	NN	O => restriction	NN
compiler	NN	O => compiler	NN
restrict	VB	O => restrict	VB
ImportPaths	NNP	O => ImportPaths	NNP
non-empty	JJ	O => non-empty	JJ
strings	NNS	O => string	NN
using	VBG	O => use	VB
characters	NNS	O => character	NN
belonging	VBG	O => belong	VB
Unicode	NNP	B-GPE => Unicode	NNP
general	JJ	O => general	JJ
categories	NNS	O => category	NN
Graphic	NNP	B-GPE => Graphic	NNP
characters	NNS	O => character	NN
spaces	NNS	O => space	NN
also	RB	O => also	RB
exclude	VB	O => exclude	VB
characters	NNS	O => character	NN
Unicode	NNP	B-GPE => Unicode	NNP
replacement	NN	O => replacement	NN
character	NN	O => character	NN
Assume	NNP	O => Assume	NNP
have	VB	O => have	VB
compiled	JJ	O => compiled	JJ
package	NN	O => package	NN
containing	VBG	O => contain	VB
package	NN	O => package	NN
clause	NN	O => clause	NN
exports	NNS	O => export	NN
function	NN	O => function	NN
installed	VBD	O => instal	VB
compiled	JJ	O => compiled	JJ
package	NN	O => package	NN
file	NN	O => file	NN
identified	VBN	O => identifi	VB
table	NN	O => table	NN
illustrates	VBZ	O => illustr	VB
accessed	VBN	O => access	VB
files	NNS	O => file	NN
import	NN	O => import	NN
package	NN	O => package	NN
various	JJ	O => various	JJ
types	NNS	O => type	NN
import	NN	O => import	NN
declaration	NN	O => declaration	NN
import	NN	O => import	NN
declaration	NN	O => declaration	NN
declares	VBZ	O => declar	VB
dependency	NN	O => dependency	NN
relation	NN	O => relation	NN
importing	NN	O => importing	NN
imported	VBN	O => import	VB
package	NN	O => package	NN
illegal	JJ	O => illegal	JJ
package	NN	O => package	NN
import	NN	O => import	NN
directly	RB	O => directly	RB
indirectly	RB	O => indirectly	RB
directly	RB	O => directly	RB
import	NN	O => import	NN
package	NN	O => package	NN
referring	VBG	O => refer	VB
exported	JJ	O => exported	JJ
identifiers	NNS	O => identifier	NN
import	NN	O => import	NN
package	NN	O => package	NN
solely	RB	O => solely	RB
side-effects	NNS	O => side-effect	NN
initialization	NN	O => initialization	NN
blank	JJ	O => blank	JJ
identifier	NN	O => identifier	NN
explicit	JJ	O => explicit	JJ
package	NN	O => package	NN
example	NN	O => example	NN
package	NN	O => package	NN
Here	RB	O => Here	RB
complete	JJ	O => complete	JJ
Go	NNP	O => Go	NNP
package	NN	O => package	NN
implements	VBZ	O => implement	VB
concurrent	JJ	O => concurrent	JJ
prime	JJ	O => prime	JJ
sieve	NN	O => sieve	NN
Program	NNP	O => Program	NNP
initialization	NN	O => initialization	NN
execution	NN	O => execution	NN
value	NN	O => value	NN
storage	NN	O => storage	NN
allocated	VBN	O => alloc	VB
variable	JJ	O => variable	JJ
declaration	NN	O => declaration	NN
call	NN	O => call	NN
new	JJ	O => new	JJ
value	NN	O => value	NN
created	VBN	O => creat	VB
composite	JJ	O => composite	JJ
literal	NN	O => literal	NN
call	NN	O => call	NN
explicit	JJ	O => explicit	JJ
initialization	NN	O => initialization	NN
provided	VBN	O => provid	VB
variable	NN	O => variable	NN
value	NN	O => value	NN
given	VBN	O => given	VB
default	NN	O => default	NN
value	NN	O => value	NN
element	NN	O => element	NN
such	JJ	O => such	JJ
variable	NN	O => variable	NN
value	NN	O => value	NN
set	NN	O => set	NN
value	NN	O => value	NN
type	NN	O => type	NN
booleans	NNS	O => boolean	NN
numeric	JJ	O => numeric	JJ
types	NNS	O => type	NN
strings	NNS	O => string	NN
pointers	NNS	O => pointer	NN
functions	NNS	O => function	NN
interfaces	NNS	O => interface	NN
slices	NNS	O => slice	NN
channels	NNS	O => channel	NN
maps	NNS	O => map	NN
initialization	NN	O => initialization	NN
done	VBN	O => done	VB
recursively	RB	O => recursively	RB
so	RB	O => so	RB
instance	NN	O => instance	NN
element	NN	O => element	NN
array	NN	O => array	NN
structs	NNS	O => struct	NN
have	VB	O => have	VB
fields	NNS	O => field	NN
value	NN	O => value	NN
specified	VBN	O => specifi	VB
simple	NN	O => simple	NN
declarations	NNS	O => declaration	NN
equivalent	JJ	O => equivalent	JJ
following	VBG	O => follow	VB
holds	VBZ	O => hold	VB
also	RB	O => also	RB
true	JJ	O => true	JJ
Package	VB	O => Package	VB
initialization	NN	O => initialization	NN
package	NN	O => package	NN
package-level	NN	O => package-level	NN
variable	NN	O => variable	NN
initialization	NN	O => initialization	NN
proceeds	NNS	O => proceed	NN
stepwise	NN	O => stepwise	NN
step	NN	O => step	NN
selecting	VBG	O => select	VB
variable	NN	O => variable	NN
earliest	JJS	O => earli	JJ
declaration	NN	O => declaration	NN
order	NN	O => order	NN
dependencies	NNS	O => dependency	NN
uninitialized	JJ	O => uninitialized	JJ
variables	NNS	O => variable	NN
More	RBR	O => More	RBR
precisely	RB	O => precisely	RB
package-level	NN	O => package-level	NN
variable	NN	O => variable	NN
considered	VBN	O => consid	VB
ready	VBP	O => readi	VB
initialization	NN	O => initialization	NN
yet	RB	O => yet	RB
initialized	VBN	O => initi	VB
initialization	NN	O => initialization	NN
expression	NN	O => expression	NN
initialization	NN	O => initialization	NN
expression	NN	O => expression	NN
dependencies	NNS	O => dependency	NN
uninitialized	JJ	O => uninitialized	JJ
variables	NNS	O => variable	NN
Initialization	NNP	O => Initialization	NNP
proceeds	NNS	O => proceed	NN
repeatedly	RB	O => repeatedly	RB
initializing	VBG	O => initi	VB
next	JJ	O => next	JJ
package-level	NN	O => package-level	NN
variable	NN	O => variable	NN
earliest	JJS	O => earli	JJ
declaration	NN	O => declaration	NN
order	NN	O => order	NN
ready	VBP	O => readi	VB
initialization	NN	O => initialization	NN
there	EX	O => there	EX
variables	NNS	O => variable	NN
ready	VBP	O => readi	VB
initialization	NN	O => initialization	NN
variables	NNS	O => variable	NN
still	RB	O => still	RB
uninitialized	JJ	O => uninitialized	JJ
process	NN	O => process	NN
ends	VBZ	O => end	VB
variables	NNS	O => variable	NN
part	NN	O => part	NN
more	JJR	O => more	JJR
initialization	NN	O => initialization	NN
cycles	NNS	O => cycle	NN
program	NN	O => program	NN
valid	JJ	O => valid	JJ
Multiple	NNP	O => Multiple	NNP
variables	NNS	O => variable	NN
left-hand	JJ	O => left-hand	JJ
side	NN	O => side	NN
variable	NN	O => variable	NN
declaration	NN	O => declaration	NN
initialized	VBN	O => initi	VB
single	JJ	O => single	JJ
multi-valued	JJ	O => multi-valued	JJ
expression	NN	O => expression	NN
right-hand	JJ	O => right-hand	JJ
side	NN	O => side	NN
initialized	VBN	O => initi	VB
together	RB	O => together	RB
variables	NNS	O => variable	NN
left-hand	JJ	O => left-hand	JJ
side	NN	O => side	NN
initialized	VBN	O => initi	VB
all	PDT	O => all	PDT
variables	NNS	O => variable	NN
initialized	VBN	O => initi	VB
step	NN	O => step	NN
purpose	NN	O => purpose	NN
package	NN	O => package	NN
initialization	NN	O => initialization	NN
blank	JJ	O => blank	JJ
variables	NNS	O => variable	NN
treated	VBN	O => treat	VB
other	JJ	O => other	JJ
variables	NNS	O => variable	NN
declarations	NNS	O => declaration	NN
declaration	NN	O => declaration	NN
order	NN	O => order	NN
variables	NNS	O => variable	NN
declared	VBN	O => declar	VB
multiple	NN	O => multiple	NN
files	NNS	O => file	NN
determined	VBN	O => determin	VB
order	NN	O => order	NN
files	NNS	O => file	NN
presented	VBN	O => present	VB
compiler	NN	O => compiler	NN
Variables	NNS	O => Variable	NN
declared	VBN	O => declar	VB
file	NN	O => file	NN
declared	VBN	O => declar	VB
variables	NNS	O => variable	NN
declared	VBN	O => declar	VB
second	JJ	O => second	JJ
file	NN	O => file	NN
so	RB	O => so	RB
Dependency	NNP	O => Dependency	NNP
analysis	NN	O => analysis	NN
does	VBZ	O => doe	VB
rely	VB	O => rely	VB
actual	JJ	O => actual	JJ
values	NNS	O => value	NN
variables	NNS	O => variable	NN
lexical	JJ	O => lexical	JJ
references	VBZ	O => refer	VB
source	NN	O => source	NN
analyzed	VBN	O => analyz	VB
transitively	RB	O => transitively	RB
instance	NN	O => instance	NN
variable	NN	O => variable	NN
initialization	NN	O => initialization	NN
expression	NN	O => expression	NN
refers	NNS	O => refer	NN
function	NN	O => function	NN
body	NN	O => body	NN
refers	NNS	O => refer	NN
variable	NN	O => variable	NN
then	RB	O => then	RB
depends	VBZ	O => depend	VB
Specifically	RB	O => Specifically	RB
reference	NN	O => reference	NN
variable	NN	O => variable	NN
function	NN	O => function	NN
identifier	NN	O => identifier	NN
denoting	VBG	O => denot	VB
variable	NN	O => variable	NN
function	NN	O => function	NN
reference	NN	O => reference	NN
method	NN	O => method	NN
method	NN	O => method	NN
value	NN	O => value	NN
method	NN	O => method	NN
expression	NN	O => expression	NN
form	NN	O => form	NN
static	JJ	O => static	JJ
type	NN	O => type	NN
interface	NN	O => interface	NN
type	NN	O => type	NN
method	NN	O => method	NN
method	NN	O => method	NN
set	NN	O => set	NN
immaterial	JJ	O => immaterial	JJ
resulting	VBG	O => result	VB
function	NN	O => function	NN
value	NN	O => value	NN
invoked	VBN	O => invok	VB
variable	JJ	O => variable	JJ
function	NN	O => function	NN
method	NN	O => method	NN
depends	VBZ	O => depend	VB
variable	NN	O => variable	NN
initialization	NN	O => initialization	NN
expression	NN	O => expression	NN
body	NN	O => body	NN
functions	NNS	O => function	NN
methods	NNS	O => method	NN
contains	VBZ	O => contain	VB
reference	NN	O => reference	NN
function	NN	O => function	NN
method	NN	O => method	NN
depends	VBZ	O => depend	VB
example	NN	O => example	NN
given	VBN	O => given	VB
declarations	NNS	O => declaration	NN
initialization	NN	O => initialization	NN
order	NN	O => order	NN
Note	NN	O => Note	NN
order	NN	O => order	NN
subexpressions	NNS	O => subexpression	NN
initialization	NN	O => initialization	NN
expressions	NNS	O => expression	NN
irrelevant	JJ	O => irrelevant	JJ
result	NN	O => result	NN
initialization	NN	O => initialization	NN
order	NN	O => order	NN
example	NN	O => example	NN
Dependency	NNP	O => Dependency	NNP
analysis	NN	O => analysis	NN
performed	VBN	O => perform	VB
package	NN	O => package	NN
references	VBZ	O => refer	VB
referring	VBG	O => refer	VB
variables	NNS	O => variable	NN
functions	NNS	O => function	NN
non-interface	NN	O => non-interface	NN
methods	NNS	O => method	NN
declared	VBN	O => declar	VB
current	JJ	O => current	JJ
package	NN	O => package	NN
considered	VBN	O => consid	VB
other	JJ	O => other	JJ
hidden	JJ	O => hidden	JJ
data	NNS	O => data	NNS
dependencies	NNS	O => dependency	NN
exists	VBZ	O => exist	VB
variables	NNS	O => variable	NN
initialization	NN	O => initialization	NN
order	NN	O => order	NN
variables	NNS	O => variable	NN
unspecified	JJ	O => unspecified	JJ
instance	NN	O => instance	NN
given	VBN	O => given	VB
declarations	NNS	O => declaration	NN
variable	NN	O => variable	NN
initialized	VBN	O => initi	VB
initialized	VBN	O => initi	VB
thus	RB	O => thus	RB
also	RB	O => also	RB
moment	NN	O => moment	NN
called	VBD	O => call	VB
initialized	VBN	O => initi	VB
specified	VBN	O => specifi	VB
Variables	NNS	O => Variable	NN
also	RB	O => also	RB
initialized	VBN	O => initi	VB
using	VBG	O => use	VB
functions	NNS	O => function	NN
named	VBN	O => name	VB
declared	VBN	O => declar	VB
package	NN	O => package	NN
block	NN	O => block	NN
arguments	NNS	O => argument	NN
result	NN	O => result	NN
parameters	NNS	O => parameter	NN
Multiple	NNP	O => Multiple	NNP
such	JJ	O => such	JJ
functions	NNS	O => function	NN
defined	VBN	O => defin	VB
package	NN	O => package	NN
even	RB	O => even	RB
single	JJ	O => single	JJ
source	NN	O => source	NN
file	NN	O => file	NN
package	NN	O => package	NN
block	NN	O => block	NN
identifier	NN	O => identifier	NN
used	VBN	O => use	VB
declare	VB	O => declare	VB
functions	NNS	O => function	NN
yet	RB	O => yet	RB
identifier	NN	O => identifier	NN
declared	VBN	O => declar	VB
Thus	NNP	O => Thus	NNP
functions	NNS	O => function	NN
cannot	VBP	O => cannot	VB
referred	VBN	O => refer	VB
anywhere	RB	O => anywhere	RB
program	NN	O => program	NN
package	NN	O => package	NN
imports	NNS	O => import	NN
initialized	VBN	O => initi	VB
assigning	VBG	O => assign	VB
initial	JJ	O => initial	JJ
values	NNS	O => value	NN
all	PDT	O => all	PDT
package-level	NN	O => package-level	NN
variables	NNS	O => variable	NN
followed	VBN	O => follow	VB
calling	VBG	O => call	VB
all	PDT	O => all	PDT
functions	NNS	O => function	NN
order	NN	O => order	NN
appear	VBP	O => appear	VB
source	NN	O => source	NN
possibly	RB	O => possibly	RB
multiple	NN	O => multiple	NN
files	NNS	O => file	NN
presented	VBN	O => present	VB
compiler	NN	O => compiler	NN
package	NN	O => package	NN
imports	VBZ	O => import	VB
imported	VBN	O => import	VB
packages	NNS	O => package	NN
initialized	VBN	O => initi	VB
initializing	VBG	O => initi	VB
package	NN	O => package	NN
multiple	NN	O => multiple	NN
packages	NNS	O => package	NN
import	NN	O => import	NN
package	NN	O => package	NN
imported	VBN	O => import	VB
package	NN	O => package	NN
initialized	VBN	O => initi	VB
once	RB	O => once	RB
importing	NN	O => importing	NN
packages	NNS	O => package	NN
construction	NN	O => construction	NN
guarantees	NNS	O => guarantee	NN
there	EX	O => there	EX
cyclic	JJ	O => cyclic	JJ
initialization	NN	O => initialization	NN
dependencies	NNS	O => dependency	NN
Package	VB	O => Package	VB
initialization—variable	JJ	O => initialization—variable	JJ
initialization	NN	O => initialization	NN
invocation	NN	O => invocation	NN
functions—happens	NNS	O => functions—happen	NN
single	JJ	O => single	JJ
goroutine	NN	O => goroutine	NN
sequentially	RB	O => sequentially	RB
package	NN	O => package	NN
time	NN	O => time	NN
function	NN	O => function	NN
launch	VB	O => launch	VB
other	JJ	O => other	JJ
goroutines	NNS	O => goroutine	NN
run	VB	O => run	VB
concurrently	RB	O => concurrently	RB
initialization	NN	O => initialization	NN
code	NN	O => code	NN
However	RB	O => However	RB
initialization	NN	O => initialization	NN
always	RB	O => always	RB
sequences	VBZ	O => sequenc	VB
functions	NNS	O => function	NN
invoke	VB	O => invoke	VB
next	JJ	O => next	JJ
previous	JJ	O => previous	JJ
returned	VBN	O => return	VB
ensure	VB	O => ensure	VB
reproducible	JJ	O => reproducible	JJ
initialization	NN	O => initialization	NN
behavior	NN	O => behavior	NN
build	JJ	O => build	JJ
systems	NNS	O => system	NN
encouraged	VBN	O => encourag	VB
present	VB	O => present	VB
multiple	NN	O => multiple	NN
files	NNS	O => file	NN
belonging	VBG	O => belong	VB
package	NN	O => package	NN
lexical	JJ	O => lexical	JJ
file	NN	O => file	NN
order	NN	O => order	NN
compiler	NN	O => compiler	NN
Program	NNP	O => Program	NNP
execution	NN	O => execution	NN
complete	JJ	O => complete	JJ
program	NN	O => program	NN
created	VBN	O => creat	VB
linking	VBG	O => link	VB
single	JJ	O => single	JJ
unimported	JJ	O => unimported	JJ
package	NN	O => package	NN
called	VBD	O => call	VB
main	JJ	O => main	JJ
package	NN	O => package	NN
all	PDT	O => all	PDT
packages	NNS	O => package	NN
imports	VBZ	O => import	VB
transitively	RB	O => transitively	RB
main	JJ	O => main	JJ
package	NN	O => package	NN
have	VB	O => have	VB
package	NN	O => package	NN
declare	VB	O => declare	VB
function	NN	O => function	NN
takes	VBZ	O => take	VB
arguments	NNS	O => argument	NN
returns	VBZ	O => return	VB
value	NN	O => value	NN
Program	NNP	O => Program	NNP
execution	NN	O => execution	NN
begins	VBZ	O => begin	VB
initializing	VBG	O => initi	VB
main	JJ	O => main	JJ
package	NN	O => package	NN
then	RB	O => then	RB
invoking	VBG	O => invok	VB
function	NN	O => function	NN
function	NN	O => function	NN
invocation	NN	O => invocation	NN
returns	NNS	O => return	NN
program	NN	O => program	NN
exits	VBZ	O => exit	VB
does	VBZ	O => doe	VB
wait	VB	O => wait	VB
other	JJ	O => other	JJ
non-	JJ	O => non-	JJ
goroutines	NNS	O => goroutine	NN
complete	VB	O => complete	VB
Errors	NNPS	O => Error	NN
predeclared	JJ	O => predeclared	JJ
type	NN	O => type	NN
defined	VBN	O => defin	VB
conventional	JJ	O => conventional	JJ
interface	NN	O => interface	NN
representing	VBG	O => repres	VB
error	NN	O => error	NN
condition	NN	O => condition	NN
nil	JJ	O => nil	JJ
value	NN	O => value	NN
representing	VBG	O => repres	VB
error	NN	O => error	NN
instance	NN	O => instance	NN
function	NN	O => function	NN
read	VB	O => read	VB
data	NNS	O => data	NNS
file	NN	O => file	NN
defined	VBN	O => defin	VB
Run-time	JJ	O => Run-time	JJ
panics	NNS	O => panic	NN
Execution	NN	O => Execution	NN
errors	NNS	O => error	NN
such	JJ	O => such	JJ
attempting	VBG	O => attempt	VB
index	NN	O => index	NN
array	NN	O => array	NN
bounds	NNS	O => bound	NN
trigger	VBP	O => trigger	VB
run-time	JJ	O => run-time	JJ
panic	JJ	O => panic	JJ
equivalent	NN	O => equivalent	NN
call	NN	O => call	NN
built-in	JJ	O => built-in	JJ
function	NN	O => function	NN
value	NN	O => value	NN
implementation-defined	JJ	O => implementation-defined	JJ
interface	NN	O => interface	NN
type	NN	O => type	NN
type	NN	O => type	NN
satisfies	VBZ	O => satisfi	VB
predeclared	JJ	O => predeclared	JJ
interface	NN	O => interface	NN
type	NN	O => type	NN
exact	JJ	O => exact	JJ
error	NN	O => error	NN
values	NNS	O => value	NN
represent	VBP	O => repres	VB
distinct	JJ	O => distinct	JJ
run-time	JJ	O => run-time	JJ
error	NN	O => error	NN
conditions	NNS	O => condition	NN
unspecified	JJ	O => unspecified	JJ
System	NN	O => System	NN
considerations	NNS	O => consideration	NN
Package	VB	O => Package	VB
built-in	JJ	O => built-in	JJ
package	NN	O => package	NN
known	VBN	O => known	VB
compiler	NN	O => compiler	NN
accessible	JJ	O => accessible	JJ
import	NN	O => import	NN
path	NN	O => path	NN
provides	VBZ	O => provid	VB
facilities	NNS	O => facility	NN
low-level	JJ	O => low-level	JJ
programming	NN	O => programming	NN
including	VBG	O => includ	VB
operations	NNS	O => operation	NN
violate	VBP	O => violat	VB
type	NN	O => type	NN
system	NN	O => system	NN
package	NN	O => package	NN
using	VBG	O => use	VB
vetted	VBN	O => vet	VB
manually	RB	O => manually	RB
type	NN	O => type	NN
safety	NN	O => safety	NN
portable	JJ	O => portable	JJ
package	NN	O => package	NN
provides	VBZ	O => provid	VB
following	VBG	O => follow	VB
interface	NN	O => interface	NN
pointer	NN	O => pointer	NN
type	NN	O => type	NN
value	NN	O => value	NN
dereferenced	VBN	O => dereferenc	VB
pointer	NN	O => pointer	NN
value	NN	O => value	NN
underlying	VBG	O => under	VB
type	NN	O => type	NN
converted	VBN	O => convert	VB
type	NN	O => type	NN
underlying	VBG	O => under	VB
type	NN	O => type	NN
vice	NN	O => vice	NN
versa	NN	O => versa	NN
effect	NN	O => effect	NN
converting	VBG	O => convert	VB
implementation-defined	JJ	O => implementation-defined	JJ
functions	NNS	O => function	NN
take	VB	O => take	VB
expression	NN	O => expression	NN
type	NN	O => type	NN
return	VB	O => return	VB
alignment	NN	O => alignment	NN
size	NN	O => size	NN
respectively	RB	O => respectively	RB
hypothetical	JJ	O => hypothetical	JJ
variable	NN	O => variable	NN
was	VBD	O => was	VB
declared	VBN	O => declar	VB
function	NN	O => function	NN
takes	VBZ	O => take	VB
possibly	RB	O => possibly	RB
parenthesized	VBN	O => parenthes	VB
selector	NN	O => selector	NN
denoting	VBG	O => denot	VB
field	NN	O => field	NN
struct	NN	O => struct	NN
denoted	VBN	O => denot	VB
returns	VBZ	O => return	VB
field	NN	O => field	NN
offset	NN	O => offset	NN
bytes	NNS	O => byte	NN
relative	VBP	O => relat	VB
struct	NN	O => struct	NN
address	NN	O => address	NN
embedded	JJ	O => embedded	JJ
field	NN	O => field	NN
reachable	JJ	O => reachable	JJ
pointer	NN	O => pointer	NN
indirections	NNS	O => indirection	NN
fields	NNS	O => field	NN
struct	NN	O => struct	NN
struct	NN	O => struct	NN
field	NN	O => field	NN
Computer	NNP	O => Computer	NNP
architectures	VBZ	O => architectur	VB
require	VB	O => require	VB
memory	NN	O => memory	NN
addresses	NNS	O => address	NN
aligned	VBN	O => align	VB
addresses	NNS	O => address	NN
variable	NN	O => variable	NN
multiple	NN	O => multiple	NN
factor	NN	O => factor	NN
variable	NN	O => variable	NN
type	NN	O => type	NN
alignment	NN	O => alignment	NN
function	NN	O => function	NN
takes	VBZ	O => take	VB
expression	NN	O => expression	NN
denoting	VBG	O => denot	VB
variable	NN	O => variable	NN
type	NN	O => type	NN
returns	VBZ	O => return	VB
alignment	NN	O => alignment	NN
type	NN	O => type	NN
variable	NN	O => variable	NN
bytes	NNS	O => byte	NN
variable	NN	O => variable	NN
Calls	VBZ	O => call	VB
compile-time	JJ	O => compile-time	JJ
constant	JJ	O => constant	JJ
expressions	NNS	O => expression	NN
type	NN	O => type	NN
Size	NNP	B-PERSON => Size	NNP
alignment	NN	O => alignment	NN
guarantees	NNS	O => guarantee	NN
numeric	JJ	O => numeric	JJ
types	NNS	O => type	NN
following	VBG	O => follow	VB
sizes	NNS	O => size	NN
guaranteed	VBN	O => guarante	VB
following	VBG	O => follow	VB
minimal	JJ	O => minimal	JJ
alignment	NN	O => alignment	NN
properties	NNS	O => property	NN
guaranteed	VBN	O => guarante	VB
variable	NN	O => variable	NN
type	NN	O => type	NN
least	JJS	O => least	JJS
variable	NN	O => variable	NN
struct	NN	O => struct	NN
type	NN	O => type	NN
largest	JJS	O => larg	JJ
all	PDT	O => all	PDT
values	NNS	O => value	NN
field	NN	O => field	NN
least	JJS	O => least	JJS
variable	NN	O => variable	NN
array	NN	O => array	NN
type	NN	O => type	NN
alignment	NN	O => alignment	NN
variable	NN	O => variable	NN
array	NN	O => array	NN
element	NN	O => element	NN
type	NN	O => type	NN
struct	NN	O => struct	NN
array	NN	O => array	NN
type	NN	O => type	NN
size	NN	O => size	NN
contains	VBZ	O => contain	VB
fields	NNS	O => field	NN
elements	NNS	O => element	NN
respectively	RB	O => respectively	RB
have	VB	O => have	VB
size	NN	O => size	NN
greater	JJR	O => greater	JJR
distinct	JJ	O => distinct	JJ
zero-size	JJ	O => zero-size	JJ
variables	NNS	O => variable	NN
have	VB	O => have	VB
address	NN	O => address	NN
memory	NN	O => memory	NN
